#!/bin/sh
# ${1} is number of user partition
# ${2} is size of first user partition, if enabled
# ${3} is size of second user partition, if enabled
# ${4} is the device
# ${5} is the dtb for solo/dl
# ${6} is the dtb for quad
# ${7} is the NOVAsomParams file
# ${8} is the ramdisk size

. ./functions

DISK=${4}

SPL_FILE="/Devel/NOVAsom_SDK/Bootloader/u-boot-novasomM9-2018.03/spl/sunxi-spl.bin"
UBOOT_IMG="/Devel/NOVAsom_SDK/Bootloader/u-boot-novasomM9-2018.03/u-boot.itb"
KERNEL="/Devel/NOVAsom_SDK/Blobs/linux-allw-4.15.0_Image"
DTB_FILE="/Devel/NOVAsom_SDK/Kernel/linux-allw-4.15.0/arch/arm64/boot/dts/allwinner/novasom_m9.dtb"
UINITRD="/Devel/NOVAsom_SDK/Deploy/uInitrd"
NOVASOMPARAMS="/Devel/NOVAsom_SDK/Utils/BootParameters/$7"
DEPLOY_DIR="/Devel/NOVAsom_SDK/Deploy"
RAMDISK_SIZE="$8"
echo "NOVASOMPARAMS is $NOVASOMPARAMS"


echo "1" > /tmp/result

FILES="$SPL_FILE $UBOOT_IMG"
for i in ${FILES}; do
	if ! [ -f ${i} ]; then
		echo "File ${i} not found"
		exit
	fi
done

if [ ! -b ${DISK} ]; then
       echo "${DISK} not found"
       exit
fi

echo "Everything is ok, proceeding"

sudo umount ${DISK}* >/dev/null 2>&1
echo "Writing uSD"
sleep 1
sudo sgdisk -Z ${DISK} >/dev/null 2>&1
sudo echo -n "Writing u-boot ... "
sudo dd if=/dev/zero of=${DISK} bs=1M count=1; sync
cat ${SPL_FILE} ${UBOOT_IMG}  > /Devel/NOVAsom_SDK/Utils/allw/u-boot-sunxi-with-spl.bin
sync
sudo dd if=/Devel/NOVAsom_SDK/Utils/allw/u-boot-sunxi-with-spl.bin of=${DISK} bs=8k seek=1

echo "Done"

format_usd ${1} ${2} ${3} ${DISK}
if [ "$?" = "1" ]; then
	echo "Error formatting uSD!"
	exit
fi


rm -rf tmpmount
mkdir tmpmount
sleep 1
sudo mount ${DISK}1 tmpmount
[ "$?" != "0" ] && exit
echo -n "Copying `basename ${KERNEL}` ..."
sudo cp ${KERNEL} tmpmount/Image
[ "$?" != "0" ] && exit
echo "Done"
echo -n "Copying `basename ${DTB_FILE}` ..."
sudo cp ${DTB_FILE} tmpmount/.
echo "Done"
echo -n "Copying `basename ${UINITRD}` ..."
sudo cp ${UINITRD} tmpmount/.
[ "$?" != "0" ] && exit
echo "Done"
#echo -n "Copying `basename ${NOVASOMPARAMS}` ..."
#echo "setramsize=setenv rdsize ${RAMDISK_SIZE}" > ${DEPLOY_DIR}/NOVAsomParams
#cat ${NOVASOMPARAMS} >> ${DEPLOY_DIR}/NOVAsomParams
#sudo cp ${DEPLOY_DIR}/NOVAsomParams tmpmount/.
#[ "$?" != "0" ] && exit
sudo umount tmpmount
sync

echo "0" > /tmp/result
echo "Write finished succesfully"
