#!/bin/sh
# ${1} is number of user partition
# ${2} is size of first user partition, if enabled
# ${3} is size of second user partition, if enabled
# ${4} is the device
# ${5} is the dtb for solo/dl
# ${6} is the dtb for quad
# ${7} is the NOVAsomParams file
# ${8} is the ramdisk size

. ./functions

DISK=${4}

SPL_FILE="/Devel/NOVAsom_SDK/Bootloader/u-boot-NOVAsomH5-2017.11/spl/sunxi-spl.bin"
UBOOT_IMG="/Devel/NOVAsom_SDK/Bootloader/u-boot-NOVAsomH5-2017.11/u-boot.itb"
KERNEL="/Devel/NOVAsom_SDK/Kernel/linux-allw-4.14.0/arch/arm64/boot/Image"
DTB_FILE="/Devel/NOVAsom_SDK/Kernel/linux-allw-4.14.0/arch/arm64/boot/dts/allwinner/sun50i-h5-orangepi-prime.dtb"
UINITRD="/Devel/NOVAsom_SDK/Deploy/uInitrd"
NOVASOMPARAMS="/Devel/NOVAsom_SDK/Utils/BootParameters/$7"
DEPLOY_DIR="/Devel/NOVAsom_SDK/Deploy"
RAMDISK_SIZE="$8"
echo "NOVASOMPARAMS is $NOVASOMPARAMS"


echo "1" > /tmp/result

FILES="$SPL_FILE $UBOOT_IMG $KERNEL $DTB_FILE"
for i in ${FILES}; do
	if ! [ -f ${i} ]; then
		echo "File ${i} not found"
		exit
	fi
done

if [ ! -b ${DISK} ]; then
       echo "${DISK} not found"
       exit
fi

echo "Everything is ok, proceeding"

sudo umount ${DISK}* >/dev/null 2>&1
echo "Writing uSD"
sleep 1
sudo sgdisk -Z ${DISK} >/dev/null 2>&1
sudo dd if=/dev/zero of=${DISK} bs=1M count=1; sync
sudo echo -n "Writing u-boot ... "
sudo dd if=${SPL_FILE} of=${DISK} bs=1024 seek=8; sync
sudo dd if=${UBOOT_IMG} of=${DISK} bs=1024 seek=40; sync
echo "Done"

format_usd ${1} ${2} ${3} ${DISK}
if [ "$?" = "1" ]; then
	echo "Error formatting uSD!"
	exit
fi

rm -rf tmpmount
mkdir tmpmount
sleep 1
sudo mount ${DISK}1 tmpmount
[ "$?" != "0" ] && exit
sudo mkdir tmpmount/NOVAboot

echo -n "Copying `basename ${UBOOT_IMG}` ..."
sudo cp ${UBOOT_IMG} tmpmount/NOVAboot/.
[ "$?" != "0" ] && exit
echo "Done"
echo -n "Copying `basename ${KERNEL}` ..."
sudo cp ${KERNEL} tmpmount/NOVAboot/.
[ "$?" != "0" ] && exit
echo "Done"
echo -n "Copying `basename ${DTB_FILE}` ..."
sudo cp ${DTB_FILE} tmpmount/NOVAboot/.
echo "Done"
echo -n "Copying `basename ${UINITRD}` ..."
sudo cp ${UINITRD} tmpmount/NOVAboot/.
[ "$?" != "0" ] && exit
echo "Done"
#echo -n "Copying `basename ${NOVASOMPARAMS}` ..."
#echo "setramsize=setenv rdsize ${RAMDISK_SIZE}" > ${DEPLOY_DIR}/NOVAsomParams
#cat ${NOVASOMPARAMS} >> ${DEPLOY_DIR}/NOVAsomParams
#sudo cp ${DEPLOY_DIR}/NOVAsomParams tmpmount/.
#[ "$?" != "0" ] && exit
sudo umount tmpmount
sync

cd ${DEPLOY_DIR}
rm -f $SPL_FILE $UBOOT_IMG $KERNEL $DTB_FILE
ln -s $SPL_FILE
ln -s $UBOOT_IMG
ln -s $KERNEL
ln -s $DTB_FILE


echo "0" > /tmp/result
echo "Write finished succesfully"
