diff -Naur -x gcc buildroot-2016.05/package/Config.in Base/package/Config.in
--- buildroot-2016.05/package/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/Config.in	2017-10-09 17:21:47.215098361 +0200
@@ -17,7 +17,7 @@
 	source "package/flite/Config.in"
 	source "package/gmrender-resurrect/Config.in"
 	source "package/gstreamer/Config.in"
-	source "package/gstreamer1/Config.in"
+	source "package/novasom_gstreamer/Config.in"
 	source "package/jack2/Config.in"
 	source "package/kodi/Config.in"
 	source "package/lame/Config.in"
@@ -276,7 +276,10 @@
 	source "package/sdl_net/Config.in"
 	source "package/sdl_sound/Config.in"
 	source "package/sdl_ttf/Config.in"
-	source "package/sdl2/Config.in"
+        source "package/sdl2/Config.in"
+        source "package/sdl2_gfx/Config.in"
+        source "package/sdl2_image/Config.in"
+        source "package/sdl2_ttf/Config.in"
 
 comment "Other GUIs"
 	source "package/qt/Config.in"
@@ -1086,7 +1089,6 @@
 	source "package/libfslparser/Config.in"
 	source "package/libfslvpuwrap/Config.in"
 	source "package/libhdhomerun/Config.in"
-	source "package/libimxvpuapi/Config.in"
 	source "package/libmatroska/Config.in"
 	source "package/libmms/Config.in"
 	source "package/libmpeg2/Config.in"
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/Config.in Base/package/freescale-imx/Config.in
--- buildroot-2016.05/package/freescale-imx/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/Config.in	2017-10-09 17:21:47.215098361 +0200
@@ -49,11 +49,7 @@
 		BR2_PACKAGE_FREESCALE_IMX_PLATFORM_IMX53 || \
 		BR2_PACKAGE_FREESCALE_IMX_PLATFORM_IMX6Q
 
-source "package/freescale-imx/imx-kobs/Config.in"
-source "package/freescale-imx/imx-lib/Config.in"
 source "package/freescale-imx/imx-uuc/Config.in"
-source "package/freescale-imx/imx-vpu/Config.in"
-source "package/freescale-imx/firmware-imx/Config.in"
 if (BR2_PACKAGE_FREESCALE_IMX_PLATFORM_IMX51 || BR2_PACKAGE_FREESCALE_IMX_PLATFORM_IMX53)
 source "package/freescale-imx/gpu-amd-bin-mx51/Config.in"
 source "package/freescale-imx/libz160/Config.in"
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/firmware-imx/Config.in Base/package/freescale-imx/firmware-imx/Config.in
--- buildroot-2016.05/package/freescale-imx/firmware-imx/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/firmware-imx/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-config BR2_PACKAGE_FIRMWARE_IMX
-	bool "firmware-imx"
-	depends on BR2_arm # Only relevant for i.MX
-	help
-	  Firmware blobs for the Freescale i.MX SoCs.
-
-	  It contains blobs for SDMA and VPU.
-
-	  This library is provided by Freescale as-is and doesn't have
-	  an upstream.
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/firmware-imx/firmware-imx.hash Base/package/freescale-imx/firmware-imx/firmware-imx.hash
--- buildroot-2016.05/package/freescale-imx/firmware-imx/firmware-imx.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/firmware-imx/firmware-imx.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-sha256 fd14c3666eb3c12f4f2665d95caf383bb1d0277bb12e2de28fefc8d1230604f2  firmware-imx-5.3.bin
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/firmware-imx/firmware-imx.mk Base/package/freescale-imx/firmware-imx/firmware-imx.mk
--- buildroot-2016.05/package/freescale-imx/firmware-imx/firmware-imx.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/firmware-imx/firmware-imx.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-################################################################################
-#
-# firmware-imx
-#
-################################################################################
-
-FIRMWARE_IMX_VERSION = 5.3
-FIRMWARE_IMX_SITE = $(FREESCALE_IMX_SITE)
-FIRMWARE_IMX_SOURCE = firmware-imx-$(FIRMWARE_IMX_VERSION).bin
-
-FIRMWARE_IMX_LICENSE = Freescale Semiconductor Software License Agreement, \
-	Atheros license (ath6k)
-FIRMWARE_IMX_LICENSE_FILES = EULA COPYING
-FIRMWARE_IMX_REDISTRIBUTE = NO
-
-FIRMWARE_IMX_BLOBS = sdma vpu
-
-define FIRMWARE_IMX_EXTRACT_CMDS
-	$(call FREESCALE_IMX_EXTRACT_HELPER,$(DL_DIR)/$(FIRMWARE_IMX_SOURCE))
-endef
-
-define FIRMWARE_IMX_INSTALL_TARGET_CMDS
-	mkdir -p $(TARGET_DIR)/lib/firmware/imx
-	for blobdir in $(FIRMWARE_IMX_BLOBS); do \
-		cp -r $(@D)/firmware/$${blobdir} $(TARGET_DIR)/lib/firmware; \
-	done
-	cp -r $(@D)/firmware/epdc $(TARGET_DIR)/lib/firmware/imx
-	mv $(TARGET_DIR)/lib/firmware/imx/epdc/epdc_ED060XH2C1.fw.nonrestricted \
-		$(TARGET_DIR)/lib/firmware/imx/epdc/epdc_ED060XH2C1.fw
-endef
-
-$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.hash Base/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.hash
--- buildroot-2016.05/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-# locally computed
-sha256	3ea201f91ce9b56455e4983ab1055e8175415fbbf2800dc097d47e78ceefba34  imx-gpu-viv-5.0.11.p7.4-sfp.bin
-sha256	b80838104f2f2e3b0baf2f1aacdca263c1c92589ce919b3be40aaad23f686b7f  imx-gpu-viv-5.0.11.p7.4-hfp.bin
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.mk Base/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.mk
--- buildroot-2016.05/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-gpu-viv/imx-gpu-viv.mk	2017-10-09 17:21:47.215098361 +0200
@@ -4,7 +4,8 @@
 #
 ################################################################################
 
-IMX_GPU_VIV_BASE_VERSION = 5.0.11.p7.4
+#IMX_GPU_VIV_BASE_VERSION = 5.0.11.p7.4
+IMX_GPU_VIV_BASE_VERSION = 5.0.11.p4.5
 ifeq ($(BR2_ARM_EABIHF),y)
 IMX_GPU_VIV_VERSION = $(IMX_GPU_VIV_BASE_VERSION)-hfp
 else
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-kobs/0001-Fix-musl-build.patch Base/package/freescale-imx/imx-kobs/0001-Fix-musl-build.patch
--- buildroot-2016.05/package/freescale-imx/imx-kobs/0001-Fix-musl-build.patch	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-kobs/0001-Fix-musl-build.patch	1970-01-01 01:00:00.000000000 +0100
@@ -1,39 +0,0 @@
-[PATCH] Fix musl build
-
-Signed-off-by: Gary Bisson <gary.bisson@boundarydevices.com>
----
- src/mtd.c | 1 +
- src/mtd.h | 5 +++++
- 2 files changed, 6 insertions(+)
-
-diff --git a/src/mtd.c b/src/mtd.c
-index 1edc441..6d2264c 100644
---- a/src/mtd.c
-+++ b/src/mtd.c
-@@ -31,6 +31,7 @@
- #include <fcntl.h>
- #include <ctype.h>
- #include <errno.h>
-+#include <stddef.h>
- #include <sys/types.h>
- #include <sys/ioctl.h>
- 
-diff --git a/src/mtd.h b/src/mtd.h
-index bd21add..debfc84 100644
---- a/src/mtd.h
-+++ b/src/mtd.h
-@@ -31,6 +31,11 @@
- #include "BootControlBlocks.h"
- #include "rom_nand_hamming_code_ecc.h"
- 
-+// musl library doesn't define loff_t
-+#if !defined(__GLIBC__) && !defined(__UCLIBC__)
-+#define loff_t off_t
-+#endif
-+
- //------------------------------------------------------------------------------
- // Re-definitions of true and false, because the standard ones aren't good
- // enough?
--- 
-2.5.1
-
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-kobs/0002-Fix-build-for-recent-toolchains.patch Base/package/freescale-imx/imx-kobs/0002-Fix-build-for-recent-toolchains.patch
--- buildroot-2016.05/package/freescale-imx/imx-kobs/0002-Fix-build-for-recent-toolchains.patch	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-kobs/0002-Fix-build-for-recent-toolchains.patch	1970-01-01 01:00:00.000000000 +0100
@@ -1,26 +0,0 @@
-[PATCH] Fix build for recent toolchains
-
-Starting with Linux 4.4 headers, mtd-user.h isn't including stdint.h
-anymore which breaks the build.
-
-Signed-off-by: Gary Bisson <gary.bisson@boundarydevices.com>
----
- src/BootControlBlocks.h | 2 ++
- 1 file changed, 2 insertions(+)
-
-diff --git a/src/BootControlBlocks.h b/src/BootControlBlocks.h
-index 192eb61..aacdb64 100644
---- a/src/BootControlBlocks.h
-+++ b/src/BootControlBlocks.h
-@@ -20,6 +20,8 @@
- #ifndef BOOTCONTROLBLOCKS_H_
- #define BOOTCONTROLBLOCKS_H_
- 
-+#include <stdint.h>
-+
- #define NCB_FINGERPRINT1	0x504d5453	//!< 'STMP'
- #define NCB_FINGERPRINT2	0x2042434e	//!< 'NCB<space>' - NAND Control Block
- #define NCB_FINGERPRINT3	0x4e494252	//!< 'RBIN' - ROM Boot Image Block - N
--- 
-2.6.4
-
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-kobs/Config.in Base/package/freescale-imx/imx-kobs/Config.in
--- buildroot-2016.05/package/freescale-imx/imx-kobs/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-kobs/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-config BR2_PACKAGE_IMX_KOBS
-	bool "imx-kobs"
-	depends on BR2_arm # Only relevant for i.MX
-	help
-	  The imx-kobs tool is used for writing images to NAND on i.MX
-	  platforms.
-
-	  This library is provided by Freescale as-is and doesn't have
-	  an upstream.
-
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-kobs/imx-kobs.hash Base/package/freescale-imx/imx-kobs/imx-kobs.hash
--- buildroot-2016.05/package/freescale-imx/imx-kobs/imx-kobs.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-kobs/imx-kobs.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# locally computed
-sha256	45f729fc2b49556f1ca9df778f52bf5cc749cfe53664c8206daab29991c5f6c1  imx-kobs-5.3.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-kobs/imx-kobs.mk Base/package/freescale-imx/imx-kobs/imx-kobs.mk
--- buildroot-2016.05/package/freescale-imx/imx-kobs/imx-kobs.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-kobs/imx-kobs.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-################################################################################
-#
-# imx-kobs
-#
-################################################################################
-
-IMX_KOBS_VERSION = 5.3
-IMX_KOBS_SITE = $(FREESCALE_IMX_SITE)
-IMX_KOBS_LICENSE = GPLv2+
-IMX_KOBS_LICENSE_FILES = COPYING
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-lib/Config.in Base/package/freescale-imx/imx-lib/Config.in
--- buildroot-2016.05/package/freescale-imx/imx-lib/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-lib/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-comment "imx-lib needs an imx-specific Linux kernel to be built"
-	depends on BR2_arm && !BR2_LINUX_KERNEL
-
-config BR2_PACKAGE_IMX_LIB
-	bool "imx-lib"
-	depends on BR2_LINUX_KERNEL
-	depends on BR2_arm # Only relevant for i.MX
-	help
-	  Library of userspace helpers specific for the Freescale i.MX
-	  platform. It wraps the kernel interfaces for some i.MX platform
-	  specific drivers. It requires a kernel that includes the i.MX
-	  specific headers to be built.
-
-	  This library is provided by Freescale as-is and doesn't have
-	  an upstream.
-
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-lib/imx-lib.hash Base/package/freescale-imx/imx-lib/imx-lib.hash
--- buildroot-2016.05/package/freescale-imx/imx-lib/imx-lib.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-lib/imx-lib.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# locally computed
-sha256 2b4547ffb1de328cf8997a09a423c6f015d808493efd11a98a5d42c6497e3445  imx-lib-5.1.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-lib/imx-lib.mk Base/package/freescale-imx/imx-lib/imx-lib.mk
--- buildroot-2016.05/package/freescale-imx/imx-lib/imx-lib.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-lib/imx-lib.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-################################################################################
-#
-# imx-lib
-#
-################################################################################
-
-IMX_LIB_VERSION = 5.1
-IMX_LIB_SITE = $(FREESCALE_IMX_SITE)
-IMX_LIB_LICENSE = LGPLv2.1+
-IMX_LIB_LICENSE_FILES = COPYING-LGPL-2.1
-
-IMX_LIB_INSTALL_STAGING = YES
-
-# imx-lib needs access to imx-specific kernel headers
-IMX_LIB_DEPENDENCIES += linux
-IMX_LIB_INCLUDE = \
-	-I$(LINUX_DIR)/drivers/mxc/security/rng/include \
-	-I$(LINUX_DIR)/drivers/mxc/security/sahara2/include \
-	-idirafter $(LINUX_DIR)/include/uapi
-
-IMX_LIB_MAKE_ENV = \
-	$(TARGET_MAKE_ENV) \
-	$(TARGET_CONFIGURE_OPTS) \
-	CROSS_COMPILE="$(TARGET_CROSS)" \
-	PLATFORM=$(BR2_PACKAGE_FREESCALE_IMX_PLATFORM) \
-	INCLUDE="$(IMX_LIB_INCLUDE)"
-
-define IMX_LIB_BUILD_CMDS
-	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D)
-endef
-
-define IMX_LIB_INSTALL_STAGING_CMDS
-	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(STAGING_DIR) install
-endef
-
-define IMX_LIB_INSTALL_TARGET_CMDS
-	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(TARGET_DIR) install
-endef
-
-$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-vpu/Config.in Base/package/freescale-imx/imx-vpu/Config.in
--- buildroot-2016.05/package/freescale-imx/imx-vpu/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-vpu/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-comment "imx-vpu needs an i.MX platform with VPU support"
-	depends on BR2_arm
-	depends on !BR2_PACKAGE_FREESCALE_IMX_HAS_VPU
-
-config BR2_PACKAGE_IMX_VPU
-	bool "imx-vpu"
-	depends on BR2_arm # Only relevant for i.MX
-	depends on BR2_PACKAGE_FREESCALE_IMX_HAS_VPU
-	select BR2_PACKAGE_FIRMWARE_IMX
-	help
-	  Library of userspace helpers specific for the Freescale i.MX
-	  platform. It wraps the kernel interfaces for the i.MX platform
-	  Video Processing Unit (VPU) driver. It requires a kernel that
-	  includes the i.MX specific headers to be built.
-
-	  This library is provided by Freescale as-is and doesn't have
-	  an upstream.
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-vpu/imx-vpu.hash Base/package/freescale-imx/imx-vpu/imx-vpu.hash
--- buildroot-2016.05/package/freescale-imx/imx-vpu/imx-vpu.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-vpu/imx-vpu.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# Locally computed
-sha256	f11b91dcdb84bfefd3c88f10a9c1c1bc3420e4bbaadc38b9280fb52f7769eca8  imx-vpu-5.4.32.bin
diff -Naur -x gcc buildroot-2016.05/package/freescale-imx/imx-vpu/imx-vpu.mk Base/package/freescale-imx/imx-vpu/imx-vpu.mk
--- buildroot-2016.05/package/freescale-imx/imx-vpu/imx-vpu.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/freescale-imx/imx-vpu/imx-vpu.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,39 +0,0 @@
-################################################################################
-#
-# imx-vpu
-#
-################################################################################
-
-IMX_VPU_VERSION = 5.4.32
-IMX_VPU_SITE = $(FREESCALE_IMX_SITE)
-IMX_VPU_SOURCE = imx-vpu-$(IMX_VPU_VERSION).bin
-
-IMX_VPU_INSTALL_STAGING = YES
-
-IMX_VPU_MAKE_ENV = \
-	$(TARGET_MAKE_ENV) \
-	$(TARGET_CONFIGURE_OPTS) \
-	CROSS_COMPILE="$(TARGET_CROSS)" \
-	PLATFORM=$(BR2_PACKAGE_FREESCALE_IMX_PLATFORM)
-
-IMX_VPU_LICENSE = Freescale Semiconductor Software License Agreement
-IMX_VPU_LICENSE_FILES = EULA COPYING
-IMX_VPU_REDISTRIBUTE = NO
-
-define IMX_VPU_EXTRACT_CMDS
-	$(call FREESCALE_IMX_EXTRACT_HELPER,$(DL_DIR)/$(IMX_VPU_SOURCE))
-endef
-
-define IMX_VPU_BUILD_CMDS
-	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D)
-endef
-
-define IMX_VPU_INSTALL_STAGING_CMDS
-	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(STAGING_DIR) install
-endef
-
-define IMX_VPU_INSTALL_TARGET_CMDS
-	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(TARGET_DIR) install
-endef
-
-$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/Config.in Base/package/gstreamer1/Config.in
--- buildroot-2016.05/package/gstreamer1/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,13 +0,0 @@
-# Gstreamer 1.x & Plugins
-source "package/gstreamer1/gstreamer1/Config.in"
-
-if BR2_PACKAGE_GSTREAMER1
-source "package/gstreamer1/gst1-plugins-base/Config.in"
-source "package/gstreamer1/gst1-plugins-good/Config.in"
-source "package/gstreamer1/gst1-plugins-bad/Config.in"
-source "package/gstreamer1/gst1-plugins-ugly/Config.in"
-source "package/gstreamer1/gst1-imx/Config.in"
-source "package/gstreamer1/gst1-libav/Config.in"
-source "package/gstreamer1/gst1-validate/Config.in"
-source "package/gstreamer1/gst-omx/Config.in"
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-imx/Config.in Base/package/gstreamer1/gst1-imx/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-imx/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-imx/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,23 +0,0 @@
-comment "gst1-imx needs an imx-specific Linux kernel to be built"
-	depends on BR2_arm && !BR2_LINUX_KERNEL
-
-config BR2_PACKAGE_GST1_IMX
-	bool "gst1-imx"
-	depends on BR2_LINUX_KERNEL
-	depends on BR2_arm # Only relevant for i.MX
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	help
-	  This is a set of GStreamer 1.0 plugins for plugins for Freescale's
-	  i.MX platforms, which make use of the i.MX multimedia capabilities.
-
-	  This software supports only the i.MX6 SoC family and requires a
-	  kernel that includes the i.MX6 specific headers to be built.
-
-	  The IPU and PXP plugins are always built.
-	  The V4L2 plugin is built when BR2_PACKAGE_GST1_PLUGINS_BAD is enabled.
-	  The VPU plugin is built when BR2_PACKAGE_LIBIMXVPUAPI is enabled.
-	  The EGL plugin is built when BR2_PACKAGE_IMX_GPU_VIV is enabled.
-	  The G2D plugin is built when BR2_PACKAGE_IMX_GPU_VIV_G2D is enabled.
-	  The MP3 plugin is built when BR2_PACKAGE_LIBFSLCODEC is enabled.
-
-	  https://github.com/Freescale/gstreamer-imx
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-imx/gst1-imx.hash Base/package/gstreamer1/gst1-imx/gst1-imx.hash
--- buildroot-2016.05/package/gstreamer1/gst1-imx/gst1-imx.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-imx/gst1-imx.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# locally computed hash
-sha256 df34f080e24ac8f1619780aa5ad4e6ab1333f822cd2bf5fcb380b28c97248810  gst1-imx-0.12.0.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-imx/gst1-imx.mk Base/package/gstreamer1/gst1-imx/gst1-imx.mk
--- buildroot-2016.05/package/gstreamer1/gst1-imx/gst1-imx.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-imx/gst1-imx.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,70 +0,0 @@
-################################################################################
-#
-# gst1-imx
-#
-################################################################################
-
-GST1_IMX_VERSION = 0.12.0
-GST1_IMX_SITE = $(call github,Freescale,gstreamer-imx,$(GST1_IMX_VERSION))
-
-GST1_IMX_LICENSE = LGPLv2+
-GST1_IMX_LICENSE_FILES = LICENSE
-
-GST1_IMX_INSTALL_STAGING = YES
-
-GST1_IMX_DEPENDENCIES += \
-	host-pkgconf \
-	host-python \
-	gstreamer1 \
-	gst1-plugins-base
-
-# needs access to imx-specific kernel headers
-GST1_IMX_DEPENDENCIES += linux
-GST1_IMX_CONF_OPTS += --prefix="/usr" \
-	--kernel-headers="$(LINUX_DIR)/include"
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD),y)
-GST1_IMX_DEPENDENCIES += gst1-plugins-bad
-endif
-
-ifeq ($(BR2_PACKAGE_LIBFSLCODEC),y)
-GST1_IMX_DEPENDENCIES += libfslcodec
-endif
-
-ifeq ($(BR2_PACKAGE_LIBIMXVPUAPI),y)
-GST1_IMX_DEPENDENCIES += libimxvpuapi
-endif
-
-ifeq ($(BR2_PACKAGE_IMX_GPU_VIV),y)
-GST1_IMX_DEPENDENCIES += imx-gpu-viv
-ifeq ($(BR2_PACKAGE_XLIB_LIBX11),y)
-GST1_IMX_DEPENDENCIES += xlib_libX11
-GST1_IMX_CONF_OPTS += --egl-platform=x11
-else
-ifeq ($(BR2_PACKAGE_WAYLAND),y)
-GST1_IMX_DEPENDENCIES += wayland
-GST1_IMX_CONF_OPTS += --egl-platform=wayland
-else
-GST1_IMX_CONF_OPTS += --egl-platform=fb
-endif
-endif
-endif
-
-define GST1_IMX_CONFIGURE_CMDS
-	cd $(@D); \
-		$(TARGET_CONFIGURE_OPTS) \
-		$(HOST_DIR)/usr/bin/python2 ./waf configure $(GST1_IMX_CONF_OPTS)
-endef
-
-define GST1_IMX_BUILD_CMDS
-	cd $(@D); \
-		$(HOST_DIR)/usr/bin/python2 ./waf build -j $(PARALLEL_JOBS)
-endef
-
-define GST1_IMX_INSTALL_TARGET_CMDS
-	cd $(@D); \
-		$(HOST_DIR)/usr/bin/python2 ./waf --destdir=$(TARGET_DIR) \
-		install
-endef
-
-$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-libav/Config.in Base/package/gstreamer1/gst1-libav/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-libav/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-libav/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-config BR2_PACKAGE_GST1_LIBAV
-	bool "gst1-libav"
-	depends on BR2_PACKAGE_FFMPEG_ARCH_SUPPORTS
-	select BR2_PACKAGE_FFMPEG
-	select BR2_PACKAGE_FFMPEG_SWSCALE
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	help
-	  GStreamer plugin (formerly gst-ffmpeg).
-
-	  This package contains GStreamer plugins based on
-	  the libav project.
-
-	  The codecs, muxers, bitstreams and filters to build can be
-	  selected in the ffmpeg package.
-
-	  http://gstreamer.freedesktop.org/
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-libav/gst1-libav.hash Base/package/gstreamer1/gst1-libav/gst1-libav.hash
--- buildroot-2016.05/package/gstreamer1/gst1-libav/gst1-libav.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-libav/gst1-libav.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-libav/gst-libav-1.8.1.tar.xz.sha256sum
-sha256	44a49108c3531b5ac4f346a2247cd7fbafb0e8ab394394cb6d75a70300b38933  gst-libav-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-libav/gst1-libav.mk Base/package/gstreamer1/gst1-libav/gst1-libav.mk
--- buildroot-2016.05/package/gstreamer1/gst1-libav/gst1-libav.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-libav/gst1-libav.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,18 +0,0 @@
-################################################################################
-#
-# gst1-libav
-#
-################################################################################
-
-GST1_LIBAV_VERSION = 1.8.1
-GST1_LIBAV_SOURCE = gst-libav-$(GST1_LIBAV_VERSION).tar.xz
-GST1_LIBAV_SITE = http://gstreamer.freedesktop.org/src/gst-libav
-GST1_LIBAV_CONF_OPTS = --with-system-libav
-GST1_LIBAV_DEPENDENCIES = \
-	host-pkgconf ffmpeg gstreamer1 gst1-plugins-base \
-	$(if $(BR2_PACKAGE_BZIP2),bzip2) \
-	$(if $(BR2_PACKAGE_XZ),xz)
-GST1_LIBAV_LICENSE = GPLv2+
-GST1_LIBAV_LICENSE_FILES = COPYING
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/0001-use-gettext-0.18.patch Base/package/gstreamer1/gst1-plugins-bad/0001-use-gettext-0.18.patch
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/0001-use-gettext-0.18.patch	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-bad/0001-use-gettext-0.18.patch	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-Use newer version of gettext to match current buildroot gettext.
-
-Signed-off-by: Spenser Gilliland <spenser@gillilanding.com>
-----
-Index: gst1-plugins-bad-1.1.1/po/Makefile.in.in
-===================================================================
---- gst1-plugins-bad-1.1.1.orig/po/Makefile.in.in
-+++ gst1-plugins-bad-1.1.1/po/Makefile.in.in
-@@ -9,7 +9,7 @@
- # General Public License and is *not* in the public domain.
- #
- # Origin: gettext-0.17
--GETTEXT_MACRO_VERSION = 0.17
-+GETTEXT_MACRO_VERSION = 0.18
- 
- PACKAGE = @PACKAGE@
- VERSION = @VERSION@
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/Config.in Base/package/gstreamer1/gst1-plugins-bad/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-bad/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,686 +0,0 @@
-menuconfig BR2_PACKAGE_GST1_PLUGINS_BAD
-	bool "gst1-plugins-bad"
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	help
-	  A set of plug-ins for GStreamer that may be of poor quality or
-	  lacking some features.
-
-	  http://gstreamer.freedesktop.org/
-
-if BR2_PACKAGE_GST1_PLUGINS_BAD
-
-comment "libraries with external dependencies"
-
-menuconfig BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL
-	bool "opengl"
-	depends on BR2_PACKAGE_HAS_LIBGL || BR2_PACKAGE_HAS_LIBGLES
-
-if BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
-	def_bool BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
-
-comment "The opengl library needs an API, a platform and a window system"
-	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
-
-comment "APIs"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
-	bool
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL
-	bool "opengl"
-	default y
-	depends on BR2_PACKAGE_HAS_LIBGL
-	select BR2_PACKAGE_LIBGLU
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
-
-comment "opengl needs an OpenGL backend"
-	depends on !BR2_PACKAGE_HAS_LIBGL
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLES2
-	bool "gles2"
-	default y
-	depends on BR2_PACKAGE_HAS_LIBGLES
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
-
-comment "gles2 needs an OpenGL ES backend"
-	depends on !BR2_PACKAGE_HAS_LIBGLES
-
-comment "Platforms"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
-	bool
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLX
-	bool "glx"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL
-	depends on BR2_PACKAGE_XSERVER_XORG_SERVER_MODULAR # mesa needs big X
-	depends on !BR2_PACKAGE_RPI_USERLAND # x11
-	select BR2_PACKAGE_XLIB_LIBXRENDER
-	select BR2_PACKAGE_XPROTO_GLPROTO
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
-	help
-	  OpenGL Extension to the X Window System
-
-comment "glx not supported with rpi-userland"
-	depends on BR2_PACKAGE_RPI_USERLAND
-
-comment "glx needs the opengl API and modular X.org"
-	depends on !BR2_PACKAGE_RPI_USERLAND && \
-		(!BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL || \
-		!BR2_PACKAGE_XSERVER_XORG_SERVER_MODULAR)
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
-	bool "egl"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
-	depends on BR2_PACKAGE_HAS_LIBEGL
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
-
-comment "egl needs an API and an EGL backend"
-	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API || \
-		!BR2_PACKAGE_HAS_LIBEGL
-
-comment "Window systems"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
-	bool
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11
-	bool "x11"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
-	depends on !BR2_PACKAGE_RPI_USERLAND
-	depends on BR2_PACKAGE_XORG7
-	select BR2_PACKAGE_XLIB_LIBX11
-	select BR2_PACKAGE_XLIB_LIBXEXT
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
-
-comment "x11 not supported with rpi-userland"
-	depends on BR2_PACKAGE_RPI_USERLAND
-
-comment "x11 needs a platform and X.org"
-	depends on !BR2_PACKAGE_RPI_USERLAND && \
-		(!BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM || \
-		!BR2_PACKAGE_XORG7)
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_WAYLAND
-	bool "wayland"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
-	depends on BR2_PACKAGE_WAYLAND
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
-
-comment "wayland needs the egl platform and the wayland package"
-	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL || \
-		!BR2_PACKAGE_WAYLAND
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_DISPMANX
-	bool "dispmanx"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
-	depends on BR2_PACKAGE_RPI_USERLAND
-	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
-	help
-	  Raspberry Pi's Dispmanx windowing system
-
-comment "dispmanx needs the egl platform and rpi-userland"
-	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL || \
-		!BR2_PACKAGE_RPI_USERLAND
-
-endif
-
-comment "opengl needs an OpenGL or OpenGL ES backend"
-	depends on !BR2_PACKAGE_HAS_LIBGL && !BR2_PACKAGE_HAS_LIBGLES
-
-comment "dependency-less plugins"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ACCURIP
-	bool "accurip"
-	help
-	  Accurip plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMDEC
-	bool "adpcmdec"
-	help
-	  ADPCM decoder
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMENC
-	bool "adpcmenc"
-	help
-	  ADPCM encoder
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AIFF
-	bool "aiff"
-	help
-	  Create and parse Audio interchange File Format (AIFF) files
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASFMUX
-	bool "asfmux"
-	help
-	  ASF Muxer Plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOFXBAD
-	bool "audiofxbad"
-	help
-	  Audio filters plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOMIXER
-	bool "audiomixer"
-	help
-	  Audio mixer plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COMPOSITOR
-	bool "compositor"
-	help
-	  Video compositor plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOVISUALIZERS
-	bool "audiovisualizers"
-	help
-	  Creates video visualizations of audio input
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUTOCONVERT
-	bool "autoconvert"
-	help
-	  Selects convertor element based on caps
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BAYER
-	bool "bayer"
-	help
-	  Elements to convert Bayer images
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CAMERABIN2
-	bool "camerabin2"
-	help
-	  Take image snapshots and record movies from camera
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CDXAPARSE
-	bool "cdxaparse"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COLOREFFECTS
-	bool "coloreffects"
-	help
-	  Color Look-up Table filters
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DATAURISRC
-	bool "dataurisrc"
-	help
-	  data: URI source
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DCCP
-	bool "dccp"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DEBUGUTILS
-	bool "debugutils"
-	help
-	  Collection of elements that may or may not be useful for debugging
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DTLS
-	bool "dtls"
-	select BR2_PACKAGE_OPENSSL
-	help
-	  DTLS plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVBSUBOVERLAY
-	bool "dvdsuboverlay"
-	help
-	  DVB subtitle renderer plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVDSPU
-	bool "dvdspu"
-	help
-	  DVD Sub-picture Overlay element
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FACEOVERLAY
-	bool "faceoverlay"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FESTIVAL
-	bool "festival"
-	help
-	  Synthesizes plain text into audio
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FIELDANALYSIS
-	bool "fieldanalysis"
-	help
-	  Video field analysis
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREEVERB
-	bool "freeverb"
-	help
-	  Reverberation/room effect
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREI0R
-	bool "frei0r"
-	help
-	  frei0r plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GAUDIEFFECTS
-	bool "gaudieffects"
-	help
-	  Gaudi video effects
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GEOMETRICTRANSFORM
-	bool "geometrictransform"
-	help
-	  Various geometric image transform elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GDP
-	bool "gdp"
-	help
-	  Payload/depayload GDP packets
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HDVPARSE
-	bool "hdvparse"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ID3TAG
-	bool "id3tag"
-	help
-	  ID3 v1 and v2 muxing plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTER
-	bool "inter"
-	help
-	  plugin for inter-pipeline communication
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTERLACE
-	bool "interlace"
-	help
-	  Create an interlaced video stream
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVFPARSE
-	bool "ivfparse"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVTC
-	bool "ivtc"
-	help
-	  Inverse Telecine plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JP2KDECIMATOR
-	bool "jp2kdecimator"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JPEGFORMAT
-	bool "jpegformat"
-	help
-	  JPEG interchange format plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBRFB
-	bool "librfb"
-	help
-	  Connects to a VNC server and decodes RFB stream
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIVEADDER
-	bool "liveadder"
-	help
-	  Adds multiple live discontinuous streams
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MIDI
-	bool "midi"
-	help
-	  MIDI plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGDEMUX
-	bool "mpegdemux"
-	help
-	  MPEG-PS demuxer
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSDEMUX
-	bool "mpegtsdemux"
-	help
-	  MPEG TS demuxer
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSMUX
-	bool "mpegtsmux"
-	help
-	  MPEG-TS muxer
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGPSMUX
-	bool "mpegpsmux"
-	help
-	  MPEG-PS muxer
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MVE
-	bool "mve"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MXF
-	bool "mxf"
-	help
-	  MXF plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NETSIM
-	bool "netsim"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NUVDEMUX
-	bool "nuvdemux"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ONVIF
-	bool "onvif"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PATCHDETECT
-	bool "patchdetect"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PCAPPARSE
-	bool "pcapparse"
-	help
-	  Element parsing raw pcap streams
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PNM
-	bool "pnm"
-	help
-	  PNM plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RAWPARSE
-	bool "rawparse"
-	help
-	  Parses byte streams into raw frames
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_REMOVESILENCE
-	bool "removesilence"
-	help
-	  Removes silence from an audio stream
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RTMP
-	bool "rtmp"
-	select BR2_PACKAGE_RTMPDUMP
-	help
-	  RTMP plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDI
-	bool "sdi"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDP
-	bool "sdp"
-	help
-	  configure streaming sessions using SDP
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SEGMENTCLIP
-	bool "segmentclip"
-	help
-	  Segment clip elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SIREN
-	bool "siren"
-	help
-	  Siren encoder/decoder/payloader/depayloader plugins
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SMOOTH
-	bool "smooth"
-	help
-	  Apply a smooth filter to an image
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SPEED
-	bool "speed"
-	help
-	  Set speed/pitch on audio/raw streams (resampler)
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SUBENC
-	bool "subenc"
-	help
-	  subtitle encoders
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_STEREO
-	bool "stereo"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_TTA
-	bool "tta"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFILTERS
-	bool "videofilters"
-	help
-	  Video filters in gst-plugins-bad
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFRAME_AUDIOLEVEL
-	bool "videoframe_audiolevel"
-	help
-	  videoframe_audiolevel
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOMEASURE
-	bool "videomeasure"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOPARSERS
-	bool "videoparsers"
-	help
-	  videoparsers
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOSIGNAL
-	bool "videosignal"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VMNC
-	bool "vmnc"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_Y4M
-	bool "y4m"
-	help
-	  Demuxes/decodes YUV4MPEG streams
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_YADIF
-	bool "yadif"
-	help
-	  YADIF deinterlacing filter
-
-comment "plugins with external dependencies"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SHM
-	bool "shm"
-	help
-	  shared memory sink source
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VCD
-	bool "vcd"
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_APEXSINK
-	bool "apexsink"
-	select BR2_PACKAGE_OPENSSL
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASSRENDER
-	bool "assrender"
-	select BR2_PACKAGE_LIBASS
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VOAACENC
-	bool "voaacenc"
-	select BR2_PACKAGE_VO_AACENC
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BZ2
-	bool "bz2"
-	select BR2_PACKAGE_BZIP2
-	help
-	  Compress or decompress streams
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CURL
-	bool "curl"
-	select BR2_PACKAGE_LIBCURL
-	help
-	  libcurl-based elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DASH
-	bool "dash"
-	select BR2_PACKAGE_LIBXML2
-	help
-	  DASH demuxer plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DECKLINK
-	depends on BR2_INSTALL_LIBSTDCPP
-	bool "decklink"
-	help
-	  Blackmagic Decklink plugin
-
-comment "decklink needs a toolchain w/ C++"
-	depends on !BR2_INSTALL_LIBSTDCPP
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DIRECTFB
-	bool "directfb"
-	depends on BR2_PACKAGE_DIRECTFB
-	default y
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WAYLAND
-	bool "wayland"
-	depends on BR2_PACKAGE_WAYLAND
-	default y
-	help
-	  Wayland Video Sink
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WEBP
-	bool "webp"
-	select BR2_PACKAGE_WEBP
-	help
-	  Webp image format plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FAAD
-	bool "faad"
-	select BR2_PACKAGE_FAAD2
-	help
-	  Free AAC Decoder (FAAD)
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FBDEV
-	bool "fbdev"
-	help
-	  Linux framebuffer video sink
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBMMS
-	bool "libmms"
-	depends on BR2_USE_WCHAR # libmms -> libglib2
-	depends on BR2_TOOLCHAIN_HAS_THREADS # libmms -> libglib2
-	select BR2_PACKAGE_LIBMMS
-	help
-	  Microsoft Multi Media Server streaming protocol support
-
-comment "libmms needs a toolchain w/ wchar, threads"
-	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEG2ENC
-	bool "mpeg2enc"
-	select BR2_PACKAGE_LIBMPEG2
-	help
-	  High-quality MPEG-1/2 video encoder
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MUSEPACK
-	bool "musepack"
-	select BR2_PACKAGE_MUSEPACK
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NEON
-	bool "neon"
-	select BR2_PACKAGE_NEON
-	help
-	  lib neon http client src
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENAL
-	bool "openal"
-	depends on BR2_INSTALL_LIBSTDCPP
-	depends on BR2_TOOLCHAIN_HAS_THREADS_NPTL
-	depends on BR2_PAKCAGE_OPENAL_ARCH_SUPPORTS
-	select BR2_PACKAGE_OPENAL
-
-comment "openal plugin needs a toolchain w/ NPTL, C++"
-	depends on BR2_PAKCAGE_OPENAL_ARCH_SUPPORTS
-	depends on !BR2_TOOLCHAIN_HAS_THREADS_NPTL \
-		|| !BR2_INSTALL_LIBSTDCPP
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENCV
-	bool "opencv"
-	depends on BR2_PACKAGE_OPENCV
-	# Remove the following opencv modules when gstreamer fixes the
-	# problem of including the old "cv.h" header
-	# bug: https://bugzilla.gnome.org/show_bug.cgi?id=725163
-	select BR2_PACKAGE_OPENCV_LIB_CALIB3D
-	select BR2_PACKAGE_OPENCV_LIB_CONTRIB
-	select BR2_PACKAGE_OPENCV_LIB_FEATURES2D
-	select BR2_PACKAGE_OPENCV_LIB_FLANN
-	select BR2_PACKAGE_OPENCV_LIB_IMGPROC
-	select BR2_PACKAGE_OPENCV_LIB_LEGACY
-	select BR2_PACKAGE_OPENCV_LIB_ML
-	select BR2_PACKAGE_OPENCV_LIB_OBJDETECT
-	select BR2_PACKAGE_OPENCV_LIB_VIDEO
-	help
-	  GStreamer OpenCV Plugins
-
-comment "opencv plugin needs OpenCV-2.4"
-	depends on !BR2_PACKAGE_OPENCV
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENH264
-	bool "openh264"
-	depends on BR2_PACKAGE_LIBOPENH264_ARCH_SUPPORTS
-	depends on BR2_INSTALL_LIBSTDCPP # libopenh264
-	depends on !BR2_STATIC_LIBS # libopenh264
-	depends on BR2_TOOLCHAIN_HAS_THREADS # libopenh264
-	select BR2_PACKAGE_LIBOPENH264
-	help
-	  OpenH264 based encoding/decoding plugin
-
-comment "openh264 plugin needs a toolchain w/ C++, dynamic library, threads"
-	depends on !BR2_INSTALL_LIBSTDCPP || !BR2_TOOLCHAIN_HAS_THREADS || \
-		BR2_STATIC_LIBS
-	depends on BR2_PACKAGE_LIBOPENH264_ARCH_SUPPORTS
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENJPEG
-	bool "openjpeg"
-	select BR2_PACKAGE_OPENJPEG
-	help
-	  GStreamer OpenJPEG plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPUS
-	bool "opus"
-	select BR2_PACKAGE_OPUS
-	help
-	  OPUS plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RSVG
-	bool "rsvg"
-	depends on BR2_INSTALL_LIBSTDCPP # librsvg -> pango
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # librsvg -> pango -> harfbuzz
-	select BR2_PACKAGE_LIBRSVG
-	help
-	  RSVG plugin library
-
-comment "rsvg plugin needs a toolchain w/ C++"
-	depends on !BR2_INSTALL_LIBSTDCPP
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL
-	bool "gl"
-	default y
-	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
-
-comment "gl needs the gst1-plugins-bad opengl library"
-	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDL
-	bool "sdl"
-	select BR2_PACKAGE_SDL
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SNDFILE
-	bool "sndfile"
-	select BR2_PACKAGE_LIBSNDFILE
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVB
-	bool "dvb"
-	select BR2_PACKAGE_DTV_SCAN_TABLES
-	# FEC_2_5 / QAM_4_NR definitions
-	depends on BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_7
-	help
-	  DVB elements
-
-comment "dvb needs a toolchain w/ headers >= 3.7"
-	depends on !BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_7
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HLS
-	bool "hls"
-	select BR2_PACKAGE_GNUTLS
-	help
-	  Fragmented streaming plugins
-
-config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_X265
-	bool "x265"
-	depends on BR2_INSTALL_LIBSTDCPP
-	depends on !BR2_STATIC_LIBS
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # x265
-	select BR2_PACKAGE_X265
-	help
-	  x265 encoding plugin
-
-comment "x265 needs a toolchain w/ C++, dynamic library"
-	depends on !BR2_INSTALL_LIBSTDCPP || BR2_STATIC_LIBS
-
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.hash Base/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.hash
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-1.8.1.tar.xz.sha256sum
-sha256	0bbd58f363734fc0c4a620b2d6fb01d427fdafdbda7b90b4e15d03b751ca40f5  gst-plugins-bad-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.mk Base/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.mk
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-bad/gst1-plugins-bad.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,808 +0,0 @@
-################################################################################
-#
-# gst1-plugins-bad
-#
-################################################################################
-
-GST1_PLUGINS_BAD_VERSION = 1.8.1
-GST1_PLUGINS_BAD_SOURCE = gst-plugins-bad-$(GST1_PLUGINS_BAD_VERSION).tar.xz
-GST1_PLUGINS_BAD_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-bad
-GST1_PLUGINS_BAD_INSTALL_STAGING = YES
-GST1_PLUGINS_BAD_LICENSE_FILES = COPYING COPYING.LIB
-# Unknown and GPL licensed plugins will append to GST1_PLUGINS_BAD_LICENSE if
-# enabled.
-GST1_PLUGINS_BAD_LICENSE = LGPLv2+ LGPLv2.1+
-
-GST1_PLUGINS_BAD_AUTORECONF = YES
-GST1_PLUGINS_BAD_AUTORECONF_OPTS = -I $(@D)/common/m4
-GST1_PLUGINS_BAD_GETTEXTIZE = YES
-
-GST1_PLUGINS_BAD_CONF_OPTS = \
-	--disable-examples \
-	--disable-valgrind \
-	--disable-directsound \
-	--disable-wsapi \
-	--disable-direct3d \
-	--disable-direct3d9 \
-	--disable-winks \
-	--disable-android_media \
-	--disable-apple_media \
-	--disable-sdltest \
-	--disable-wininet \
-	--disable-acm
-
-# Options which require currently unpackaged libraries
-GST1_PLUGINS_BAD_CONF_OPTS += \
-	--disable-avc \
-	--disable-opensles \
-	--disable-uvch264 \
-	--disable-voamrwbenc \
-	--disable-bs2b \
-	--disable-chromaprint \
-	--disable-dash \
-	--disable-dc1394 \
-	--disable-dts \
-	--disable-resindvd \
-	--disable-faac \
-	--disable-flite \
-	--disable-gsm \
-	--disable-fluidsynth \
-	--disable-kate \
-	--disable-ladspa \
-	--disable-lv2 \
-	--disable-libde265 \
-	--disable-strp \
-	--disable-linsys \
-	--disable-modplug \
-	--disable-mimic \
-	--disable-mplex \
-	--disable-nas \
-	--disable-ofa \
-	--disable-openexr \
-	--disable-openni2 \
-	--disable-pvr \
-	--disable-libvisual \
-	--disable-timidity \
-	--disable-teletextdec \
-	--disable-wildmidi \
-	--disable-smoothstreaming \
-	--disable-soundtouch \
-	--disable-spc \
-	--disable-gme \
-	--disable-xvid \
-	--disable-vdpau \
-	--disable-sbc \
-	--disable-schro \
-	--disable-zbar \
-	--disable-rtmp \
-	--disable-spandsp \
-	--disable-gsettings \
-	--disable-sndio \
-	--disable-hls \
-	--disable-gtk3 \
-	--disable-qt
-
-GST1_PLUGINS_BAD_DEPENDENCIES = gst1-plugins-base gstreamer1
-
-ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
-# RPI has odd locations for several required headers.
-GST1_PLUGINS_BAD_CONF_ENV += \
-	CPPFLAGS="$(TARGET_CPPFLAGS) \
-	-I$(STAGING_DIR)/usr/include/IL \
-	-I$(STAGING_DIR)/usr/include/interface/vcos/pthreads \
-	-I$(STAGING_DIR)/usr/include/interface/vmcs_host/linux"
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-opengl
-GST1_PLUGINS_BAD_DEPENDENCIES += libgl libglu
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-opengl
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLES2),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-gles2
-GST1_PLUGINS_BAD_DEPENDENCIES += libgles
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-gles2
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-glx
-GST1_PLUGINS_BAD_DEPENDENCIES += xproto_glproto xlib_libXrender
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-glx
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-egl
-GST1_PLUGINS_BAD_DEPENDENCIES += libegl
-GST1_PLUGINS_BAD_CONF_ENV += \
-	CPPFLAGS="$(TARGET_CPPFLAGS) `$(PKG_CONFIG_HOST_BINARY) --cflags egl`" \
-	LIBS="`$(PKG_CONFIG_HOST_BINARY) --libs egl`"
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-egl
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-x11
-GST1_PLUGINS_BAD_DEPENDENCIES += xlib_libX11 xlib_libXext
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-x11
-endif
-
-ifneq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_WAYLAND)$(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WAYLAND),)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-wayland
-GST1_PLUGINS_BAD_DEPENDENCIES += wayland
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-wayland
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_DISPMANX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dispmanx
-GST1_PLUGINS_BAD_DEPENDENCIES += rpi-userland
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dispmanx
-endif
-
-ifeq ($(BR2_PACKAGE_ORC),y)
-GST1_PLUGINS_BAD_DEPENDENCIES += orc
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-orc
-endif
-
-ifeq ($(BR2_PACKAGE_BLUEZ_UTILS),y)
-GST1_PLUGINS_BAD_DEPENDENCIES += bluez_utils
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-bluez
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-bluez
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ACCURIP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-accurip
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-accurip
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMDEC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-adpcmdec
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-adpcmdec
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMENC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-adpcmenc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-adpcmenc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AIFF),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-aiff
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-aiff
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASFMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-asfmux
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-asfmux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOFXBAD),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiofxbad
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiofxbad
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOMIXER),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiomixer
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiomixer
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COMPOSITOR),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-compositor
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-compositor
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOVISUALIZERS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiovisualizers
-GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiovisualizers
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUTOCONVERT),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-autoconvert
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-autoconvert
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BAYER),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-bayer
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-bayer
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CAMERABIN2),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-camerabin2
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-camerabin2
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CDXAPARSE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-cdxaparse
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-cdxaparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COLOREFFECTS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-coloreffects
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-coloreffects
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DATAURISRC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dataurisrc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dataurisrc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DCCP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dccp
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dccp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DEBUGUTILS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-debugutils
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-debugutils
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DTLS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dtls
-GST1_PLUGINS_BAD_DEPENDENCIES += openssl
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dtls
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVBSUBOVERLAY),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvbsuboverlay
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvbsuboverlay
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVDSPU),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvdspu
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvdspu
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FACEOVERLAY),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-faceoverlay
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-faceoverlay
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FESTIVAL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-festival
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-festival
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FIELDANALYSIS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-fieldanalysis
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-fieldanalysis
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREEVERB),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-freeverb
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-freeverb
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREI0R),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-frei0r
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-frei0r
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GAUDIEFFECTS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-gaudieffects
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-gaudieffects
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GEOMETRICTRANSFORM),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-geometrictransform
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-geometrictransform
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GDP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-gdp
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-gdp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HDVPARSE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-hdvparse
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-hdvparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ID3TAG),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-id3tag
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-id3tag
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTER),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-inter
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-inter
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTERLACE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-interlace
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-interlace
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVFPARSE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-ivfparse
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-ivfparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVTC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-ivtc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-ivtc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JP2KDECIMATOR),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-jp2kdecimator
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-jp2kdecimator
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JPEGFORMAT),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-jpegformat
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-jpegformat
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBRFB),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-librfb
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-librfb
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIVEADDER),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-liveadder
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-liveadder
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MIDI),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-midi
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-midi
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGDEMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegdemux
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegdemux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSDEMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegtsdemux
-GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegtsdemux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegtsmux
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegtsmux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGPSMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegpsmux
-GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegpsmux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MVE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mve
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mve
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MXF),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mxf
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mxf
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_NETSIM),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-netsim
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-netsim
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NUVDEMUX),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-nuvdemux
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-nuvdemux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ONVIF),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-onvif
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-onvif
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PATCHDETECT),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-patchdetect
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-patchdetect
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PCAPPARSE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-pcapparse
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-pcapparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PNM),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-pnm
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-pnm
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RAWPARSE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-rawparse
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-rawparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_REMOVESILENCE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-removesilence
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-removesilence
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RTMP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-rtmp
-GST1_PLUGINS_BAD_DEPENDENCIES += rtmpdump
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-rtmp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDI),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdi
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdi
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdp
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SEGMENTCLIP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-segmentclip
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-segmentclip
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SIREN),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-siren
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-siren
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SMOOTH),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-smooth
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-smooth
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SPEED),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-speed
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-speed
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SUBENC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-subenc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-subenc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_STEREO),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-stereo
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-stereo
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_TTA),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-tta
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-tta
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFILTERS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-videofilters
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-videofilters
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFRAME_AUDIOLEVEL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-videoframe_audiolevel
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-videoframe_audiolevel
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOMEASURE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-videomeasure
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-videomeasure
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOPARSERS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-videoparsers
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-videoparsers
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOSIGNAL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-videosignal
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-videosignal
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VMNC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-vmnc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-vmnc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_Y4M),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-y4m
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-y4m
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_YADIF),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-yadif
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-yadif
-endif
-
-# Plugins with dependencies
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SHM),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-shm
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-shm
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VCD),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-vcd
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-vcd
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_APEXSINK),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-apexsink
-GST1_PLUGINS_BAD_DEPENDENCIES += openssl
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-apexsink
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASSRENDER),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-assrender
-GST1_PLUGINS_BAD_DEPENDENCIES += libass
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-assrender
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VOAACENC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-voaacenc
-GST1_PLUGINS_BAD_DEPENDENCIES += vo-aacenc
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-voaacenc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BZ2),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-bz2
-GST1_PLUGINS_BAD_DEPENDENCIES += bzip2
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-bz2
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CURL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-curl
-GST1_PLUGINS_BAD_DEPENDENCIES += libcurl
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-curl
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DASH),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dash
-GST1_PLUGINS_BAD_DEPENDENCIES += libxml2
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dash
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DECKLINK),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-decklink
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-decklink
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WEBP),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-webp
-GST1_PLUGINS_BAD_DEPENDENCIES += webp
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-webp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DIRECTFB),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-directfb
-GST1_PLUGINS_BAD_DEPENDENCIES += directfb
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-directfb
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FAAD),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-faad
-GST1_PLUGINS_BAD_DEPENDENCIES += faad2
-GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-faad
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FBDEV),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-fbdev
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-fbdev
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBMMS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-libmms
-GST1_PLUGINS_BAD_DEPENDENCIES += libmms
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-libmms
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEG2ENC),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpeg2enc
-GST1_PLUGINS_BAD_DEPENDENCIES += libmpeg2
-GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpeg2enc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MUSEPACK),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-musepack
-GST1_PLUGINS_BAD_DEPENDENCIES += musepack
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-musepack
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NEON),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-neon
-GST1_PLUGINS_BAD_DEPENDENCIES += neon
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-neon
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENAL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-openal
-GST1_PLUGINS_BAD_DEPENDENCIES += openal
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-openal
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENCV),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-opencv
-GST1_PLUGINS_BAD_DEPENDENCIES += opencv
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-opencv
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENH264),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-openh264
-GST1_PLUGINS_BAD_DEPENDENCIES += libopenh264
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-openh264
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENJPEG),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-openjpeg
-GST1_PLUGINS_BAD_DEPENDENCIES += openjpeg
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-openjpeg
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPUS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-opus
-GST1_PLUGINS_BAD_DEPENDENCIES += opus
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-opus
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RSVG),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-rsvg
-GST1_PLUGINS_BAD_DEPENDENCIES += librsvg
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-rsvg
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-gl
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-gl
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDL),y)
-GST1_PLUGINS_BAD_CONF_ENV += ac_cv_path_SDL_CONFIG=$(STAGING_DIR)/usr/bin/sdl-config
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdl
-GST1_PLUGINS_BAD_DEPENDENCIES += sdl
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdl
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SNDFILE),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-sndfile
-GST1_PLUGINS_BAD_DEPENDENCIES += libsndfile
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-sndfile
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVB),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvb
-GST1_PLUGINS_BAD_DEPENDENCIES += dtv-scan-tables
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvb
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HLS),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-hls
-GST1_PLUGINS_BAD_DEPENDENCIES += gnutls
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-hls
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_X265),y)
-GST1_PLUGINS_BAD_CONF_OPTS += --enable-x265
-GST1_PLUGINS_BAD_DEPENDENCIES += x265
-GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_BAD_CONF_OPTS += --disable-x265
-endif
-
-# Add GPL license if GPL licensed plugins enabled.
-ifeq ($(GST1_PLUGINS_BAD_HAS_GPL_LICENSE),y)
-GST1_PLUGINS_BAD_LICENSE += GPL
-endif
-
-# Add Unknown license if Unknown licensed plugins enabled.
-ifeq ($(GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE),y)
-GST1_PLUGINS_BAD_LICENSE += UNKNOWN
-endif
-
-# Use the following command to extract license info for plugins.
-# # find . -name 'plugin-*.xml' | xargs grep license
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-base/Config.in Base/package/gstreamer1/gst1-plugins-base/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-base/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-base/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,160 +0,0 @@
-menuconfig BR2_PACKAGE_GST1_PLUGINS_BASE
-	bool "gst1-plugins-base"
-	select BR2_PACKAGE_XLIB_LIBX11 if BR2_PACKAGE_XORG7
-	select BR2_PACKAGE_XLIB_LIBXEXT if BR2_PACKAGE_XORG7
-	select BR2_PACKAGE_XLIB_LIBXV if BR2_PACKAGE_XORG7
-	help
-	  A basic set of well-supported plug-ins for GStreamer.
-
-	  http://gstreamer.freedesktop.org/
-
-if BR2_PACKAGE_GST1_PLUGINS_BASE
-
-comment "dependency-less plugins"
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ADDER
-	bool "adder"
-	help
-	  Adds multiple streams
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_APP
-	bool "app"
-	help
-	  Elements used to communicate with applications
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOCONVERT
-	bool "audioconvert (mandatory for audio playback)"
-	default y
-	help
-	  Convert audio to different formats
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORATE
-	bool "audiorate"
-	help
-	  Adjusts audio frames
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOTESTSRC
-	bool "audiotestsrc"
-	help
-	  Creates audio test signals of given frequency and volume
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ENCODING
-	bool "encoding"
-	help
-	  various encoding-related elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOCONVERT
-	bool "videoconvert"
-	help
-	  Colorspace conversion
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_GIO
-	bool "gio"
-	help
-	  GIO elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PLAYBACK
-	select BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND
-	bool "playback"
-	default y
-	help
-	  various playback elements
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORESAMPLE
-	bool "audioresample (mandatory for audio playback)"
-	default y
-	help
-	  Resamples audio
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_SUBPARSE
-	bool "subparse"
-	help
-	  Subtitle parsing
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TCP
-	bool "tcp"
-	help
-	  transfer data over the network via TCP
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND
-	bool "typefind"
-	default y
-	help
-	  default typefind functions
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOTESTSRC
-	bool "videotestsrc"
-	help
-	  Creates a test video stream
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEORATE
-	bool "videorate"
-	help
-	  Adjusts video frames
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOSCALE
-	bool "videoscale (mandatory for video playback)"
-	default y
-	help
-	  Resizes video
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VOLUME
-	bool "volume (mandatory for audio playback)"
-	default y
-	help
-	  plugin for controlling audio volume
-
-comment "plugins with external dependencies"
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ALSA
-	bool "alsa (mandatory for audio playback)"
-	select BR2_PACKAGE_ALSA_LIB
-	select BR2_PACKAGE_ALSA_LIB_MIXER
-	select BR2_PACKAGE_ALSA_LIB_PCM
-	select BR2_PACKAGE_ALSA_LIB_SEQ
-	help
-	  ALSA plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TREMOR
-	bool "tremor"
-	select BR2_PACKAGE_TREMOR
-	help
-	  Vorbis Tremor decoder
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OGG
-	bool "ogg (*.ogg audio/video)"
-	select BR2_PACKAGE_LIBOGG
-	help
-	  ogg stream manipulation (info about ogg: http://xiph.org)
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OPUS
-	bool "opus"
-	select BR2_PACKAGE_OPUS
-	help
-	  Opus codec for speech and audio.
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PANGO
-	bool "pango font renderer"
-	depends on BR2_INSTALL_LIBSTDCPP # pango -> freetype
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # pango -> harfbuzz
-	select BR2_PACKAGE_PANGO
-	help
-	  Pango-based text rendering and overlay
-
-comment "pango plugin needs a toolchain w/ C++"
-	depends on !BR2_INSTALL_LIBSTDCPP
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_THEORA
-	bool "theora (*.ogg video)"
-	select BR2_PACKAGE_LIBTHEORA
-	help
-	  Theora plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VORBIS
-	bool "vorbis (*.ogg audio)"
-	select BR2_PACKAGE_LIBVORBIS
-	help
-	  Vorbis plugin library
-
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.hash Base/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.hash
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-1.8.1.tar.xz.sha256sum
-sha256	15a9de985cd265c344e359f5b19347df4021b7611ed2c2d91917cb900f2fad6f  gst-plugins-base-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.mk Base/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.mk
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-base/gst1-plugins-base.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,214 +0,0 @@
-################################################################################
-#
-# gst1-plugins-base
-#
-################################################################################
-
-GST1_PLUGINS_BASE_VERSION = 1.8.1
-GST1_PLUGINS_BASE_SOURCE = gst-plugins-base-$(GST1_PLUGINS_BASE_VERSION).tar.xz
-GST1_PLUGINS_BASE_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-base
-GST1_PLUGINS_BASE_INSTALL_STAGING = YES
-GST1_PLUGINS_BASE_LICENSE_FILES = COPYING.LIB
-GST1_PLUGINS_BASE_LICENSE = LGPLv2+, LGPLv2.1+
-
-# freetype is only used by examples, but if it is not found
-# and the host has a freetype-config script, then the host
-# include dirs are added to the search path causing trouble
-GST1_PLUGINS_BASE_CONF_ENV =
-	FT2_CONFIG=/bin/false \
-	ac_cv_header_stdint_t="stdint.h"
-
-# gio_unix_2_0 is only used for tests
-GST1_PLUGINS_BASE_CONF_OPTS = \
-	--disable-examples \
-	--disable-oggtest \
-	--disable-vorbistest \
-	--disable-gio_unix_2_0 \
-	--disable-freetypetest \
-	--disable-valgrind
-
-# Options which require currently unpackaged libraries
-GST1_PLUGINS_BASE_CONF_OPTS += \
-	--disable-cdparanoia \
-	--disable-libvisual \
-	--disable-iso-codes
-
-GST1_PLUGINS_BASE_DEPENDENCIES = gstreamer1
-
-# These plugins are liste in the order from ./configure --help
-
-ifeq ($(BR2_PACKAGE_ORC),y)
-GST1_PLUGINS_BASE_DEPENDENCIES += orc
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-orc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ADDER),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-adder
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-adder
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_APP),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-app
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-app
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOCONVERT),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-audioconvert
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-audioconvert
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORATE),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-audiorate
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-audiorate
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOTESTSRC),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-audiotestsrc
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-audiotestsrc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ENCODING),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-encoding
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-encoding
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOCONVERT),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-videoconvert
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-videoconvert
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_GIO),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-gio
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-gio
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PLAYBACK),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-playback
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-playback
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORESAMPLE),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-audioresample
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-audioresample
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_SUBPARSE),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-subparse
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-subparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TCP),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-tcp
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-tcp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-typefind
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-typefind
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOTESTSRC),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-videotestsrc
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-videotestsrc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEORATE),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-videorate
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-videorate
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOSCALE),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-videoscale
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-videoscale
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VOLUME),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-volume
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-volume
-endif
-
-ifeq ($(BR2_PACKAGE_ZLIB),y)
-GST1_PLUGINS_BASE_DEPENDENCIES += zlib
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-zlib
-endif
-
-ifeq ($(BR2_PACKAGE_XORG7),y)
-GST1_PLUGINS_BASE_DEPENDENCIES += xlib_libX11 xlib_libXext xlib_libXv
-GST1_PLUGINS_BASE_CONF_OPTS += \
-	--enable-x \
-	--enable-xshm \
-	--enable-xvideo
-else
-GST1_PLUGINS_BASE_CONF_OPTS += \
-	--disable-x \
-	--disable-xshm \
-	--disable-xvideo
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ALSA),y)
-GST1_PLUGINS_BASE_DEPENDENCIES += alsa-lib
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-alsa
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TREMOR),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-ivorbis
-GST1_PLUGINS_BASE_DEPENDENCIES += tremor
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-ivorbis
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OPUS),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-opus
-GST1_PLUGINS_BASE_DEPENDENCIES += opus
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-opus
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OGG),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-ogg
-GST1_PLUGINS_BASE_DEPENDENCIES += libogg
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-ogg
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PANGO),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-pango
-GST1_PLUGINS_BASE_DEPENDENCIES += pango
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-pango
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_THEORA),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-theora
-GST1_PLUGINS_BASE_DEPENDENCIES += libtheora
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-theora
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VORBIS),y)
-GST1_PLUGINS_BASE_CONF_OPTS += --enable-vorbis
-GST1_PLUGINS_BASE_DEPENDENCIES += libvorbis
-else
-GST1_PLUGINS_BASE_CONF_OPTS += --disable-vorbis
-endif
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-good/Config.in Base/package/gstreamer1/gst1-plugins-good/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-good/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-good/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,369 +0,0 @@
-menuconfig BR2_PACKAGE_GST1_PLUGINS_GOOD
-	bool "gst1-plugins-good"
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	select BR2_PACKAGE_XLIB_LIBX11 if BR2_PACKAGE_XORG7
-	select BR2_PACKAGE_XLIB_LIBXEXT if BR2_PACKAGE_XORG7
-	select BR2_PACKAGE_XLIB_LIBXV if BR2_PACKAGE_XORG7
-	help
-	  A set of well-supported plug-ins for GStreamer under the preferred
-	  license.
-
-	  http://gstreamer.freedesktop.org/
-
-if BR2_PACKAGE_GST1_PLUGINS_GOOD
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_JPEG
-	bool "jpeg (JPEG support)"
-	select BR2_PACKAGE_JPEG
-	help
-	  JPeg plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PNG
-	bool "png (PNG support)"
-	select BR2_PACKAGE_LIBPNG
-	help
-	  PNG plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_BZ2
-	bool "bz2 support"
-	depends on BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
-	select BR2_PACKAGE_BZIP2
-	help
-	  Enable bz2 support for the following plugins:
-	  matroska
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_ZLIB
-	bool "zlib support"
-	depends on BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4 || BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
-	select BR2_PACKAGE_ZLIB
-	help
-	  Enable zlib support for the following plugins:
-	  id3demux, isomp4, matroska
-
-comment "dependency-less plugins"
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ALPHA
-	bool "alpha"
-	help
-	  adds an alpha channel to video - constant or via chroma-keying
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_APETAG
-	bool "apetag"
-	help
-	  APEv1/2 tag reader
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOFX
-	bool "audiofx"
-	help
-	  Audio effects plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOPARSERS
-	bool "audioparsers"
-	help
-	  Parsers for various audio formats
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUPARSE
-	bool "auparse"
-	help
-	  parses au streams
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUTODETECT
-	bool "autodetect"
-	help
-	  Plugin contains auto-detection plugins for video/audio in- and outputs
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AVI
-	bool "avi (*.avi video)"
-	default y
-	help
-	  AVI stream handling
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CUTTER
-	bool "cutter"
-	help
-	  Audio Cutter to split audio into non-silent bits
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEBUGUTILS
-	bool "debugutils"
-	help
-	  elements for testing and debugging
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEINTERLACE
-	bool "deinterlace"
-	help
-	  Deinterlacer
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DTMF
-	bool "dtmf"
-	help
-	  DTMF plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EFFECTV
-	bool "effectv"
-	help
-	  effect plugins from the effectv project
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EQUALIZER
-	bool "equalizer"
-	help
-	  GStreamer audio equalizers
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLV
-	bool "flv"
-	help
-	  FLV muxing and demuxing plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLX
-	bool "flx"
-	help
-	  FLC/FLI/FLX video decoder
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM
-	bool "goom"
-	help
-	  GOOM visualization filter
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM2K1
-	bool "goom2k1"
-	help
-	  GOOM 2k1 visualization filter
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ICYDEMUX
-	bool "icydemux"
-	help
-	  Demux ICY tags from a stream
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX
-	bool "id3demux (*.mp3 audio)"
-	help
-	  Demux ID3v1 and ID3v2 tags from a file
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_IMAGEFREEZE
-	bool "imagefreeze"
-	help
-	  Still frame stream generator
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_INTERLEAVE
-	bool "interleave"
-	help
-	  Audio interleaver/deinterleaver
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4
-	bool "isomp4"
-	default y
-	help
-	  ISO base media file format support (mp4, 3gpp, qt, mj2)
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LAW
-	bool "law"
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LEVEL
-	bool "level"
-	help
-	  Audio level plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
-	bool "matroska"
-	help
-	  Matroska and WebM stream handling
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MONOSCOPE
-	bool "monoscope"
-	help
-	  Monoscope visualization
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIFILE
-	bool "multifile"
-	help
-	  Reads/Writes buffers from/to sequentially named files
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIPART
-	bool "multipart"
-	help
-	  multipart stream manipulation
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_REPLAYGAIN
-	bool "replaygain"
-	help
-	  ReplayGain volume normalization
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTP
-	bool "rtp"
-	help
-	  Real-time protocol plugins
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTPMANAGER
-	bool "rtpmanager"
-	help
-	  RTP session management plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTSP
-	bool "rtsp"
-	help
-	  transfer data via RTSP
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SHAPEWIPE
-	bool "shapewipe"
-	help
-	  Shape Wipe transition filter
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SMPTE
-	bool "smpte"
-	help
-	  Apply the standard SMPTE transitions on video images
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPECTRUM
-	bool "spectrum"
-	help
-	  Run an FFT on the audio signal, output spectrum data
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_UDP
-	bool "udp"
-	help
-	  transfer data via UDP
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOBOX
-	bool "videobox"
-	help
-	  resizes a video by adding borders or cropping
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOCROP
-	bool "videocrop"
-	help
-	  Crops video into a user-defined region
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOFILTER
-	bool "videofilter"
-	help
-	  Video filters plugin
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOMIXER
-	bool "videomixer"
-	help
-	  Video mixer
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVENC
-	bool "wavenc"
-	help
-	  Encode raw audio into WAV
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPARSE
-	bool "wavparse (*.wav audio)"
-	default y
-	help
-	  Parse a .wav file into raw audio
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_Y4M
-	bool "y4m"
-	help
-	  Encodes a YUV frame into the yuv4mpeg format (mjpegtools)
-
-comment "plugins with external dependencies"
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS
-	bool "ossaudio (OSS audio)"
-	help
-	  OSS (Open Sound System) support for GStreamer
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS4
-	bool "oss4 (Open Sound System 4)"
-	help
-	  Open Sound System (OSS) version 4 support for GStreamer
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_V4L2
-	bool "v4l2"
-	depends on BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_0 # multi planar api
-	help
-	  elements for Video 4 Linux
-
-comment "v4l2 needs a toolchain w/ headers >= 3.0"
-	depends on !BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_0
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CAIRO
-	bool "cairo"
-	select BR2_PACKAGE_CAIRO
-	select BR2_PACKAGE_CAIRO_PNG
-	help
-	  Cairo-based elements
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLAC
-	bool "flac (libFLAC)"
-	depends on BR2_USE_WCHAR # flac
-	select BR2_PACKAGE_FLAC
-	help
-	  The FLAC Lossless compressor Codec
-
-comment "flac needs a toolchain w/ wchar"
-	depends on !BR2_USE_WCHAR
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GDKPIXBUF
-	bool "gdkpixbuf"
-	select BR2_PACKAGE_GDK_PIXBUF
-	depends on BR2_USE_WCHAR # gdk-pixbuf -> libglib2
-	depends on BR2_TOOLCHAIN_HAS_THREADS # gdk-pixbuf -> libglib2
-	help
-	  GdkPixbuf-based image decoder, overlay and sink
-
-comment "gdkpixbuf needs a toolchain w/ wchar, threads"
-	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_PULSE
-	depends on BR2_TOOLCHAIN_HAS_THREADS # pulseaudio
-	depends on BR2_USE_MMU # pulseaudio
-	depends on !BR2_STATIC_LIBS # pulseaudio
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # pulseaudio -> json-c
-	select BR2_PACKAGE_PULSEAUDIO
-	bool "pulseaudio"
-	help
-	  PulseAudio plugin library
-
-comment "pulseaudio support needs a toolchain w/ threads, dynamic library"
-	depends on BR2_USE_MMU
-	depends on BR2_TOOLCHAIN_HAS_SYNC_4
-	depends on !BR2_TOOLCHAIN_HAS_THREADS || BR2_STATIC_LIBS
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SOUPHTTPSRC
-	bool "souphttpsrc (http client)"
-	depends on BR2_USE_WCHAR # libsoup -> glib2
-	depends on BR2_TOOLCHAIN_HAS_THREADS # libsoup -> glib2
-	select BR2_PACKAGE_LIBSOUP
-	help
-	  libsoup HTTP client src/sink
-
-comment "souphttpsrc needs a toolchain w/ wchar, threads"
-	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPEEX
-	bool "speex"
-	select BR2_PACKAGE_SPEEX
-	help
-	  Speex plugin library
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_TAGLIB
-	bool "taglib"
-	depends on BR2_INSTALL_LIBSTDCPP
-	depends on BR2_USE_WCHAR
-	select BR2_PACKAGE_TAGLIB
-	help
-	  Taglib tagging plugin library
-
-comment "taglib needs a toolchain w/ C++, wchar"
-	depends on !BR2_INSTALL_LIBSTDCPP || !BR2_USE_WCHAR
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VPX
-	bool "vpx (webm)"
-	select BR2_PACKAGE_LIBVPX
-	depends on BR2_TOOLCHAIN_HAS_THREADS # libvpx
-	help
-	  VP8 plugin
-
-comment "libvpx needs a toolchain w/ threads"
-	depends on !BR2_TOOLCHAIN_HAS_THREADS
-
-config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPACK
-	bool "wavpack (*.wv audio)"
-	select BR2_PACKAGE_WAVPACK
-	help
-	  Wavpack lossless/lossy audio format handling
-
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.hash Base/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.hash
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-1.8.1.tar.xz.sha256sum
-sha256	2103e17921d67894e82eafdd64fb9b06518599952fd93e625bfbc83ffead0972  gst-plugins-good-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.mk Base/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.mk
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-good/gst1-plugins-good.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,428 +0,0 @@
-################################################################################
-#
-# gst1-plugins-good
-#
-################################################################################
-
-GST1_PLUGINS_GOOD_VERSION = 1.8.1
-GST1_PLUGINS_GOOD_SOURCE = gst-plugins-good-$(GST1_PLUGINS_GOOD_VERSION).tar.xz
-GST1_PLUGINS_GOOD_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-good
-GST1_PLUGINS_GOOD_LICENSE_FILES = COPYING
-GST1_PLUGINS_GOOD_LICENSE = LGPLv2.1+
-
-GST1_PLUGINS_GOOD_CONF_OPTS = \
-	--disable-valgrind \
-	--disable-examples \
-	--disable-directsound \
-	--disable-waveform \
-	--disable-sunaudio \
-	--disable-osx_audio \
-	--disable-osx_video \
-	--disable-aalib \
-	--disable-aalibtest \
-	--disable-libcaca \
-	--disable-esd \
-	--disable-esdtest
-
-
-# Options which require currently unpackaged libraries
-GST1_PLUGINS_GOOD_CONF_OPTS += \
-	--disable-jack \
-	--disable-libdv \
-	--disable-dv1394 \
-	--disable-shout2 \
-	--disable-taglib
-
-GST1_PLUGINS_GOOD_DEPENDENCIES = gstreamer1 gst1-plugins-base
-
-ifeq ($(BR2_PACKAGE_LIBV4L),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --with-libv4l2
-GST1_PLUGINS_GOOD_DEPENDENCIES += libv4l
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --without-libv4l2
-endif
-
-ifeq ($(BR2_PACKAGE_ORC),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-orc
-GST1_PLUGINS_GOOD_DEPENDENCIES += orc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ALPHA),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-alpha
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-alpha
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_APETAG),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-apetag
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-apetag
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOFX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-audiofx
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-audiofx
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOPARSERS),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-audioparsers
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-audioparsers
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUPARSE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-auparse
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-auparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUTODETECT),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-autodetect
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-autodetect
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AVI),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-avi
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-avi
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CUTTER),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-cutter
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-cutter
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEBUGUTILS),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-debugutils
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-debugutils
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEINTERLACE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-deinterlace
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-deinterlace
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DTMF),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-dtmf
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-dtmf
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EFFECTV),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-effectv
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-effectv
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EQUALIZER),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-equalizer
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-equalizer
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLV),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flv
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flv
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flx
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flx
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-goom
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-goom
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM2K1),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-goom2k1
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-goom2k1
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ICYDEMUX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-icydemux
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-icydemux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-id3demux
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-id3demux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_IMAGEFREEZE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-imagefreeze
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-imagefreeze
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_INTERLEAVE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-interleave
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-interleave
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-isomp4
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-isomp4
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LAW),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-law
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-law
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LEVEL),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-level
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-level
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-matroska
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-matroska
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MONOSCOPE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-monoscope
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-monoscope
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIFILE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-multifile
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-multifile
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIPART),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-multipart
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-multipart
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_REPLAYGAIN),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-replaygain
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-replaygain
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTP),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtp
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTPMANAGER),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtpmanager
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtpmanager
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTSP),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtsp
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtsp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SHAPEWIPE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-shapewipe
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-shapewipe
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SMPTE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-smpte
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-smpte
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPECTRUM),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-spectrum
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-spectrum
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_UDP),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-udp
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-udp
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOBOX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videobox
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videobox
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOCROP),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videocrop
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videocrop
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOFILTER),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videofilter
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videofilter
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOMIXER),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videomixer
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videomixer
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVENC),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavenc
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavenc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPARSE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavparse
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavparse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_Y4M),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-y4m
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-y4m
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-oss
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-oss
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS4),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-oss4
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-oss4
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_V4L2),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-gst_v4l2
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-gst_v4l2
-endif
-
-ifeq ($(BR2_PACKAGE_XORG7),y)
-GST1_PLUGINS_GOOD_DEPENDENCIES += xlib_libX11 xlib_libXext xlib_libXv
-GST1_PLUGINS_GOOD_CONF_OPTS += \
-	--enable-x \
-	$(if $(BR2_PACKAGE_XLIB_LIBXFIXES),xlib_libXfixes) \
-	$(if $(BR2_PACKAGE_XLIB_LIBXDAMAGE),xlib_libXdamage)
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += \
-	--disable-x
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CAIRO),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-cairo
-GST1_PLUGINS_GOOD_DEPENDENCIES += cairo
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-cairo
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLAC),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flac
-GST1_PLUGINS_GOOD_DEPENDENCIES += flac
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flac
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GDKPIXBUF),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-gdk_pixbuf
-GST1_PLUGINS_GOOD_DEPENDENCIES += gdk-pixbuf
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-gdk_pixbuf
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_JPEG),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-jpeg
-GST1_PLUGINS_GOOD_DEPENDENCIES += jpeg
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-jpeg
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PNG),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-libpng
-GST1_PLUGINS_GOOD_DEPENDENCIES += libpng
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-libpng
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_PULSE),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-pulse
-GST1_PLUGINS_GOOD_DEPENDENCIES += pulseaudio
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-pulse
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SOUPHTTPSRC),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-soup
-GST1_PLUGINS_GOOD_DEPENDENCIES += libsoup
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-soup
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPEEX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-speex
-GST1_PLUGINS_GOOD_DEPENDENCIES += speex
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-speex
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_TAGLIB),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-taglib
-GST1_PLUGINS_GOOD_DEPENDENCIES += taglib
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-taglib
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VPX),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-vpx
-GST1_PLUGINS_GOOD_DEPENDENCIES += libvpx
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-vpx
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPACK),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavpack
-GST1_PLUGINS_GOOD_DEPENDENCIES += wavpack
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavpack
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_ZLIB),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-zlib
-GST1_PLUGINS_GOOD_DEPENDENCIES += zlib
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-zlib
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_BZ2),y)
-GST1_PLUGINS_GOOD_CONF_OPTS += --enable-bz2
-GST1_PLUGINS_GOOD_DEPENDENCIES += bzip2
-else
-GST1_PLUGINS_GOOD_CONF_OPTS += --disable-bz2
-endif
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/Config.in Base/package/gstreamer1/gst1-plugins-ugly/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-ugly/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,84 +0,0 @@
-menuconfig BR2_PACKAGE_GST1_PLUGINS_UGLY
-	bool "gst1-plugins-ugly"
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	help
-	  A set of well-supported plug-ins for GStreamer, but might pose
-	  problems for distributors.
-
-	  http://gstreamer.freedesktop.org/
-
-if BR2_PACKAGE_GST1_PLUGINS_UGLY
-
-comment "dependency-less plugins"
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_ASFDEMUX
-	bool "asfdemux"
-	help
-	  Demuxes and muxes audio and video in Microsofts ASF format
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDLPCMDEC
-	bool "dvdlpcmdec"
-	help
-	  Decode DVD LPCM frames into standard PCM
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDSUB
-	bool "dvdsub"
-	help
-	  DVD subtitle parser and decoder
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_XINGMUX
-	bool "xingmux"
-	help
-	  Add XING tags to mpeg audio files
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_REALMEDIA
-	bool "realmedia"
-	help
-	  RealMedia support plugins
-
-comment "plugins with external dependencies (there may be more available)"
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDREAD
-	bool "dvdread"
-	depends on !BR2_STATIC_LIBS # libdvdread
-	select BR2_PACKAGE_LIBDVDREAD
-	help
-	  Access a DVD with dvdread
-
-comment "dvdread needs a toolchain w/ dynamic library"
-	depends on BR2_STATIC_LIBS
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_LAME
-	bool "lame (*.mp3 audio encoder)"
-	select BR2_PACKAGE_LAME
-	help
-	  Encode MP3s with LAME
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MAD
-	bool "mad (*.mp3 audio)"
-	select BR2_PACKAGE_LIBID3TAG
-	select BR2_PACKAGE_LIBMAD
-	help
-	  mp3 decoding based on the mad library
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPG123
-	bool "mpg123 (*.mp3 audio)"
-	select BR2_PACKAGE_MPG123
-	help
-	  mp3 decoding based on the mpg123 library
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPEG2DEC
-	bool "mpeg2dec"
-	select BR2_PACKAGE_LIBMPEG2
-	help
-	  LibMpeg2 decoder
-
-config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_X264
-	bool "x264"
-	select BR2_PACKAGE_X264
-	help
-	  x264 encoder
-
-# Note: to get descriptions use the following.
-# # find . -name 'plugin-*.xml' | xargs grep -m 1 description
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.hash Base/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.hash
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-1.8.1.tar.xz.sha256sum
-sha256	8e656a9a3be60d7e7ed3fb8e2a22d070b1f54f95d0b22accd876360e659446ce  gst-plugins-ugly-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.mk Base/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.mk
--- buildroot-2016.05/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-plugins-ugly/gst1-plugins-ugly.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,115 +0,0 @@
-################################################################################
-#
-# gst1-plugins-ugly
-#
-################################################################################
-
-GST1_PLUGINS_UGLY_VERSION = 1.8.1
-GST1_PLUGINS_UGLY_SOURCE = gst-plugins-ugly-$(GST1_PLUGINS_UGLY_VERSION).tar.xz
-GST1_PLUGINS_UGLY_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-ugly
-GST1_PLUGINS_UGLY_LICENSE_FILES = COPYING
-# GPL licensed plugins will append to GST1_PLUGINS_UGLY_LICENSE if enabled.
-GST1_PLUGINS_UGLY_LICENSE = LGPLv2.1+
-
-GST1_PLUGINS_UGLY_CONF_OPTS = --disable-examples --disable-valgrind
-
-GST1_PLUGINS_UGLY_CONF_OPTS += \
-	--disable-a52dec \
-	--disable-amrnb \
-	--disable-amrwb \
-	--disable-cdio \
-	--disable-sidplay \
-	--disable-twolame
-
-GST1_PLUGINS_UGLY_DEPENDENCIES = gstreamer1 gst1-plugins-base
-
-ifeq ($(BR2_PACKAGE_ORC),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-orc
-GST1_PLUGINS_UGLY_DEPENDENCIES += orc
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_ASFDEMUX),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-asfdemux
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-asfdemux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDLPCMDEC),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdlpcmdec
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdlpcmdec
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDSUB),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdsub
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdsub
-endif
-
-ifeq ($(BR2_PACKAGE_GST_PLUGINS_UGL1_PLUGIN_XINGMUX),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-xingmux
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-xingmux
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_REALMEDIA),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-realmedia
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-realmedia
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDREAD),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdread
-GST1_PLUGINS_UGLY_DEPENDENCIES += libdvdread
-GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdread
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_LAME),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-lame
-GST1_PLUGINS_UGLY_DEPENDENCIES += lame
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-lame
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MAD),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mad
-GST1_PLUGINS_UGLY_DEPENDENCIES += libid3tag libmad
-GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mad
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPG123),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mpg123
-GST1_PLUGINS_UGLY_DEPENDENCIES += mpg123
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mpg123
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPEG2DEC),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mpeg2dec
-GST1_PLUGINS_UGLY_DEPENDENCIES += libmpeg2
-GST1_PLUGINS_ULGY_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mpeg2dec
-endif
-
-ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_X264),y)
-GST1_PLUGINS_UGLY_CONF_OPTS += --enable-x264
-GST1_PLUGINS_UGLY_DEPENDENCIES += x264
-GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
-else
-GST1_PLUGINS_UGLY_CONF_OPTS += --disable-x264
-endif
-
-# Add GPL license if GPL plugins enabled.
-ifeq ($(GST1_PLUGINS_UGLY_HAS_GPL_LICENSE),y)
-GST1_PLUGINS_UGLY_LICENSE += GPLv2
-endif
-
-# Use the following command to extract license info for plugins.
-# # find . -name 'plugin-*.xml' | xargs grep license
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-validate/Config.in Base/package/gstreamer1/gst1-validate/Config.in
--- buildroot-2016.05/package/gstreamer1/gst1-validate/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-validate/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-config BR2_PACKAGE_GST1_VALIDATE
-	bool "gst1-validate"
-	depends on BR2_PACKAGE_PYTHON
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	select BR2_PACKAGE_PYTHON_PYEXPAT
-	# cairo is autodetected but needs PNG support
-	select BR2_PACKAGE_CAIRO_PNG if BR2_PACKAGE_CAIRO
-	help
-	  GstValidate is a tool that allows GStreamer developers to
-	  check that the GstElements they write behave the way they
-	  are supposed to.
-
-	  http://gstreamer.freedesktop.org/
-
-comment "gst1-validate depends on python"
-	depends on !BR2_PACKAGE_PYTHON
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-validate/gst1-validate.hash Base/package/gstreamer1/gst1-validate/gst1-validate.hash
--- buildroot-2016.05/package/gstreamer1/gst1-validate/gst1-validate.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-validate/gst1-validate.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gst-validate/gst-validate-1.8.1.tar.xz.sha256sum
-sha256 a9b208c014cca2dc515599f01fd3a7a294133fd936366e74f439b9bc96a1ccbf  gst-validate-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst1-validate/gst1-validate.mk Base/package/gstreamer1/gst1-validate/gst1-validate.mk
--- buildroot-2016.05/package/gstreamer1/gst1-validate/gst1-validate.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst1-validate/gst1-validate.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-################################################################################
-#
-# gst1-validate
-#
-################################################################################
-
-GST1_VALIDATE_VERSION = 1.8.1
-GST1_VALIDATE_SOURCE = gst-validate-$(GST1_VALIDATE_VERSION).tar.xz
-GST1_VALIDATE_SITE = http://gstreamer.freedesktop.org/src/gst-validate
-GST1_VALIDATE_LICENSE = LGPLv2.1+
-GST1_VALIDATE_LICENSE_FILES = COPYING
-
-GST1_VALIDATE_CONF_OPTS = --disable-sphinx-doc
-
-GST1_VALIDATE_DEPENDENCIES = \
-	gstreamer1 \
-	gst1-plugins-base \
-	host-python \
-	python \
-	$(if $(BR2_PACKAGE_CAIRO),cairo)
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst-omx/Config.in Base/package/gstreamer1/gst-omx/Config.in
--- buildroot-2016.05/package/gstreamer1/gst-omx/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst-omx/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-config BR2_PACKAGE_GST_OMX
-	bool "gst-omx"
-	depends on BR2_PACKAGE_HAS_LIBOPENMAX
-	select BR2_PACKAGE_GST1_PLUGINS_BASE
-	help
-	  GStreamer plug-in to use OpenMAX API.
-
-	  http://cgit.freedesktop.org/gstreamer/gst-omx
-
-comment "gst-omx requires a OpenMAX implementation"
-	depends on !BR2_PACKAGE_HAS_LIBOPENMAX
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gst-omx/gst-omx.mk Base/package/gstreamer1/gst-omx/gst-omx.mk
--- buildroot-2016.05/package/gstreamer1/gst-omx/gst-omx.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gst-omx/gst-omx.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-################################################################################
-#
-# gst-omx
-#
-################################################################################
-
-GST_OMX_VERSION = 1.2.0
-GST_OMX_SOURCE = gst-omx-$(GST_OMX_VERSION).tar.xz
-GST_OMX_SITE = http://gstreamer.freedesktop.org/src/gst-omx
-
-GST_OMX_LICENSE = LGPLv2.1
-GST_OMX_LICENSE_FILES = COPYING
-
-ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
-GST_OMX_CONF_OPTS = \
-	--with-omx-target=rpi
-GST_OMX_CONF_ENV = \
-	CFLAGS="$(TARGET_CFLAGS) \
-		-I$(STAGING_DIR)/usr/include/IL \
-		-I$(STAGING_DIR)/usr/include/interface/vcos/pthreads \
-		-I$(STAGING_DIR)/usr/include/interface/vmcs_host/linux"
-endif
-
-ifeq ($(BR2_PACKAGE_BELLAGIO),y)
-GST_OMX_CONF_OPTS = \
-	--with-omx-target=bellagio
-GST_OMX_CONF_ENV = \
-	CFLAGS="$(TARGET_CFLAGS) \
-		-DOMX_VERSION_MAJOR=1 \
-		-DOMX_VERSION_MINOR=1 \
-		-DOMX_VERSION_REVISION=2 \
-		-DOMX_VERSION_STEP=0"
-endif
-
-GST_OMX_DEPENDENCIES = gstreamer1 gst1-plugins-base libopenmax
-
-# adjust library paths to where buildroot installs them
-define GST_OMX_FIXUP_CONFIG_PATHS
-	find $(@D)/config -name gstomx.conf | \
-		xargs $(SED) 's|/usr/local|/usr|g' -e 's|/opt/vc|/usr|g'
-endef
-
-GST_OMX_POST_PATCH_HOOKS += GST_OMX_FIXUP_CONFIG_PATHS
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gstreamer1/Config.in Base/package/gstreamer1/gstreamer1/Config.in
--- buildroot-2016.05/package/gstreamer1/gstreamer1/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gstreamer1/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,55 +0,0 @@
-comment "gstreamer 1.x needs a toolchain w/ wchar, threads"
-	depends on BR2_USE_MMU
-	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
-
-config BR2_PACKAGE_GSTREAMER1
-	bool "gstreamer 1.x"
-	depends on BR2_USE_WCHAR # glib2
-	depends on BR2_TOOLCHAIN_HAS_THREADS # glib2
-	depends on BR2_USE_MMU # glib2
-	select BR2_PACKAGE_LIBGLIB2
-	help
-	  GStreamer is an open source multimedia framework. This 1.x version of
-	  Gstreamer is incompatible with Gstreamer 0.10.x.
-
-	  http://gstreamer.freedesktop.org/
-
-if BR2_PACKAGE_GSTREAMER1
-
-config BR2_PACKAGE_GSTREAMER1_PARSE
-	bool "enable command-line parser"
-	default y
-	help
-	  Enable command line parser for gstreamer. This may increase the CPU
-	  overhead by a small amount.
-
-config BR2_PACKAGE_GSTREAMER1_TRACE
-	bool "enable tracing subsystem"
-	default y
-	help
-	  Enable the tracing subsystem within gstreamer. This may increase CPU
-	  overhead by a small amount.
-
-config BR2_PACKAGE_GSTREAMER1_GST_DEBUG
-	bool "enable gst-debug trace support"
-	default y
-	help
-	  Enable support for the gst-debug tracing functionality in gstreamer.
-	  This has limited CPU overhead, but does increase the rootfs size
-	  somewhat.
-
-config BR2_PACKAGE_GSTREAMER1_PLUGIN_REGISTRY
-	bool "enable plugin registry"
-	default y
-	help
-	  Enable support for the GStreamer plugin registry. This may increase
-	  the launch-time for a GStreamer application.
-
-config BR2_PACKAGE_GSTREAMER1_INSTALL_TOOLS
-	bool "install gst-launch & gst-inspect"
-	default y
-	help
-	  Install the gst-launch and gst-inspect tools. This will take up
-	  additional space on the target.
-
-endif
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gstreamer1/gstreamer1.hash Base/package/gstreamer1/gstreamer1/gstreamer1.hash
--- buildroot-2016.05/package/gstreamer1/gstreamer1/gstreamer1.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gstreamer1/gstreamer1.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# From http://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.8.1.tar.xz.sha256sum
-sha256	5a3722fb9302dd977c17ced4240293dc777cb716dc98c8cca63d75c27e5e3107  gstreamer-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gstreamer1/gstreamer1.mk Base/package/gstreamer1/gstreamer1/gstreamer1.mk
--- buildroot-2016.05/package/gstreamer1/gstreamer1/gstreamer1.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gstreamer1/gstreamer1.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,49 +0,0 @@
-################################################################################
-#
-# gstreamer1
-#
-################################################################################
-
-GSTREAMER1_VERSION = 1.8.1
-GSTREAMER1_SOURCE = gstreamer-$(GSTREAMER1_VERSION).tar.xz
-GSTREAMER1_SITE = http://gstreamer.freedesktop.org/src/gstreamer
-GSTREAMER1_INSTALL_STAGING = YES
-GSTREAMER1_LICENSE_FILES = COPYING
-GSTREAMER1_LICENSE = LGPLv2+, LGPLv2.1+
-
-# Checking if unaligned memory access works correctly cannot be done when cross
-# compiling. For the following architectures there is no information available
-# in the configure script.
-ifeq ($(BR2_arc)$(BR2_xtensa)$(BR2_microblaze)$(BR2_nios2),y)
-GSTREAMER1_CONF_ENV = as_cv_unaligned_access=no
-endif
-ifeq ($(BR2_aarch64),y)
-GSTREAMER1_CONF_ENV = as_cv_unaligned_access=yes
-endif
-
-GSTREAMER1_CONF_OPTS = \
-	--disable-examples \
-	--disable-tests \
-	--disable-failing-tests \
-	--disable-valgrind \
-	--disable-benchmarks \
-	--disable-check \
-	$(if $(BR2_PACKAGE_GSTREAMER1_TRACE),,--disable-trace) \
-	$(if $(BR2_PACKAGE_GSTREAMER1_PARSE),,--disable-parse) \
-	$(if $(BR2_PACKAGE_GSTREAMER1_GST_DEBUG),,--disable-gst-debug) \
-	$(if $(BR2_PACKAGE_GSTREAMER1_PLUGIN_REGISTRY),,--disable-registry) \
-	$(if $(BR2_PACKAGE_GSTREAMER1_INSTALL_TOOLS),,--disable-tools)
-
-GSTREAMER1_DEPENDENCIES = libglib2 host-pkgconf host-bison host-flex
-
-# gstreamer-1.6 changed the location of its gstconfig.h file,
-# and unfortunately, not all (by far!) consumers have been
-# updated to look in the correct location.
-# Add a symlink to the legacy location
-define GSTREAMER1_LEGACY_CGSTCONFIG_H
-	cd $(STAGING_DIR)/usr/include/gstreamer-1.0/gst && \
-		ln -sf ../../../lib/gstreamer-1.0/include/gst/gstconfig.h .
-endef
-GSTREAMER1_POST_INSTALL_STAGING_HOOKS += GSTREAMER1_LEGACY_CGSTCONFIG_H
-
-$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/gstreamer1/gstreamer1.mk Base/package/gstreamer1/gstreamer1.mk
--- buildroot-2016.05/package/gstreamer1/gstreamer1.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/gstreamer1/gstreamer1.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-include package/gstreamer1/*/*.mk
diff -Naur -x gcc buildroot-2016.05/package/libcec/libcec.hash Base/package/libcec/libcec.hash
--- buildroot-2016.05/package/libcec/libcec.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libcec/libcec.hash	2017-10-09 17:21:47.215098361 +0200
@@ -1,2 +1,2 @@
 # Locally computed
-sha256  0f29d5a2d155b507807ba896bc3b3e50a0ab56bf8f543a2bf5c2798c790292b5  libcec-2c675dac48387c48c7f43c5d2547ef0c4ef5c7dd.tar.gz
+sha256 d8c4339b6b9944ee7d88fab428838a2cc2e4d244f9bf5266706650669815f10d  libcec-2.1.4-2.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/libcec/libcec.mk Base/package/libcec/libcec.mk
--- buildroot-2016.05/package/libcec/libcec.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libcec/libcec.mk	2017-10-09 17:21:47.219098361 +0200
@@ -3,8 +3,9 @@
 # libcec
 #
 ################################################################################
-
-LIBCEC_VERSION = 2c675dac48387c48c7f43c5d2547ef0c4ef5c7dd
+LIBCEC_VERSION = 2.1.4-2
+LIBCEC_VERSIONG = 
+LIBCEC_SOURCE = libcec-$(LIBCEC_VERSION).tar.gz
 LIBCEC_SITE = $(call github,Pulse-Eight,libcec,$(LIBCEC_VERSION))
 LIBCEC_LICENSE = GPLv2+
 LIBCEC_LICENSE_FILES = COPYING
@@ -12,30 +13,23 @@
 # Autoreconf required due to being a dev tarball and not a release tarball.
 LIBCEC_AUTORECONF = YES
 LIBCEC_INSTALL_STAGING = YES
-LIBCEC_DEPENDENCIES = host-pkgconf libplatform
-
+LIBCEC_DEPENDENCIES = host-pkgconf
+#
 ifeq ($(BR2_PACKAGE_LOCKDEV),y)
 LIBCEC_DEPENDENCIES += lockdev
 endif
-
+#
 ifeq ($(BR2_PACKAGE_HAS_UDEV),y)
 LIBCEC_DEPENDENCIES += udev
 endif
-
-ifeq ($(BR2_PACKAGE_PYTHON)$(BR2_PACKAGE_PYTHON3),y)
-LIBCEC_DEPENDENCIES += host-swig $(if $(BR2_PACKAGE_PYTHON3),python3,python)
-endif
-
+#
 ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
+LIBCEC_CONF_OPTS = --enable-rpi --with-rpi-include-path=$(STAGING_DIR)/usr/include
 LIBCEC_DEPENDENCIES += rpi-userland
-LIBCEC_CONF_OPTS += \
-	-DCMAKE_C_FLAGS="-lvcos -lvchiq_arm" \
-	-DCMAKE_CXX_FLAGS="-I$(STAGING_DIR)/usr/include/interface/vmcs_host/linux \
-		-I$(STAGING_DIR)/usr/include/interface/vcos/pthreads"
-endif
-
-ifeq ($(BR2_PACKAGE_XLIB_LIBXRANDR),y)
-LIBCEC_DEPENDENCIES += xlib_libXrandr
+LIBCEC_CONF_ENV += LIBS="-lvcos -lvchostif"
+else
+LIBCEC_CONF_OPTS = --disable-rpi --disable-tda995x --enable-imx6
 endif
-
-$(eval $(cmake-package))
+#
+$(eval $(autotools-package))
+#
diff -Naur -x gcc buildroot-2016.05/package/libfslcodec/libfslcodec.mk Base/package/libfslcodec/libfslcodec.mk
--- buildroot-2016.05/package/libfslcodec/libfslcodec.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libfslcodec/libfslcodec.mk	2017-10-09 17:21:47.223098361 +0200
@@ -20,4 +20,21 @@
 # FIXME The Makefile installs both the arm9 and arm11 versions of the
 # libraries, but we only need one of them.
 
+# Use symlinks in staging dir so every application can link against the libs
+# whether they look at imx-mm or not (gst-fsl-plugins vs. gst1-imx).
+define LIBFSLCODEC_FIXUP_STAGING_PATH
+	find $(STAGING_DIR)/usr/lib/imx-mm -mindepth 2 -maxdepth 2 -not -type d \
+		-exec ln -fs {} $(STAGING_DIR)/usr/lib \;
+endef
+LIBFSLCODEC_POST_INSTALL_STAGING_HOOKS += LIBFSLCODEC_FIXUP_STAGING_PATH
+
+# Use symlinks in install dir as well to match staging setup.
+define LIBFSLCODEC_FIXUP_TARGET_PATH
+#	find $(TARGET_DIR)/usr/lib/imx-mm -mindepth 2 -maxdepth 2 -not -type d \
+#		-exec ln -fs {} $(TARGET_DIR)/usr/lib \;
+	pushd $(TARGET_DIR)/usr/lib;ln -s imx-mm/audio-codec/* .;ln -s imx-mm/video-codec/* .;ln -s imx-mm/parser/* .;popd;
+endef
+LIBFSLCODEC_POST_INSTALL_TARGET_HOOKS += LIBFSLCODEC_FIXUP_TARGET_PATH
+
+
 $(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/libimxvpuapi/Config.in Base/package/libimxvpuapi/Config.in
--- buildroot-2016.05/package/libimxvpuapi/Config.in	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libimxvpuapi/Config.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-comment "libimxvpuapi needs an i.MX platform with VPU support"
-	depends on BR2_arm
-	depends on !BR2_PACKAGE_FREESCALE_IMX_HAS_VPU
-
-config BR2_PACKAGE_LIBIMXVPUAPI
-	bool "libimxvpuapi"
-	depends on BR2_arm # Only relevant for i.MX
-	depends on BR2_PACKAGE_FREESCALE_IMX_HAS_VPU
-	select BR2_PACKAGE_IMX_VPU
-	help
-	  This library provides an API for using the iMX6 VPU video
-	  engine. It is an alternative to Freescale's VPU
-	  wrapper. Both the wrapper and this library are layered on
-	  top of imx-vpu, the low-level iMX6 VPU interface.
-
-	  https://github.com/Freescale/libimxvpuapi
diff -Naur -x gcc buildroot-2016.05/package/libimxvpuapi/libimxvpuapi.hash Base/package/libimxvpuapi/libimxvpuapi.hash
--- buildroot-2016.05/package/libimxvpuapi/libimxvpuapi.hash	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libimxvpuapi/libimxvpuapi.hash	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-# locally computed hash
-sha256 8d7aeed88c06fda44318cef9565ae47b86461bd309908b1103a7974ed0822a8d  libimxvpuapi-0.10.1.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/libimxvpuapi/libimxvpuapi.mk Base/package/libimxvpuapi/libimxvpuapi.mk
--- buildroot-2016.05/package/libimxvpuapi/libimxvpuapi.mk	2016-05-31 23:52:36.000000000 +0200
+++ Base/package/libimxvpuapi/libimxvpuapi.mk	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-################################################################################
-#
-# libimxvpuapi
-#
-################################################################################
-
-LIBIMXVPUAPI_VERSION = 0.10.1
-LIBIMXVPUAPI_SITE = $(call github,Freescale,libimxvpuapi,$(LIBIMXVPUAPI_VERSION))
-LIBIMXVPUAPI_LICENSE = LGPLv2.1+
-LIBIMXVPUAPI_LICENSE_FILES = LICENSE
-LIBIMXVPUAPI_DEPENDENCIES = host-pkgconf host-python imx-vpu
-LIBIMXVPUAPI_INSTALL_STAGING = YES
-
-define LIBIMXVPUAPI_CONFIGURE_CMDS
-	cd $(@D); \
-	$(TARGET_CONFIGURE_OPTS) $(HOST_DIR)/usr/bin/python2 ./waf configure \
-		--prefix=/usr --libdir=/usr/lib
-endef
-
-define LIBIMXVPUAPI_BUILD_CMDS
-	cd $(@D); \
-	$(HOST_DIR)/usr/bin/python2 ./waf build -j $(PARALLEL_JOBS)
-endef
-
-define LIBIMXVPUAPI_INSTALL_STAGING_CMDS
-	cd $(@D); \
-	$(HOST_DIR)/usr/bin/python2 ./waf --destdir=$(STAGING_DIR) install
-endef
-
-define LIBIMXVPUAPI_INSTALL_TARGET_CMDS
-	cd $(@D); \
-	$(HOST_DIR)/usr/bin/python2 ./waf --destdir=$(TARGET_DIR) install
-endef
-
-$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/Config.in Base/package/novasom_gstreamer/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/Config.in	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,31 @@
+# Gstreamer 1.x & Plugins
+menuconfig BR2_PACKAGE_NOVASOM_GSTREAMER
+        bool "Novasis NOVAsom gstreamer implementation"
+        depends on BR2_USE_WCHAR # glib2
+        depends on BR2_TOOLCHAIN_HAS_THREADS # glib2
+        depends on BR2_USE_MMU # glib2
+        depends on BR2_LINUX_KERNEL
+        help
+          novasom_gstreamer is the implementation of NXP plugins for gstreamer1.0
+          http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_NOVASOM_GSTREAMER
+
+source "package/novasom_gstreamer/gstreamer1/Config.in"
+
+if BR2_PACKAGE_GSTREAMER1
+source "package/novasom_gstreamer/gst1-plugins-base/Config.in"
+source "package/novasom_gstreamer/gst1-plugins-bad/Config.in"
+source "package/novasom_gstreamer/gst1-plugins-good/Config.in"
+source "package/novasom_gstreamer/gst1-libav/Config.in"
+source "package/novasom_gstreamer/gstreamer-imx/Config.in"
+source "package/novasom_gstreamer/imx-gst1alsaplugins/Config.in"
+source "package/novasom_gstreamer/libimxvpuapi/Config.in"
+source "package/novasom_gstreamer/firmware-imx/Config.in"
+source "package/novasom_gstreamer/imx-codec/Config.in"
+source "package/novasom_gstreamer/imx-parser/Config.in"
+source "package/novasom_gstreamer/imx-kobs/Config.in"
+source "package/novasom_gstreamer/imx-lib/Config.in"
+source "package/novasom_gstreamer/imx-vpu/Config.in"
+endif
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/firmware-imx/Config.in Base/package/novasom_gstreamer/firmware-imx/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/firmware-imx/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/firmware-imx/Config.in	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,10 @@
+config BR2_PACKAGE_FIRMWARE_IMX
+	bool "firmware-imx"
+	depends on BR2_arm # Only relevant for i.MX
+	help
+	  Firmware blobs for the Freescale i.MX SoCs.
+
+	  It contains blobs for SDMA and VPU.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/firmware-imx/firmware-imx.mk Base/package/novasom_gstreamer/firmware-imx/firmware-imx.mk
--- buildroot-2016.05/package/novasom_gstreamer/firmware-imx/firmware-imx.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/firmware-imx/firmware-imx.mk	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,29 @@
+################################################################################
+#
+# firmware-imx
+#
+################################################################################
+
+FIRMWARE_IMX_VERSION = 5.4
+FIRMWARE_IMX_SITE = http://www.freescale.com/lgfiles/NMG/MAD/YOCTO
+FIRMWARE_IMX_SOURCE = firmware-imx-$(FIRMWARE_IMX_VERSION).bin
+
+FIRMWARE_IMX_LICENSE = Freescale Semiconductor Software License Agreement, \
+	Atheros license (ath6k)
+FIRMWARE_IMX_LICENSE_FILES = EULA COPYING
+FIRMWARE_IMX_REDISTRIBUTE = NO
+
+FIRMWARE_IMX_BLOBS = ath6k sdma vpu
+
+define FIRMWARE_IMX_EXTRACT_CMDS
+	$(call FREESCALE_IMX_EXTRACT_HELPER,$(DL_DIR)/$(FIRMWARE_IMX_SOURCE))
+endef
+
+define FIRMWARE_IMX_INSTALL_TARGET_CMDS
+	mkdir -p $(TARGET_DIR)/lib/firmware
+	for blobdir in $(FIRMWARE_IMX_BLOBS); do \
+		cp -r $(@D)/firmware/$${blobdir} $(TARGET_DIR)/lib/firmware; \
+	done
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-imx/Config.in Base/package/novasom_gstreamer/gst1-imx/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-imx/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-imx/Config.in	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,23 @@
+comment "gst1-imx needs an imx-specific Linux kernel to be built"
+	depends on BR2_arm && !BR2_LINUX_KERNEL
+
+config BR2_PACKAGE_GST1_IMX
+	bool "gst1-imx"
+	depends on BR2_LINUX_KERNEL
+	depends on BR2_arm # Only relevant for i.MX
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	help
+	  This is a set of GStreamer 1.0 plugins for plugins for Freescale's
+	  i.MX platforms, which make use of the i.MX multimedia capabilities.
+
+	  This software supports only the i.MX6 SoC family and requires a
+	  kernel that includes the i.MX6 specific headers to be built.
+
+	  The IPU and PXP plugins are always built.
+	  The V4L2 plugin is built when BR2_PACKAGE_GST1_PLUGINS_BAD is enabled.
+	  The VPU plugin is built when BR2_PACKAGE_LIBIMXVPUAPI is enabled.
+	  The EGL plugin is built when BR2_PACKAGE_IMX_GPU_VIV is enabled.
+	  The G2D plugin is built when BR2_PACKAGE_IMX_GPU_VIV_G2D is enabled.
+	  The MP3 plugin is built when BR2_PACKAGE_LIBFSLCODEC is enabled.
+
+	  https://github.com/Freescale/gstreamer-imx
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-imx/gst1-imx.hash Base/package/novasom_gstreamer/gst1-imx/gst1-imx.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-imx/gst1-imx.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-imx/gst1-imx.hash	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,2 @@
+# locally computed hash
+sha256 df34f080e24ac8f1619780aa5ad4e6ab1333f822cd2bf5fcb380b28c97248810  gst1-imx-0.12.0.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-imx/gst1-imx.mk Base/package/novasom_gstreamer/gst1-imx/gst1-imx.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-imx/gst1-imx.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-imx/gst1-imx.mk	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,70 @@
+################################################################################
+#
+# gst1-imx
+#
+################################################################################
+
+GST1_IMX_VERSION = 0.12.0
+GST1_IMX_SITE = $(call github,Freescale,gstreamer-imx,$(GST1_IMX_VERSION))
+
+GST1_IMX_LICENSE = LGPLv2+
+GST1_IMX_LICENSE_FILES = LICENSE
+
+GST1_IMX_INSTALL_STAGING = YES
+
+GST1_IMX_DEPENDENCIES += \
+	host-pkgconf \
+	host-python \
+	gstreamer1 \
+	gst1-plugins-base
+
+# needs access to imx-specific kernel headers
+GST1_IMX_DEPENDENCIES += linux
+GST1_IMX_CONF_OPTS += --prefix="/usr" \
+	--kernel-headers="$(LINUX_DIR)/include"
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD),y)
+GST1_IMX_DEPENDENCIES += gst1-plugins-bad
+endif
+
+ifeq ($(BR2_PACKAGE_LIBFSLCODEC),y)
+GST1_IMX_DEPENDENCIES += libfslcodec
+endif
+
+ifeq ($(BR2_PACKAGE_LIBIMXVPUAPI),y)
+GST1_IMX_DEPENDENCIES += libimxvpuapi
+endif
+
+ifeq ($(BR2_PACKAGE_IMX_GPU_VIV),y)
+GST1_IMX_DEPENDENCIES += imx-gpu-viv
+ifeq ($(BR2_PACKAGE_XLIB_LIBX11),y)
+GST1_IMX_DEPENDENCIES += xlib_libX11
+GST1_IMX_CONF_OPTS += --egl-platform=x11
+else
+ifeq ($(BR2_PACKAGE_WAYLAND),y)
+GST1_IMX_DEPENDENCIES += wayland
+GST1_IMX_CONF_OPTS += --egl-platform=wayland
+else
+GST1_IMX_CONF_OPTS += --egl-platform=fb
+endif
+endif
+endif
+
+define GST1_IMX_CONFIGURE_CMDS
+	cd $(@D); \
+		$(TARGET_CONFIGURE_OPTS) \
+		$(HOST_DIR)/usr/bin/python2 ./waf configure $(GST1_IMX_CONF_OPTS)
+endef
+
+define GST1_IMX_BUILD_CMDS
+	cd $(@D); \
+		$(HOST_DIR)/usr/bin/python2 ./waf build -j $(PARALLEL_JOBS)
+endef
+
+define GST1_IMX_INSTALL_TARGET_CMDS
+	cd $(@D); \
+		$(HOST_DIR)/usr/bin/python2 ./waf --destdir=$(TARGET_DIR) \
+		install
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-libav/Config.in Base/package/novasom_gstreamer/gst1-libav/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-libav/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-libav/Config.in	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,16 @@
+config BR2_PACKAGE_GST1_LIBAV
+	bool "gst1-libav"
+	depends on BR2_PACKAGE_FFMPEG_ARCH_SUPPORTS
+	select BR2_PACKAGE_FFMPEG
+	select BR2_PACKAGE_FFMPEG_SWSCALE
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	help
+	  GStreamer plugin (formerly gst-ffmpeg).
+
+	  This package contains GStreamer plugins based on
+	  the libav project.
+
+	  The codecs, muxers, bitstreams and filters to build can be
+	  selected in the ffmpeg package.
+
+	  http://gstreamer.freedesktop.org/
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-libav/gst1-libav.hash Base/package/novasom_gstreamer/gst1-libav/gst1-libav.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-libav/gst1-libav.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-libav/gst1-libav.hash	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-libav/gst-libav-1.8.1.tar.xz.sha256sum
+sha256	44a49108c3531b5ac4f346a2247cd7fbafb0e8ab394394cb6d75a70300b38933  gst-libav-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-libav/gst1-libav.mk Base/package/novasom_gstreamer/gst1-libav/gst1-libav.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-libav/gst1-libav.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-libav/gst1-libav.mk	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,18 @@
+################################################################################
+#
+# gst1-libav
+#
+################################################################################
+
+GST1_LIBAV_VERSION = 1.8.1
+GST1_LIBAV_SOURCE = gst-libav-$(GST1_LIBAV_VERSION).tar.xz
+GST1_LIBAV_SITE = http://gstreamer.freedesktop.org/src/gst-libav
+GST1_LIBAV_CONF_OPTS = --with-system-libav
+GST1_LIBAV_DEPENDENCIES = \
+	host-pkgconf ffmpeg gstreamer1 gst1-plugins-base \
+	$(if $(BR2_PACKAGE_BZIP2),bzip2) \
+	$(if $(BR2_PACKAGE_XZ),xz)
+GST1_LIBAV_LICENSE = GPLv2+
+GST1_LIBAV_LICENSE_FILES = COPYING
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/0001-use-gettext-0.18.patch Base/package/novasom_gstreamer/gst1-plugins-bad/0001-use-gettext-0.18.patch
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/0001-use-gettext-0.18.patch	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-bad/0001-use-gettext-0.18.patch	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,17 @@
+Use newer version of gettext to match current buildroot gettext.
+
+Signed-off-by: Spenser Gilliland <spenser@gillilanding.com>
+----
+Index: gst1-plugins-bad-1.1.1/po/Makefile.in.in
+===================================================================
+--- gst1-plugins-bad-1.1.1.orig/po/Makefile.in.in
++++ gst1-plugins-bad-1.1.1/po/Makefile.in.in
+@@ -9,7 +9,7 @@
+ # General Public License and is *not* in the public domain.
+ #
+ # Origin: gettext-0.17
+-GETTEXT_MACRO_VERSION = 0.17
++GETTEXT_MACRO_VERSION = 0.18
+ 
+ PACKAGE = @PACKAGE@
+ VERSION = @VERSION@
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/Config.in Base/package/novasom_gstreamer/gst1-plugins-bad/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-bad/Config.in	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,686 @@
+menuconfig BR2_PACKAGE_GST1_PLUGINS_BAD
+	bool "gst1-plugins-bad"
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	help
+	  A set of plug-ins for GStreamer that may be of poor quality or
+	  lacking some features.
+
+	  http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_GST1_PLUGINS_BAD
+
+comment "libraries with external dependencies"
+
+menuconfig BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL
+	bool "opengl"
+	depends on BR2_PACKAGE_HAS_LIBGL || BR2_PACKAGE_HAS_LIBGLES
+
+if BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
+	def_bool BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
+
+comment "The opengl library needs an API, a platform and a window system"
+	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
+
+comment "APIs"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
+	bool
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL
+	bool "opengl"
+	default y
+	depends on BR2_PACKAGE_HAS_LIBGL
+	select BR2_PACKAGE_LIBGLU
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
+
+comment "opengl needs an OpenGL backend"
+	depends on !BR2_PACKAGE_HAS_LIBGL
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLES2
+	bool "gles2"
+	default y
+	depends on BR2_PACKAGE_HAS_LIBGLES
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
+
+comment "gles2 needs an OpenGL ES backend"
+	depends on !BR2_PACKAGE_HAS_LIBGLES
+
+comment "Platforms"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
+	bool
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLX
+	bool "glx"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL
+	depends on BR2_PACKAGE_XSERVER_XORG_SERVER_MODULAR # mesa needs big X
+	depends on !BR2_PACKAGE_RPI_USERLAND # x11
+	select BR2_PACKAGE_XLIB_LIBXRENDER
+	select BR2_PACKAGE_XPROTO_GLPROTO
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
+	help
+	  OpenGL Extension to the X Window System
+
+comment "glx not supported with rpi-userland"
+	depends on BR2_PACKAGE_RPI_USERLAND
+
+comment "glx needs the opengl API and modular X.org"
+	depends on !BR2_PACKAGE_RPI_USERLAND && \
+		(!BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL || \
+		!BR2_PACKAGE_XSERVER_XORG_SERVER_MODULAR)
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
+	bool "egl"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API
+	depends on BR2_PACKAGE_HAS_LIBEGL
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
+
+comment "egl needs an API and an EGL backend"
+	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_API || \
+		!BR2_PACKAGE_HAS_LIBEGL
+
+comment "Window systems"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
+	bool
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11
+	bool "x11"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM
+	depends on !BR2_PACKAGE_RPI_USERLAND
+	depends on BR2_PACKAGE_XORG7
+	select BR2_PACKAGE_XLIB_LIBX11
+	select BR2_PACKAGE_XLIB_LIBXEXT
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
+
+comment "x11 not supported with rpi-userland"
+	depends on BR2_PACKAGE_RPI_USERLAND
+
+comment "x11 needs a platform and X.org"
+	depends on !BR2_PACKAGE_RPI_USERLAND && \
+		(!BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_PLATFORM || \
+		!BR2_PACKAGE_XORG7)
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_WAYLAND
+	bool "wayland"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
+	depends on BR2_PACKAGE_WAYLAND
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
+
+comment "wayland needs the egl platform and the wayland package"
+	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL || \
+		!BR2_PACKAGE_WAYLAND
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_DISPMANX
+	bool "dispmanx"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL
+	depends on BR2_PACKAGE_RPI_USERLAND
+	select BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_HAS_WINDOW
+	help
+	  Raspberry Pi's Dispmanx windowing system
+
+comment "dispmanx needs the egl platform and rpi-userland"
+	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL || \
+		!BR2_PACKAGE_RPI_USERLAND
+
+endif
+
+comment "opengl needs an OpenGL or OpenGL ES backend"
+	depends on !BR2_PACKAGE_HAS_LIBGL && !BR2_PACKAGE_HAS_LIBGLES
+
+comment "dependency-less plugins"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ACCURIP
+	bool "accurip"
+	help
+	  Accurip plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMDEC
+	bool "adpcmdec"
+	help
+	  ADPCM decoder
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMENC
+	bool "adpcmenc"
+	help
+	  ADPCM encoder
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AIFF
+	bool "aiff"
+	help
+	  Create and parse Audio interchange File Format (AIFF) files
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASFMUX
+	bool "asfmux"
+	help
+	  ASF Muxer Plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOFXBAD
+	bool "audiofxbad"
+	help
+	  Audio filters plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOMIXER
+	bool "audiomixer"
+	help
+	  Audio mixer plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COMPOSITOR
+	bool "compositor"
+	help
+	  Video compositor plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOVISUALIZERS
+	bool "audiovisualizers"
+	help
+	  Creates video visualizations of audio input
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUTOCONVERT
+	bool "autoconvert"
+	help
+	  Selects convertor element based on caps
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BAYER
+	bool "bayer"
+	help
+	  Elements to convert Bayer images
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CAMERABIN2
+	bool "camerabin2"
+	help
+	  Take image snapshots and record movies from camera
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CDXAPARSE
+	bool "cdxaparse"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COLOREFFECTS
+	bool "coloreffects"
+	help
+	  Color Look-up Table filters
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DATAURISRC
+	bool "dataurisrc"
+	help
+	  data: URI source
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DCCP
+	bool "dccp"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DEBUGUTILS
+	bool "debugutils"
+	help
+	  Collection of elements that may or may not be useful for debugging
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DTLS
+	bool "dtls"
+	select BR2_PACKAGE_OPENSSL
+	help
+	  DTLS plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVBSUBOVERLAY
+	bool "dvdsuboverlay"
+	help
+	  DVB subtitle renderer plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVDSPU
+	bool "dvdspu"
+	help
+	  DVD Sub-picture Overlay element
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FACEOVERLAY
+	bool "faceoverlay"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FESTIVAL
+	bool "festival"
+	help
+	  Synthesizes plain text into audio
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FIELDANALYSIS
+	bool "fieldanalysis"
+	help
+	  Video field analysis
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREEVERB
+	bool "freeverb"
+	help
+	  Reverberation/room effect
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREI0R
+	bool "frei0r"
+	help
+	  frei0r plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GAUDIEFFECTS
+	bool "gaudieffects"
+	help
+	  Gaudi video effects
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GEOMETRICTRANSFORM
+	bool "geometrictransform"
+	help
+	  Various geometric image transform elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GDP
+	bool "gdp"
+	help
+	  Payload/depayload GDP packets
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HDVPARSE
+	bool "hdvparse"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ID3TAG
+	bool "id3tag"
+	help
+	  ID3 v1 and v2 muxing plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTER
+	bool "inter"
+	help
+	  plugin for inter-pipeline communication
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTERLACE
+	bool "interlace"
+	help
+	  Create an interlaced video stream
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVFPARSE
+	bool "ivfparse"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVTC
+	bool "ivtc"
+	help
+	  Inverse Telecine plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JP2KDECIMATOR
+	bool "jp2kdecimator"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JPEGFORMAT
+	bool "jpegformat"
+	help
+	  JPEG interchange format plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBRFB
+	bool "librfb"
+	help
+	  Connects to a VNC server and decodes RFB stream
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIVEADDER
+	bool "liveadder"
+	help
+	  Adds multiple live discontinuous streams
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MIDI
+	bool "midi"
+	help
+	  MIDI plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGDEMUX
+	bool "mpegdemux"
+	help
+	  MPEG-PS demuxer
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSDEMUX
+	bool "mpegtsdemux"
+	help
+	  MPEG TS demuxer
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSMUX
+	bool "mpegtsmux"
+	help
+	  MPEG-TS muxer
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGPSMUX
+	bool "mpegpsmux"
+	help
+	  MPEG-PS muxer
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MVE
+	bool "mve"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MXF
+	bool "mxf"
+	help
+	  MXF plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NETSIM
+	bool "netsim"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NUVDEMUX
+	bool "nuvdemux"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ONVIF
+	bool "onvif"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PATCHDETECT
+	bool "patchdetect"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PCAPPARSE
+	bool "pcapparse"
+	help
+	  Element parsing raw pcap streams
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PNM
+	bool "pnm"
+	help
+	  PNM plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RAWPARSE
+	bool "rawparse"
+	help
+	  Parses byte streams into raw frames
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_REMOVESILENCE
+	bool "removesilence"
+	help
+	  Removes silence from an audio stream
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RTMP
+	bool "rtmp"
+	select BR2_PACKAGE_RTMPDUMP
+	help
+	  RTMP plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDI
+	bool "sdi"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDP
+	bool "sdp"
+	help
+	  configure streaming sessions using SDP
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SEGMENTCLIP
+	bool "segmentclip"
+	help
+	  Segment clip elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SIREN
+	bool "siren"
+	help
+	  Siren encoder/decoder/payloader/depayloader plugins
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SMOOTH
+	bool "smooth"
+	help
+	  Apply a smooth filter to an image
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SPEED
+	bool "speed"
+	help
+	  Set speed/pitch on audio/raw streams (resampler)
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SUBENC
+	bool "subenc"
+	help
+	  subtitle encoders
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_STEREO
+	bool "stereo"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_TTA
+	bool "tta"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFILTERS
+	bool "videofilters"
+	help
+	  Video filters in gst-plugins-bad
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFRAME_AUDIOLEVEL
+	bool "videoframe_audiolevel"
+	help
+	  videoframe_audiolevel
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOMEASURE
+	bool "videomeasure"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOPARSERS
+	bool "videoparsers"
+	help
+	  videoparsers
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOSIGNAL
+	bool "videosignal"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VMNC
+	bool "vmnc"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_Y4M
+	bool "y4m"
+	help
+	  Demuxes/decodes YUV4MPEG streams
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_YADIF
+	bool "yadif"
+	help
+	  YADIF deinterlacing filter
+
+comment "plugins with external dependencies"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SHM
+	bool "shm"
+	help
+	  shared memory sink source
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VCD
+	bool "vcd"
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_APEXSINK
+	bool "apexsink"
+	select BR2_PACKAGE_OPENSSL
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASSRENDER
+	bool "assrender"
+	select BR2_PACKAGE_LIBASS
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VOAACENC
+	bool "voaacenc"
+	select BR2_PACKAGE_VO_AACENC
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BZ2
+	bool "bz2"
+	select BR2_PACKAGE_BZIP2
+	help
+	  Compress or decompress streams
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CURL
+	bool "curl"
+	select BR2_PACKAGE_LIBCURL
+	help
+	  libcurl-based elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DASH
+	bool "dash"
+	select BR2_PACKAGE_LIBXML2
+	help
+	  DASH demuxer plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DECKLINK
+	depends on BR2_INSTALL_LIBSTDCPP
+	bool "decklink"
+	help
+	  Blackmagic Decklink plugin
+
+comment "decklink needs a toolchain w/ C++"
+	depends on !BR2_INSTALL_LIBSTDCPP
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DIRECTFB
+	bool "directfb"
+	depends on BR2_PACKAGE_DIRECTFB
+	default y
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WAYLAND
+	bool "wayland"
+	depends on BR2_PACKAGE_WAYLAND
+	default y
+	help
+	  Wayland Video Sink
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WEBP
+	bool "webp"
+	select BR2_PACKAGE_WEBP
+	help
+	  Webp image format plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FAAD
+	bool "faad"
+	select BR2_PACKAGE_FAAD2
+	help
+	  Free AAC Decoder (FAAD)
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FBDEV
+	bool "fbdev"
+	help
+	  Linux framebuffer video sink
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBMMS
+	bool "libmms"
+	depends on BR2_USE_WCHAR # libmms -> libglib2
+	depends on BR2_TOOLCHAIN_HAS_THREADS # libmms -> libglib2
+	select BR2_PACKAGE_LIBMMS
+	help
+	  Microsoft Multi Media Server streaming protocol support
+
+comment "libmms needs a toolchain w/ wchar, threads"
+	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEG2ENC
+	bool "mpeg2enc"
+	select BR2_PACKAGE_LIBMPEG2
+	help
+	  High-quality MPEG-1/2 video encoder
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MUSEPACK
+	bool "musepack"
+	select BR2_PACKAGE_MUSEPACK
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NEON
+	bool "neon"
+	select BR2_PACKAGE_NEON
+	help
+	  lib neon http client src
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENAL
+	bool "openal"
+	depends on BR2_INSTALL_LIBSTDCPP
+	depends on BR2_TOOLCHAIN_HAS_THREADS_NPTL
+	depends on BR2_PAKCAGE_OPENAL_ARCH_SUPPORTS
+	select BR2_PACKAGE_OPENAL
+
+comment "openal plugin needs a toolchain w/ NPTL, C++"
+	depends on BR2_PAKCAGE_OPENAL_ARCH_SUPPORTS
+	depends on !BR2_TOOLCHAIN_HAS_THREADS_NPTL \
+		|| !BR2_INSTALL_LIBSTDCPP
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENCV
+	bool "opencv"
+	depends on BR2_PACKAGE_OPENCV
+	# Remove the following opencv modules when gstreamer fixes the
+	# problem of including the old "cv.h" header
+	# bug: https://bugzilla.gnome.org/show_bug.cgi?id=725163
+	select BR2_PACKAGE_OPENCV_LIB_CALIB3D
+	select BR2_PACKAGE_OPENCV_LIB_CONTRIB
+	select BR2_PACKAGE_OPENCV_LIB_FEATURES2D
+	select BR2_PACKAGE_OPENCV_LIB_FLANN
+	select BR2_PACKAGE_OPENCV_LIB_IMGPROC
+	select BR2_PACKAGE_OPENCV_LIB_LEGACY
+	select BR2_PACKAGE_OPENCV_LIB_ML
+	select BR2_PACKAGE_OPENCV_LIB_OBJDETECT
+	select BR2_PACKAGE_OPENCV_LIB_VIDEO
+	help
+	  GStreamer OpenCV Plugins
+
+comment "opencv plugin needs OpenCV-2.4"
+	depends on !BR2_PACKAGE_OPENCV
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENH264
+	bool "openh264"
+	depends on BR2_PACKAGE_LIBOPENH264_ARCH_SUPPORTS
+	depends on BR2_INSTALL_LIBSTDCPP # libopenh264
+	depends on !BR2_STATIC_LIBS # libopenh264
+	depends on BR2_TOOLCHAIN_HAS_THREADS # libopenh264
+	select BR2_PACKAGE_LIBOPENH264
+	help
+	  OpenH264 based encoding/decoding plugin
+
+comment "openh264 plugin needs a toolchain w/ C++, dynamic library, threads"
+	depends on !BR2_INSTALL_LIBSTDCPP || !BR2_TOOLCHAIN_HAS_THREADS || \
+		BR2_STATIC_LIBS
+	depends on BR2_PACKAGE_LIBOPENH264_ARCH_SUPPORTS
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENJPEG
+	bool "openjpeg"
+	select BR2_PACKAGE_OPENJPEG
+	help
+	  GStreamer OpenJPEG plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPUS
+	bool "opus"
+	select BR2_PACKAGE_OPUS
+	help
+	  OPUS plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RSVG
+	bool "rsvg"
+	depends on BR2_INSTALL_LIBSTDCPP # librsvg -> pango
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # librsvg -> pango -> harfbuzz
+	select BR2_PACKAGE_LIBRSVG
+	help
+	  RSVG plugin library
+
+comment "rsvg plugin needs a toolchain w/ C++"
+	depends on !BR2_INSTALL_LIBSTDCPP
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL
+	bool "gl"
+	default y
+	depends on BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
+
+comment "gl needs the gst1-plugins-bad opengl library"
+	depends on !BR2_PACKAGE_GST1_PLUGINS_BAD_HAS_LIB_OPENGL
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDL
+	bool "sdl"
+	select BR2_PACKAGE_SDL
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SNDFILE
+	bool "sndfile"
+	select BR2_PACKAGE_LIBSNDFILE
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVB
+	bool "dvb"
+	select BR2_PACKAGE_DTV_SCAN_TABLES
+	# FEC_2_5 / QAM_4_NR definitions
+	depends on BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_7
+	help
+	  DVB elements
+
+comment "dvb needs a toolchain w/ headers >= 3.7"
+	depends on !BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_7
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HLS
+	bool "hls"
+	select BR2_PACKAGE_GNUTLS
+	help
+	  Fragmented streaming plugins
+
+config BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_X265
+	bool "x265"
+	depends on BR2_INSTALL_LIBSTDCPP
+	depends on !BR2_STATIC_LIBS
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # x265
+	select BR2_PACKAGE_X265
+	help
+	  x265 encoding plugin
+
+comment "x265 needs a toolchain w/ C++, dynamic library"
+	depends on !BR2_INSTALL_LIBSTDCPP || BR2_STATIC_LIBS
+
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.hash Base/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.hash	2017-10-09 17:21:47.223098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-1.8.1.tar.xz.sha256sum
+sha256	0bbd58f363734fc0c4a620b2d6fb01d427fdafdbda7b90b4e15d03b751ca40f5  gst-plugins-bad-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.mk Base/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-bad/gst1-plugins-bad.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,808 @@
+################################################################################
+#
+# gst1-plugins-bad
+#
+################################################################################
+
+GST1_PLUGINS_BAD_VERSION = 1.8.1
+GST1_PLUGINS_BAD_SOURCE = gst-plugins-bad-$(GST1_PLUGINS_BAD_VERSION).tar.xz
+GST1_PLUGINS_BAD_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-bad
+GST1_PLUGINS_BAD_INSTALL_STAGING = YES
+GST1_PLUGINS_BAD_LICENSE_FILES = COPYING COPYING.LIB
+# Unknown and GPL licensed plugins will append to GST1_PLUGINS_BAD_LICENSE if
+# enabled.
+GST1_PLUGINS_BAD_LICENSE = LGPLv2+ LGPLv2.1+
+
+GST1_PLUGINS_BAD_AUTORECONF = YES
+GST1_PLUGINS_BAD_AUTORECONF_OPTS = -I $(@D)/common/m4
+GST1_PLUGINS_BAD_GETTEXTIZE = YES
+
+GST1_PLUGINS_BAD_CONF_OPTS = \
+	--disable-examples \
+	--disable-valgrind \
+	--disable-directsound \
+	--disable-wsapi \
+	--disable-direct3d \
+	--disable-direct3d9 \
+	--disable-winks \
+	--disable-android_media \
+	--disable-apple_media \
+	--disable-sdltest \
+	--disable-wininet \
+	--disable-acm
+
+# Options which require currently unpackaged libraries
+GST1_PLUGINS_BAD_CONF_OPTS += \
+	--disable-avc \
+	--disable-opensles \
+	--disable-uvch264 \
+	--disable-voamrwbenc \
+	--disable-bs2b \
+	--disable-chromaprint \
+	--disable-dash \
+	--disable-dc1394 \
+	--disable-dts \
+	--disable-resindvd \
+	--disable-faac \
+	--disable-flite \
+	--disable-gsm \
+	--disable-fluidsynth \
+	--disable-kate \
+	--disable-ladspa \
+	--disable-lv2 \
+	--disable-libde265 \
+	--disable-strp \
+	--disable-linsys \
+	--disable-modplug \
+	--disable-mimic \
+	--disable-mplex \
+	--disable-nas \
+	--disable-ofa \
+	--disable-openexr \
+	--disable-openni2 \
+	--disable-pvr \
+	--disable-libvisual \
+	--disable-timidity \
+	--disable-teletextdec \
+	--disable-wildmidi \
+	--disable-smoothstreaming \
+	--disable-soundtouch \
+	--disable-spc \
+	--disable-gme \
+	--disable-xvid \
+	--disable-vdpau \
+	--disable-sbc \
+	--disable-schro \
+	--disable-zbar \
+	--disable-rtmp \
+	--disable-spandsp \
+	--disable-gsettings \
+	--disable-sndio \
+	--disable-hls \
+	--disable-gtk3 \
+	--disable-qt
+
+GST1_PLUGINS_BAD_DEPENDENCIES = gst1-plugins-base gstreamer1
+
+ifeq ($(BR2_PACKAGE_RPI_USERLAND),y)
+# RPI has odd locations for several required headers.
+GST1_PLUGINS_BAD_CONF_ENV += \
+	CPPFLAGS="$(TARGET_CPPFLAGS) \
+	-I$(STAGING_DIR)/usr/include/IL \
+	-I$(STAGING_DIR)/usr/include/interface/vcos/pthreads \
+	-I$(STAGING_DIR)/usr/include/interface/vmcs_host/linux"
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_OPENGL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-opengl
+GST1_PLUGINS_BAD_DEPENDENCIES += libgl libglu
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-opengl
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLES2),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-gles2
+GST1_PLUGINS_BAD_DEPENDENCIES += libgles
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-gles2
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_GLX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-glx
+GST1_PLUGINS_BAD_DEPENDENCIES += xproto_glproto xlib_libXrender
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-glx
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_EGL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-egl
+GST1_PLUGINS_BAD_DEPENDENCIES += libegl
+GST1_PLUGINS_BAD_CONF_ENV += \
+	CPPFLAGS="$(TARGET_CPPFLAGS) `$(PKG_CONFIG_HOST_BINARY) --cflags egl`" \
+	LIBS="`$(PKG_CONFIG_HOST_BINARY) --libs egl`"
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-egl
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_X11),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-x11
+GST1_PLUGINS_BAD_DEPENDENCIES += xlib_libX11 xlib_libXext
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-x11
+endif
+
+ifneq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_WAYLAND)$(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WAYLAND),)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-wayland
+GST1_PLUGINS_BAD_DEPENDENCIES += wayland
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-wayland
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_LIB_OPENGL_DISPMANX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dispmanx
+GST1_PLUGINS_BAD_DEPENDENCIES += rpi-userland
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dispmanx
+endif
+
+ifeq ($(BR2_PACKAGE_ORC),y)
+GST1_PLUGINS_BAD_DEPENDENCIES += orc
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-orc
+endif
+
+ifeq ($(BR2_PACKAGE_BLUEZ_UTILS),y)
+GST1_PLUGINS_BAD_DEPENDENCIES += bluez_utils
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-bluez
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-bluez
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ACCURIP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-accurip
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-accurip
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMDEC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-adpcmdec
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-adpcmdec
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ADPCMENC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-adpcmenc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-adpcmenc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AIFF),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-aiff
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-aiff
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASFMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-asfmux
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-asfmux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOFXBAD),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiofxbad
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiofxbad
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOMIXER),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiomixer
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiomixer
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COMPOSITOR),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-compositor
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-compositor
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUDIOVISUALIZERS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-audiovisualizers
+GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-audiovisualizers
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_AUTOCONVERT),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-autoconvert
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-autoconvert
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BAYER),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-bayer
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-bayer
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CAMERABIN2),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-camerabin2
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-camerabin2
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CDXAPARSE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-cdxaparse
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-cdxaparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_COLOREFFECTS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-coloreffects
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-coloreffects
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DATAURISRC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dataurisrc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dataurisrc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DCCP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dccp
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dccp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DEBUGUTILS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-debugutils
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-debugutils
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DTLS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dtls
+GST1_PLUGINS_BAD_DEPENDENCIES += openssl
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dtls
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVBSUBOVERLAY),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvbsuboverlay
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvbsuboverlay
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVDSPU),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvdspu
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvdspu
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FACEOVERLAY),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-faceoverlay
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-faceoverlay
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FESTIVAL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-festival
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-festival
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FIELDANALYSIS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-fieldanalysis
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-fieldanalysis
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREEVERB),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-freeverb
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-freeverb
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FREI0R),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-frei0r
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-frei0r
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GAUDIEFFECTS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-gaudieffects
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-gaudieffects
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GEOMETRICTRANSFORM),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-geometrictransform
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-geometrictransform
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GDP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-gdp
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-gdp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HDVPARSE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-hdvparse
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-hdvparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ID3TAG),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-id3tag
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-id3tag
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTER),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-inter
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-inter
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_INTERLACE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-interlace
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-interlace
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVFPARSE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-ivfparse
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-ivfparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_IVTC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-ivtc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-ivtc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JP2KDECIMATOR),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-jp2kdecimator
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-jp2kdecimator
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_JPEGFORMAT),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-jpegformat
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-jpegformat
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBRFB),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-librfb
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-librfb
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIVEADDER),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-liveadder
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-liveadder
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MIDI),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-midi
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-midi
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGDEMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegdemux
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegdemux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSDEMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegtsdemux
+GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegtsdemux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGTSMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegtsmux
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegtsmux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEGPSMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpegpsmux
+GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpegpsmux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MVE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mve
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mve
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MXF),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mxf
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mxf
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_NETSIM),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-netsim
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-netsim
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NUVDEMUX),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-nuvdemux
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-nuvdemux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ONVIF),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-onvif
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-onvif
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PATCHDETECT),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-patchdetect
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-patchdetect
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PCAPPARSE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-pcapparse
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-pcapparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_PNM),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-pnm
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-pnm
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RAWPARSE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-rawparse
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-rawparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_REMOVESILENCE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-removesilence
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-removesilence
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RTMP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-rtmp
+GST1_PLUGINS_BAD_DEPENDENCIES += rtmpdump
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-rtmp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDI),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdi
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdi
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdp
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SEGMENTCLIP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-segmentclip
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-segmentclip
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SIREN),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-siren
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-siren
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SMOOTH),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-smooth
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-smooth
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SPEED),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-speed
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-speed
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SUBENC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-subenc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-subenc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_STEREO),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-stereo
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-stereo
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_TTA),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-tta
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-tta
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFILTERS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-videofilters
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-videofilters
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOFRAME_AUDIOLEVEL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-videoframe_audiolevel
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-videoframe_audiolevel
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOMEASURE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-videomeasure
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-videomeasure
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOPARSERS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-videoparsers
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-videoparsers
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VIDEOSIGNAL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-videosignal
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-videosignal
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VMNC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-vmnc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-vmnc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_Y4M),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-y4m
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-y4m
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_YADIF),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-yadif
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-yadif
+endif
+
+# Plugins with dependencies
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SHM),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-shm
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-shm
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VCD),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-vcd
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-vcd
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_APEXSINK),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-apexsink
+GST1_PLUGINS_BAD_DEPENDENCIES += openssl
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-apexsink
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_ASSRENDER),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-assrender
+GST1_PLUGINS_BAD_DEPENDENCIES += libass
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-assrender
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_VOAACENC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-voaacenc
+GST1_PLUGINS_BAD_DEPENDENCIES += vo-aacenc
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-voaacenc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_BZ2),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-bz2
+GST1_PLUGINS_BAD_DEPENDENCIES += bzip2
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-bz2
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_CURL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-curl
+GST1_PLUGINS_BAD_DEPENDENCIES += libcurl
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-curl
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DASH),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dash
+GST1_PLUGINS_BAD_DEPENDENCIES += libxml2
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dash
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DECKLINK),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-decklink
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-decklink
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_WEBP),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-webp
+GST1_PLUGINS_BAD_DEPENDENCIES += webp
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-webp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DIRECTFB),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-directfb
+GST1_PLUGINS_BAD_DEPENDENCIES += directfb
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-directfb
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FAAD),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-faad
+GST1_PLUGINS_BAD_DEPENDENCIES += faad2
+GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-faad
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_FBDEV),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-fbdev
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-fbdev
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_LIBMMS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-libmms
+GST1_PLUGINS_BAD_DEPENDENCIES += libmms
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-libmms
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MPEG2ENC),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-mpeg2enc
+GST1_PLUGINS_BAD_DEPENDENCIES += libmpeg2
+GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-mpeg2enc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_MUSEPACK),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-musepack
+GST1_PLUGINS_BAD_DEPENDENCIES += musepack
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-musepack
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_NEON),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-neon
+GST1_PLUGINS_BAD_DEPENDENCIES += neon
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-neon
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENAL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-openal
+GST1_PLUGINS_BAD_DEPENDENCIES += openal
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-openal
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENCV),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-opencv
+GST1_PLUGINS_BAD_DEPENDENCIES += opencv
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-opencv
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENH264),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-openh264
+GST1_PLUGINS_BAD_DEPENDENCIES += libopenh264
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-openh264
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPENJPEG),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-openjpeg
+GST1_PLUGINS_BAD_DEPENDENCIES += openjpeg
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-openjpeg
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_OPUS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-opus
+GST1_PLUGINS_BAD_DEPENDENCIES += opus
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-opus
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_RSVG),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-rsvg
+GST1_PLUGINS_BAD_DEPENDENCIES += librsvg
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-rsvg
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_GL),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-gl
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-gl
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SDL),y)
+GST1_PLUGINS_BAD_CONF_ENV += ac_cv_path_SDL_CONFIG=$(STAGING_DIR)/usr/bin/sdl-config
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-sdl
+GST1_PLUGINS_BAD_DEPENDENCIES += sdl
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-sdl
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_SNDFILE),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-sndfile
+GST1_PLUGINS_BAD_DEPENDENCIES += libsndfile
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-sndfile
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_DVB),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-dvb
+GST1_PLUGINS_BAD_DEPENDENCIES += dtv-scan-tables
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-dvb
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_HLS),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-hls
+GST1_PLUGINS_BAD_DEPENDENCIES += gnutls
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-hls
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BAD_PLUGIN_X265),y)
+GST1_PLUGINS_BAD_CONF_OPTS += --enable-x265
+GST1_PLUGINS_BAD_DEPENDENCIES += x265
+GST1_PLUGINS_BAD_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_BAD_CONF_OPTS += --disable-x265
+endif
+
+# Add GPL license if GPL licensed plugins enabled.
+ifeq ($(GST1_PLUGINS_BAD_HAS_GPL_LICENSE),y)
+GST1_PLUGINS_BAD_LICENSE += GPL
+endif
+
+# Add Unknown license if Unknown licensed plugins enabled.
+ifeq ($(GST1_PLUGINS_BAD_HAS_UNKNOWN_LICENSE),y)
+GST1_PLUGINS_BAD_LICENSE += UNKNOWN
+endif
+
+# Use the following command to extract license info for plugins.
+# # find . -name 'plugin-*.xml' | xargs grep license
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/Config.in Base/package/novasom_gstreamer/gst1-plugins-base/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-base/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,160 @@
+menuconfig BR2_PACKAGE_GST1_PLUGINS_BASE
+	bool "gst1-plugins-base"
+	select BR2_PACKAGE_XLIB_LIBX11 if BR2_PACKAGE_XORG7
+	select BR2_PACKAGE_XLIB_LIBXEXT if BR2_PACKAGE_XORG7
+	select BR2_PACKAGE_XLIB_LIBXV if BR2_PACKAGE_XORG7
+	help
+	  A basic set of well-supported plug-ins for GStreamer.
+
+	  http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_GST1_PLUGINS_BASE
+
+comment "dependency-less plugins"
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ADDER
+	bool "adder"
+	help
+	  Adds multiple streams
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_APP
+	bool "app"
+	help
+	  Elements used to communicate with applications
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOCONVERT
+	bool "audioconvert (mandatory for audio playback)"
+	default y
+	help
+	  Convert audio to different formats
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORATE
+	bool "audiorate"
+	help
+	  Adjusts audio frames
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOTESTSRC
+	bool "audiotestsrc"
+	help
+	  Creates audio test signals of given frequency and volume
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ENCODING
+	bool "encoding"
+	help
+	  various encoding-related elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOCONVERT
+	bool "videoconvert"
+	help
+	  Colorspace conversion
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_GIO
+	bool "gio"
+	help
+	  GIO elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PLAYBACK
+	select BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND
+	bool "playback"
+	default y
+	help
+	  various playback elements
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORESAMPLE
+	bool "audioresample (mandatory for audio playback)"
+	default y
+	help
+	  Resamples audio
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_SUBPARSE
+	bool "subparse"
+	help
+	  Subtitle parsing
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TCP
+	bool "tcp"
+	help
+	  transfer data over the network via TCP
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND
+	bool "typefind"
+	default y
+	help
+	  default typefind functions
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOTESTSRC
+	bool "videotestsrc"
+	help
+	  Creates a test video stream
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEORATE
+	bool "videorate"
+	help
+	  Adjusts video frames
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOSCALE
+	bool "videoscale (mandatory for video playback)"
+	default y
+	help
+	  Resizes video
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VOLUME
+	bool "volume (mandatory for audio playback)"
+	default y
+	help
+	  plugin for controlling audio volume
+
+comment "plugins with external dependencies"
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ALSA
+	bool "alsa (mandatory for audio playback)"
+	select BR2_PACKAGE_ALSA_LIB
+	select BR2_PACKAGE_ALSA_LIB_MIXER
+	select BR2_PACKAGE_ALSA_LIB_PCM
+	select BR2_PACKAGE_ALSA_LIB_SEQ
+	help
+	  ALSA plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TREMOR
+	bool "tremor"
+	select BR2_PACKAGE_TREMOR
+	help
+	  Vorbis Tremor decoder
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OGG
+	bool "ogg (*.ogg audio/video)"
+	select BR2_PACKAGE_LIBOGG
+	help
+	  ogg stream manipulation (info about ogg: http://xiph.org)
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OPUS
+	bool "opus"
+	select BR2_PACKAGE_OPUS
+	help
+	  Opus codec for speech and audio.
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PANGO
+	bool "pango font renderer"
+	depends on BR2_INSTALL_LIBSTDCPP # pango -> freetype
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # pango -> harfbuzz
+	select BR2_PACKAGE_PANGO
+	help
+	  Pango-based text rendering and overlay
+
+comment "pango plugin needs a toolchain w/ C++"
+	depends on !BR2_INSTALL_LIBSTDCPP
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_THEORA
+	bool "theora (*.ogg video)"
+	select BR2_PACKAGE_LIBTHEORA
+	help
+	  Theora plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VORBIS
+	bool "vorbis (*.ogg audio)"
+	select BR2_PACKAGE_LIBVORBIS
+	help
+	  Vorbis plugin library
+
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.hash Base/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-1.8.1.tar.xz.sha256sum
+sha256	15a9de985cd265c344e359f5b19347df4021b7611ed2c2d91917cb900f2fad6f  gst-plugins-base-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.mk Base/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-base/gst1-plugins-base.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,214 @@
+################################################################################
+#
+# gst1-plugins-base
+#
+################################################################################
+
+GST1_PLUGINS_BASE_VERSION = 1.8.1
+GST1_PLUGINS_BASE_SOURCE = gst-plugins-base-$(GST1_PLUGINS_BASE_VERSION).tar.xz
+GST1_PLUGINS_BASE_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-base
+GST1_PLUGINS_BASE_INSTALL_STAGING = YES
+GST1_PLUGINS_BASE_LICENSE_FILES = COPYING.LIB
+GST1_PLUGINS_BASE_LICENSE = LGPLv2+, LGPLv2.1+
+
+# freetype is only used by examples, but if it is not found
+# and the host has a freetype-config script, then the host
+# include dirs are added to the search path causing trouble
+GST1_PLUGINS_BASE_CONF_ENV =
+	FT2_CONFIG=/bin/false \
+	ac_cv_header_stdint_t="stdint.h"
+
+# gio_unix_2_0 is only used for tests
+GST1_PLUGINS_BASE_CONF_OPTS = \
+	--disable-examples \
+	--disable-oggtest \
+	--disable-vorbistest \
+	--disable-gio_unix_2_0 \
+	--disable-freetypetest \
+	--disable-valgrind
+
+# Options which require currently unpackaged libraries
+GST1_PLUGINS_BASE_CONF_OPTS += \
+	--disable-cdparanoia \
+	--disable-libvisual \
+	--disable-iso-codes
+
+GST1_PLUGINS_BASE_DEPENDENCIES = gstreamer1
+
+# These plugins are liste in the order from ./configure --help
+
+ifeq ($(BR2_PACKAGE_ORC),y)
+GST1_PLUGINS_BASE_DEPENDENCIES += orc
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-orc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ADDER),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-adder
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-adder
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_APP),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-app
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-app
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOCONVERT),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-audioconvert
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-audioconvert
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORATE),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-audiorate
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-audiorate
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIOTESTSRC),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-audiotestsrc
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-audiotestsrc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ENCODING),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-encoding
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-encoding
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOCONVERT),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-videoconvert
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-videoconvert
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_GIO),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-gio
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-gio
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PLAYBACK),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-playback
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-playback
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_AUDIORESAMPLE),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-audioresample
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-audioresample
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_SUBPARSE),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-subparse
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-subparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TCP),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-tcp
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-tcp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TYPEFIND),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-typefind
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-typefind
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOTESTSRC),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-videotestsrc
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-videotestsrc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEORATE),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-videorate
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-videorate
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VIDEOSCALE),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-videoscale
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-videoscale
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VOLUME),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-volume
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-volume
+endif
+
+ifeq ($(BR2_PACKAGE_ZLIB),y)
+GST1_PLUGINS_BASE_DEPENDENCIES += zlib
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-zlib
+endif
+
+ifeq ($(BR2_PACKAGE_XORG7),y)
+GST1_PLUGINS_BASE_DEPENDENCIES += xlib_libX11 xlib_libXext xlib_libXv
+GST1_PLUGINS_BASE_CONF_OPTS += \
+	--enable-x \
+	--enable-xshm \
+	--enable-xvideo
+else
+GST1_PLUGINS_BASE_CONF_OPTS += \
+	--disable-x \
+	--disable-xshm \
+	--disable-xvideo
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_ALSA),y)
+GST1_PLUGINS_BASE_DEPENDENCIES += alsa-lib
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-alsa
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_TREMOR),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-ivorbis
+GST1_PLUGINS_BASE_DEPENDENCIES += tremor
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-ivorbis
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OPUS),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-opus
+GST1_PLUGINS_BASE_DEPENDENCIES += opus
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-opus
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_OGG),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-ogg
+GST1_PLUGINS_BASE_DEPENDENCIES += libogg
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-ogg
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_PANGO),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-pango
+GST1_PLUGINS_BASE_DEPENDENCIES += pango
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-pango
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_THEORA),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-theora
+GST1_PLUGINS_BASE_DEPENDENCIES += libtheora
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-theora
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_BASE_PLUGIN_VORBIS),y)
+GST1_PLUGINS_BASE_CONF_OPTS += --enable-vorbis
+GST1_PLUGINS_BASE_DEPENDENCIES += libvorbis
+else
+GST1_PLUGINS_BASE_CONF_OPTS += --disable-vorbis
+endif
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/Config.in Base/package/novasom_gstreamer/gst1-plugins-good/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-good/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,369 @@
+menuconfig BR2_PACKAGE_GST1_PLUGINS_GOOD
+	bool "gst1-plugins-good"
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	select BR2_PACKAGE_XLIB_LIBX11 if BR2_PACKAGE_XORG7
+	select BR2_PACKAGE_XLIB_LIBXEXT if BR2_PACKAGE_XORG7
+	select BR2_PACKAGE_XLIB_LIBXV if BR2_PACKAGE_XORG7
+	help
+	  A set of well-supported plug-ins for GStreamer under the preferred
+	  license.
+
+	  http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_GST1_PLUGINS_GOOD
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_JPEG
+	bool "jpeg (JPEG support)"
+	select BR2_PACKAGE_JPEG
+	help
+	  JPeg plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PNG
+	bool "png (PNG support)"
+	select BR2_PACKAGE_LIBPNG
+	help
+	  PNG plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_BZ2
+	bool "bz2 support"
+	depends on BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
+	select BR2_PACKAGE_BZIP2
+	help
+	  Enable bz2 support for the following plugins:
+	  matroska
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_ZLIB
+	bool "zlib support"
+	depends on BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4 || BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
+	select BR2_PACKAGE_ZLIB
+	help
+	  Enable zlib support for the following plugins:
+	  id3demux, isomp4, matroska
+
+comment "dependency-less plugins"
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ALPHA
+	bool "alpha"
+	help
+	  adds an alpha channel to video - constant or via chroma-keying
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_APETAG
+	bool "apetag"
+	help
+	  APEv1/2 tag reader
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOFX
+	bool "audiofx"
+	help
+	  Audio effects plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOPARSERS
+	bool "audioparsers"
+	help
+	  Parsers for various audio formats
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUPARSE
+	bool "auparse"
+	help
+	  parses au streams
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUTODETECT
+	bool "autodetect"
+	help
+	  Plugin contains auto-detection plugins for video/audio in- and outputs
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AVI
+	bool "avi (*.avi video)"
+	default y
+	help
+	  AVI stream handling
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CUTTER
+	bool "cutter"
+	help
+	  Audio Cutter to split audio into non-silent bits
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEBUGUTILS
+	bool "debugutils"
+	help
+	  elements for testing and debugging
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEINTERLACE
+	bool "deinterlace"
+	help
+	  Deinterlacer
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DTMF
+	bool "dtmf"
+	help
+	  DTMF plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EFFECTV
+	bool "effectv"
+	help
+	  effect plugins from the effectv project
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EQUALIZER
+	bool "equalizer"
+	help
+	  GStreamer audio equalizers
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLV
+	bool "flv"
+	help
+	  FLV muxing and demuxing plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLX
+	bool "flx"
+	help
+	  FLC/FLI/FLX video decoder
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM
+	bool "goom"
+	help
+	  GOOM visualization filter
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM2K1
+	bool "goom2k1"
+	help
+	  GOOM 2k1 visualization filter
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ICYDEMUX
+	bool "icydemux"
+	help
+	  Demux ICY tags from a stream
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX
+	bool "id3demux (*.mp3 audio)"
+	help
+	  Demux ID3v1 and ID3v2 tags from a file
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_IMAGEFREEZE
+	bool "imagefreeze"
+	help
+	  Still frame stream generator
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_INTERLEAVE
+	bool "interleave"
+	help
+	  Audio interleaver/deinterleaver
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4
+	bool "isomp4"
+	default y
+	help
+	  ISO base media file format support (mp4, 3gpp, qt, mj2)
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LAW
+	bool "law"
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LEVEL
+	bool "level"
+	help
+	  Audio level plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA
+	bool "matroska"
+	help
+	  Matroska and WebM stream handling
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MONOSCOPE
+	bool "monoscope"
+	help
+	  Monoscope visualization
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIFILE
+	bool "multifile"
+	help
+	  Reads/Writes buffers from/to sequentially named files
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIPART
+	bool "multipart"
+	help
+	  multipart stream manipulation
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_REPLAYGAIN
+	bool "replaygain"
+	help
+	  ReplayGain volume normalization
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTP
+	bool "rtp"
+	help
+	  Real-time protocol plugins
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTPMANAGER
+	bool "rtpmanager"
+	help
+	  RTP session management plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTSP
+	bool "rtsp"
+	help
+	  transfer data via RTSP
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SHAPEWIPE
+	bool "shapewipe"
+	help
+	  Shape Wipe transition filter
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SMPTE
+	bool "smpte"
+	help
+	  Apply the standard SMPTE transitions on video images
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPECTRUM
+	bool "spectrum"
+	help
+	  Run an FFT on the audio signal, output spectrum data
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_UDP
+	bool "udp"
+	help
+	  transfer data via UDP
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOBOX
+	bool "videobox"
+	help
+	  resizes a video by adding borders or cropping
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOCROP
+	bool "videocrop"
+	help
+	  Crops video into a user-defined region
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOFILTER
+	bool "videofilter"
+	help
+	  Video filters plugin
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOMIXER
+	bool "videomixer"
+	help
+	  Video mixer
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVENC
+	bool "wavenc"
+	help
+	  Encode raw audio into WAV
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPARSE
+	bool "wavparse (*.wav audio)"
+	default y
+	help
+	  Parse a .wav file into raw audio
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_Y4M
+	bool "y4m"
+	help
+	  Encodes a YUV frame into the yuv4mpeg format (mjpegtools)
+
+comment "plugins with external dependencies"
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS
+	bool "ossaudio (OSS audio)"
+	help
+	  OSS (Open Sound System) support for GStreamer
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS4
+	bool "oss4 (Open Sound System 4)"
+	help
+	  Open Sound System (OSS) version 4 support for GStreamer
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_V4L2
+	bool "v4l2"
+	depends on BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_0 # multi planar api
+	help
+	  elements for Video 4 Linux
+
+comment "v4l2 needs a toolchain w/ headers >= 3.0"
+	depends on !BR2_TOOLCHAIN_HEADERS_AT_LEAST_3_0
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CAIRO
+	bool "cairo"
+	select BR2_PACKAGE_CAIRO
+	select BR2_PACKAGE_CAIRO_PNG
+	help
+	  Cairo-based elements
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLAC
+	bool "flac (libFLAC)"
+	depends on BR2_USE_WCHAR # flac
+	select BR2_PACKAGE_FLAC
+	help
+	  The FLAC Lossless compressor Codec
+
+comment "flac needs a toolchain w/ wchar"
+	depends on !BR2_USE_WCHAR
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GDKPIXBUF
+	bool "gdkpixbuf"
+	select BR2_PACKAGE_GDK_PIXBUF
+	depends on BR2_USE_WCHAR # gdk-pixbuf -> libglib2
+	depends on BR2_TOOLCHAIN_HAS_THREADS # gdk-pixbuf -> libglib2
+	help
+	  GdkPixbuf-based image decoder, overlay and sink
+
+comment "gdkpixbuf needs a toolchain w/ wchar, threads"
+	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_PULSE
+	depends on BR2_TOOLCHAIN_HAS_THREADS # pulseaudio
+	depends on BR2_USE_MMU # pulseaudio
+	depends on !BR2_STATIC_LIBS # pulseaudio
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4 # pulseaudio -> json-c
+	select BR2_PACKAGE_PULSEAUDIO
+	bool "pulseaudio"
+	help
+	  PulseAudio plugin library
+
+comment "pulseaudio support needs a toolchain w/ threads, dynamic library"
+	depends on BR2_USE_MMU
+	depends on BR2_TOOLCHAIN_HAS_SYNC_4
+	depends on !BR2_TOOLCHAIN_HAS_THREADS || BR2_STATIC_LIBS
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SOUPHTTPSRC
+	bool "souphttpsrc (http client)"
+	depends on BR2_USE_WCHAR # libsoup -> glib2
+	depends on BR2_TOOLCHAIN_HAS_THREADS # libsoup -> glib2
+	select BR2_PACKAGE_LIBSOUP
+	help
+	  libsoup HTTP client src/sink
+
+comment "souphttpsrc needs a toolchain w/ wchar, threads"
+	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPEEX
+	bool "speex"
+	select BR2_PACKAGE_SPEEX
+	help
+	  Speex plugin library
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_TAGLIB
+	bool "taglib"
+	depends on BR2_INSTALL_LIBSTDCPP
+	depends on BR2_USE_WCHAR
+	select BR2_PACKAGE_TAGLIB
+	help
+	  Taglib tagging plugin library
+
+comment "taglib needs a toolchain w/ C++, wchar"
+	depends on !BR2_INSTALL_LIBSTDCPP || !BR2_USE_WCHAR
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VPX
+	bool "vpx (webm)"
+	select BR2_PACKAGE_LIBVPX
+	depends on BR2_TOOLCHAIN_HAS_THREADS # libvpx
+	help
+	  VP8 plugin
+
+comment "libvpx needs a toolchain w/ threads"
+	depends on !BR2_TOOLCHAIN_HAS_THREADS
+
+config BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPACK
+	bool "wavpack (*.wv audio)"
+	select BR2_PACKAGE_WAVPACK
+	help
+	  Wavpack lossless/lossy audio format handling
+
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.hash Base/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-1.8.1.tar.xz.sha256sum
+sha256	2103e17921d67894e82eafdd64fb9b06518599952fd93e625bfbc83ffead0972  gst-plugins-good-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.mk Base/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-good/gst1-plugins-good.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,428 @@
+################################################################################
+#
+# gst1-plugins-good
+#
+################################################################################
+
+GST1_PLUGINS_GOOD_VERSION = 1.8.1
+GST1_PLUGINS_GOOD_SOURCE = gst-plugins-good-$(GST1_PLUGINS_GOOD_VERSION).tar.xz
+GST1_PLUGINS_GOOD_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-good
+GST1_PLUGINS_GOOD_LICENSE_FILES = COPYING
+GST1_PLUGINS_GOOD_LICENSE = LGPLv2.1+
+
+GST1_PLUGINS_GOOD_CONF_OPTS = \
+	--disable-valgrind \
+	--disable-examples \
+	--disable-directsound \
+	--disable-waveform \
+	--disable-sunaudio \
+	--disable-osx_audio \
+	--disable-osx_video \
+	--disable-aalib \
+	--disable-aalibtest \
+	--disable-libcaca \
+	--disable-esd \
+	--disable-esdtest
+
+
+# Options which require currently unpackaged libraries
+GST1_PLUGINS_GOOD_CONF_OPTS += \
+	--disable-jack \
+	--disable-libdv \
+	--disable-dv1394 \
+	--disable-shout2 \
+	--disable-taglib
+
+GST1_PLUGINS_GOOD_DEPENDENCIES = gstreamer1 gst1-plugins-base
+
+ifeq ($(BR2_PACKAGE_LIBV4L),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --with-libv4l2
+GST1_PLUGINS_GOOD_DEPENDENCIES += libv4l
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --without-libv4l2
+endif
+
+ifeq ($(BR2_PACKAGE_ORC),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-orc
+GST1_PLUGINS_GOOD_DEPENDENCIES += orc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ALPHA),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-alpha
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-alpha
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_APETAG),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-apetag
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-apetag
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOFX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-audiofx
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-audiofx
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUDIOPARSERS),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-audioparsers
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-audioparsers
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUPARSE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-auparse
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-auparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AUTODETECT),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-autodetect
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-autodetect
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_AVI),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-avi
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-avi
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CUTTER),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-cutter
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-cutter
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEBUGUTILS),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-debugutils
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-debugutils
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DEINTERLACE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-deinterlace
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-deinterlace
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_DTMF),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-dtmf
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-dtmf
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EFFECTV),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-effectv
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-effectv
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_EQUALIZER),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-equalizer
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-equalizer
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLV),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flv
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flv
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flx
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flx
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-goom
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-goom
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GOOM2K1),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-goom2k1
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-goom2k1
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ICYDEMUX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-icydemux
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-icydemux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ID3DEMUX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-id3demux
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-id3demux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_IMAGEFREEZE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-imagefreeze
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-imagefreeze
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_INTERLEAVE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-interleave
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-interleave
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_ISOMP4),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-isomp4
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-isomp4
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LAW),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-law
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-law
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_LEVEL),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-level
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-level
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MATROSKA),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-matroska
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-matroska
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MONOSCOPE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-monoscope
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-monoscope
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIFILE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-multifile
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-multifile
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_MULTIPART),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-multipart
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-multipart
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_REPLAYGAIN),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-replaygain
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-replaygain
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTP),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtp
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTPMANAGER),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtpmanager
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtpmanager
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_RTSP),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-rtsp
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-rtsp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SHAPEWIPE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-shapewipe
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-shapewipe
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SMPTE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-smpte
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-smpte
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPECTRUM),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-spectrum
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-spectrum
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_UDP),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-udp
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-udp
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOBOX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videobox
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videobox
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOCROP),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videocrop
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videocrop
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOFILTER),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videofilter
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videofilter
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VIDEOMIXER),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-videomixer
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-videomixer
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVENC),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavenc
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavenc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPARSE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavparse
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavparse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_Y4M),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-y4m
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-y4m
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-oss
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-oss
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_OSS4),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-oss4
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-oss4
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_V4L2),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-gst_v4l2
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-gst_v4l2
+endif
+
+ifeq ($(BR2_PACKAGE_XORG7),y)
+GST1_PLUGINS_GOOD_DEPENDENCIES += xlib_libX11 xlib_libXext xlib_libXv
+GST1_PLUGINS_GOOD_CONF_OPTS += \
+	--enable-x \
+	$(if $(BR2_PACKAGE_XLIB_LIBXFIXES),xlib_libXfixes) \
+	$(if $(BR2_PACKAGE_XLIB_LIBXDAMAGE),xlib_libXdamage)
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += \
+	--disable-x
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_CAIRO),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-cairo
+GST1_PLUGINS_GOOD_DEPENDENCIES += cairo
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-cairo
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_FLAC),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-flac
+GST1_PLUGINS_GOOD_DEPENDENCIES += flac
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-flac
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_GDKPIXBUF),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-gdk_pixbuf
+GST1_PLUGINS_GOOD_DEPENDENCIES += gdk-pixbuf
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-gdk_pixbuf
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_JPEG),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-jpeg
+GST1_PLUGINS_GOOD_DEPENDENCIES += jpeg
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-jpeg
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PNG),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-libpng
+GST1_PLUGINS_GOOD_DEPENDENCIES += libpng
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-libpng
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_PULSE),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-pulse
+GST1_PLUGINS_GOOD_DEPENDENCIES += pulseaudio
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-pulse
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SOUPHTTPSRC),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-soup
+GST1_PLUGINS_GOOD_DEPENDENCIES += libsoup
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-soup
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_SPEEX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-speex
+GST1_PLUGINS_GOOD_DEPENDENCIES += speex
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-speex
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_TAGLIB),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-taglib
+GST1_PLUGINS_GOOD_DEPENDENCIES += taglib
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-taglib
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_VPX),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-vpx
+GST1_PLUGINS_GOOD_DEPENDENCIES += libvpx
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-vpx
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_PLUGIN_WAVPACK),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-wavpack
+GST1_PLUGINS_GOOD_DEPENDENCIES += wavpack
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-wavpack
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_ZLIB),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-zlib
+GST1_PLUGINS_GOOD_DEPENDENCIES += zlib
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-zlib
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_GOOD_BZ2),y)
+GST1_PLUGINS_GOOD_CONF_OPTS += --enable-bz2
+GST1_PLUGINS_GOOD_DEPENDENCIES += bzip2
+else
+GST1_PLUGINS_GOOD_CONF_OPTS += --disable-bz2
+endif
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/Config.in Base/package/novasom_gstreamer/gst1-plugins-ugly/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-ugly/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,84 @@
+menuconfig BR2_PACKAGE_GST1_PLUGINS_UGLY
+	bool "gst1-plugins-ugly"
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	help
+	  A set of well-supported plug-ins for GStreamer, but might pose
+	  problems for distributors.
+
+	  http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_GST1_PLUGINS_UGLY
+
+comment "dependency-less plugins"
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_ASFDEMUX
+	bool "asfdemux"
+	help
+	  Demuxes and muxes audio and video in Microsofts ASF format
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDLPCMDEC
+	bool "dvdlpcmdec"
+	help
+	  Decode DVD LPCM frames into standard PCM
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDSUB
+	bool "dvdsub"
+	help
+	  DVD subtitle parser and decoder
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_XINGMUX
+	bool "xingmux"
+	help
+	  Add XING tags to mpeg audio files
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_REALMEDIA
+	bool "realmedia"
+	help
+	  RealMedia support plugins
+
+comment "plugins with external dependencies (there may be more available)"
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDREAD
+	bool "dvdread"
+	depends on !BR2_STATIC_LIBS # libdvdread
+	select BR2_PACKAGE_LIBDVDREAD
+	help
+	  Access a DVD with dvdread
+
+comment "dvdread needs a toolchain w/ dynamic library"
+	depends on BR2_STATIC_LIBS
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_LAME
+	bool "lame (*.mp3 audio encoder)"
+	select BR2_PACKAGE_LAME
+	help
+	  Encode MP3s with LAME
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MAD
+	bool "mad (*.mp3 audio)"
+	select BR2_PACKAGE_LIBID3TAG
+	select BR2_PACKAGE_LIBMAD
+	help
+	  mp3 decoding based on the mad library
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPG123
+	bool "mpg123 (*.mp3 audio)"
+	select BR2_PACKAGE_MPG123
+	help
+	  mp3 decoding based on the mpg123 library
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPEG2DEC
+	bool "mpeg2dec"
+	select BR2_PACKAGE_LIBMPEG2
+	help
+	  LibMpeg2 decoder
+
+config BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_X264
+	bool "x264"
+	select BR2_PACKAGE_X264
+	help
+	  x264 encoder
+
+# Note: to get descriptions use the following.
+# # find . -name 'plugin-*.xml' | xargs grep -m 1 description
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.hash Base/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-1.8.1.tar.xz.sha256sum
+sha256	8e656a9a3be60d7e7ed3fb8e2a22d070b1f54f95d0b22accd876360e659446ce  gst-plugins-ugly-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.mk Base/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-plugins-ugly/gst1-plugins-ugly.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,115 @@
+################################################################################
+#
+# gst1-plugins-ugly
+#
+################################################################################
+
+GST1_PLUGINS_UGLY_VERSION = 1.8.1
+GST1_PLUGINS_UGLY_SOURCE = gst-plugins-ugly-$(GST1_PLUGINS_UGLY_VERSION).tar.xz
+GST1_PLUGINS_UGLY_SITE = http://gstreamer.freedesktop.org/src/gst-plugins-ugly
+GST1_PLUGINS_UGLY_LICENSE_FILES = COPYING
+# GPL licensed plugins will append to GST1_PLUGINS_UGLY_LICENSE if enabled.
+GST1_PLUGINS_UGLY_LICENSE = LGPLv2.1+
+
+GST1_PLUGINS_UGLY_CONF_OPTS = --disable-examples --disable-valgrind
+
+GST1_PLUGINS_UGLY_CONF_OPTS += \
+	--disable-a52dec \
+	--disable-amrnb \
+	--disable-amrwb \
+	--disable-cdio \
+	--disable-sidplay \
+	--disable-twolame
+
+GST1_PLUGINS_UGLY_DEPENDENCIES = gstreamer1 gst1-plugins-base
+
+ifeq ($(BR2_PACKAGE_ORC),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-orc
+GST1_PLUGINS_UGLY_DEPENDENCIES += orc
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_ASFDEMUX),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-asfdemux
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-asfdemux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDLPCMDEC),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdlpcmdec
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdlpcmdec
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDSUB),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdsub
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdsub
+endif
+
+ifeq ($(BR2_PACKAGE_GST_PLUGINS_UGL1_PLUGIN_XINGMUX),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-xingmux
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-xingmux
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_REALMEDIA),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-realmedia
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-realmedia
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_DVDREAD),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-dvdread
+GST1_PLUGINS_UGLY_DEPENDENCIES += libdvdread
+GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-dvdread
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_LAME),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-lame
+GST1_PLUGINS_UGLY_DEPENDENCIES += lame
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-lame
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MAD),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mad
+GST1_PLUGINS_UGLY_DEPENDENCIES += libid3tag libmad
+GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mad
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPG123),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mpg123
+GST1_PLUGINS_UGLY_DEPENDENCIES += mpg123
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mpg123
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_MPEG2DEC),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-mpeg2dec
+GST1_PLUGINS_UGLY_DEPENDENCIES += libmpeg2
+GST1_PLUGINS_ULGY_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-mpeg2dec
+endif
+
+ifeq ($(BR2_PACKAGE_GST1_PLUGINS_UGLY_PLUGIN_X264),y)
+GST1_PLUGINS_UGLY_CONF_OPTS += --enable-x264
+GST1_PLUGINS_UGLY_DEPENDENCIES += x264
+GST1_PLUGINS_UGLY_HAS_GPL_LICENSE = y
+else
+GST1_PLUGINS_UGLY_CONF_OPTS += --disable-x264
+endif
+
+# Add GPL license if GPL plugins enabled.
+ifeq ($(GST1_PLUGINS_UGLY_HAS_GPL_LICENSE),y)
+GST1_PLUGINS_UGLY_LICENSE += GPLv2
+endif
+
+# Use the following command to extract license info for plugins.
+# # find . -name 'plugin-*.xml' | xargs grep license
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-validate/Config.in Base/package/novasom_gstreamer/gst1-validate/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gst1-validate/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-validate/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,16 @@
+config BR2_PACKAGE_GST1_VALIDATE
+	bool "gst1-validate"
+	depends on BR2_PACKAGE_PYTHON
+	select BR2_PACKAGE_GST1_PLUGINS_BASE
+	select BR2_PACKAGE_PYTHON_PYEXPAT
+	# cairo is autodetected but needs PNG support
+	select BR2_PACKAGE_CAIRO_PNG if BR2_PACKAGE_CAIRO
+	help
+	  GstValidate is a tool that allows GStreamer developers to
+	  check that the GstElements they write behave the way they
+	  are supposed to.
+
+	  http://gstreamer.freedesktop.org/
+
+comment "gst1-validate depends on python"
+	depends on !BR2_PACKAGE_PYTHON
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-validate/gst1-validate.hash Base/package/novasom_gstreamer/gst1-validate/gst1-validate.hash
--- buildroot-2016.05/package/novasom_gstreamer/gst1-validate/gst1-validate.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-validate/gst1-validate.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gst-validate/gst-validate-1.8.1.tar.xz.sha256sum
+sha256 a9b208c014cca2dc515599f01fd3a7a294133fd936366e74f439b9bc96a1ccbf  gst-validate-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gst1-validate/gst1-validate.mk Base/package/novasom_gstreamer/gst1-validate/gst1-validate.mk
--- buildroot-2016.05/package/novasom_gstreamer/gst1-validate/gst1-validate.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gst1-validate/gst1-validate.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,22 @@
+################################################################################
+#
+# gst1-validate
+#
+################################################################################
+
+GST1_VALIDATE_VERSION = 1.8.1
+GST1_VALIDATE_SOURCE = gst-validate-$(GST1_VALIDATE_VERSION).tar.xz
+GST1_VALIDATE_SITE = http://gstreamer.freedesktop.org/src/gst-validate
+GST1_VALIDATE_LICENSE = LGPLv2.1+
+GST1_VALIDATE_LICENSE_FILES = COPYING
+
+GST1_VALIDATE_CONF_OPTS = --disable-sphinx-doc
+
+GST1_VALIDATE_DEPENDENCIES = \
+	gstreamer1 \
+	gst1-plugins-base \
+	host-python \
+	python \
+	$(if $(BR2_PACKAGE_CAIRO),cairo)
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gstreamer1/Config.in Base/package/novasom_gstreamer/gstreamer1/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gstreamer1/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gstreamer1/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,55 @@
+comment "gstreamer 1.x needs a toolchain w/ wchar, threads"
+	depends on BR2_USE_MMU
+	depends on !BR2_USE_WCHAR || !BR2_TOOLCHAIN_HAS_THREADS
+
+config BR2_PACKAGE_GSTREAMER1
+	bool "gstreamer 1.x"
+	depends on BR2_USE_WCHAR # glib2
+	depends on BR2_TOOLCHAIN_HAS_THREADS # glib2
+	depends on BR2_USE_MMU # glib2
+	select BR2_PACKAGE_LIBGLIB2
+	help
+	  GStreamer is an open source multimedia framework. This 1.x version of
+	  Gstreamer is incompatible with Gstreamer 0.10.x.
+
+	  http://gstreamer.freedesktop.org/
+
+if BR2_PACKAGE_GSTREAMER1
+
+config BR2_PACKAGE_GSTREAMER1_PARSE
+	bool "enable command-line parser"
+	default y
+	help
+	  Enable command line parser for gstreamer. This may increase the CPU
+	  overhead by a small amount.
+
+config BR2_PACKAGE_GSTREAMER1_TRACE
+	bool "enable tracing subsystem"
+	default y
+	help
+	  Enable the tracing subsystem within gstreamer. This may increase CPU
+	  overhead by a small amount.
+
+config BR2_PACKAGE_GSTREAMER1_GST_DEBUG
+	bool "enable gst-debug trace support"
+	default y
+	help
+	  Enable support for the gst-debug tracing functionality in gstreamer.
+	  This has limited CPU overhead, but does increase the rootfs size
+	  somewhat.
+
+config BR2_PACKAGE_GSTREAMER1_PLUGIN_REGISTRY
+	bool "enable plugin registry"
+	default y
+	help
+	  Enable support for the GStreamer plugin registry. This may increase
+	  the launch-time for a GStreamer application.
+
+config BR2_PACKAGE_GSTREAMER1_INSTALL_TOOLS
+	bool "install gst-launch & gst-inspect"
+	default y
+	help
+	  Install the gst-launch and gst-inspect tools. This will take up
+	  additional space on the target.
+
+endif
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gstreamer1/gstreamer1.hash Base/package/novasom_gstreamer/gstreamer1/gstreamer1.hash
--- buildroot-2016.05/package/novasom_gstreamer/gstreamer1/gstreamer1.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gstreamer1/gstreamer1.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# From http://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.8.1.tar.xz.sha256sum
+sha256	5a3722fb9302dd977c17ced4240293dc777cb716dc98c8cca63d75c27e5e3107  gstreamer-1.8.1.tar.xz
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gstreamer1/gstreamer1.mk Base/package/novasom_gstreamer/gstreamer1/gstreamer1.mk
--- buildroot-2016.05/package/novasom_gstreamer/gstreamer1/gstreamer1.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gstreamer1/gstreamer1.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,49 @@
+################################################################################
+#
+# gstreamer1
+#
+################################################################################
+
+GSTREAMER1_VERSION = 1.8.1
+GSTREAMER1_SOURCE = gstreamer-$(GSTREAMER1_VERSION).tar.xz
+GSTREAMER1_SITE = http://gstreamer.freedesktop.org/src/gstreamer
+GSTREAMER1_INSTALL_STAGING = YES
+GSTREAMER1_LICENSE_FILES = COPYING
+GSTREAMER1_LICENSE = LGPLv2+, LGPLv2.1+
+
+# Checking if unaligned memory access works correctly cannot be done when cross
+# compiling. For the following architectures there is no information available
+# in the configure script.
+ifeq ($(BR2_arc)$(BR2_xtensa)$(BR2_microblaze)$(BR2_nios2),y)
+GSTREAMER1_CONF_ENV = as_cv_unaligned_access=no
+endif
+ifeq ($(BR2_aarch64),y)
+GSTREAMER1_CONF_ENV = as_cv_unaligned_access=yes
+endif
+
+GSTREAMER1_CONF_OPTS = \
+	--disable-examples \
+	--disable-tests \
+	--disable-failing-tests \
+	--disable-valgrind \
+	--disable-benchmarks \
+	--disable-check \
+	$(if $(BR2_PACKAGE_GSTREAMER1_TRACE),,--disable-trace) \
+	$(if $(BR2_PACKAGE_GSTREAMER1_PARSE),,--disable-parse) \
+	$(if $(BR2_PACKAGE_GSTREAMER1_GST_DEBUG),,--disable-gst-debug) \
+	$(if $(BR2_PACKAGE_GSTREAMER1_PLUGIN_REGISTRY),,--disable-registry) \
+	$(if $(BR2_PACKAGE_GSTREAMER1_INSTALL_TOOLS),,--disable-tools)
+
+GSTREAMER1_DEPENDENCIES = libglib2 host-pkgconf host-bison host-flex
+
+# gstreamer-1.6 changed the location of its gstconfig.h file,
+# and unfortunately, not all (by far!) consumers have been
+# updated to look in the correct location.
+# Add a symlink to the legacy location
+define GSTREAMER1_LEGACY_CGSTCONFIG_H
+	cd $(STAGING_DIR)/usr/include/gstreamer-1.0/gst && \
+		ln -sf ../../../lib/gstreamer-1.0/include/gst/gstconfig.h .
+endef
+GSTREAMER1_POST_INSTALL_STAGING_HOOKS += GSTREAMER1_LEGACY_CGSTCONFIG_H
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gstreamer-imx/Config.in Base/package/novasom_gstreamer/gstreamer-imx/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/gstreamer-imx/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gstreamer-imx/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,8 @@
+config BR2_PACKAGE_GSTREAMER_IMX
+	bool "gstreamer_imx"
+	depends on BR2_arm # Only relevant for i.MX
+	depends on BR2_LINUX_KERNEL
+	help
+	  gstreamer_imx for the Freescale i.MX SoCs.
+
+
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/gstreamer-imx/gstreamer-imx.mk Base/package/novasom_gstreamer/gstreamer-imx/gstreamer-imx.mk
--- buildroot-2016.05/package/novasom_gstreamer/gstreamer-imx/gstreamer-imx.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/gstreamer-imx/gstreamer-imx.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,37 @@
+################################################################################
+#
+# gstreamer-imx
+#
+################################################################################
+
+GSTREAMER_IMX_VERSION = 0.12.2
+GSTREAMER_IMX_SITE = $(FREESCALE_IMX_SITE)
+GSTREAMER_IMX_SOURCE = gstreamer-imx-$(GSTREAMER_IMX_VERSION).tar.bz2
+
+GSTREAMER_IMX_DEPENDENCIES = host-pkgconf host-python imx-gpu-viv imx-vpu gstreamer1 gst1-plugins-base gst1-plugins-bad gst1-libav
+GSTREAMER_IMX_DEPENDENCIES += imx-codec imx-parser linux
+GSTREAMER_IMX_CONF_ENV += CPPFLAGS="$(TARGET_CPPFLAGS) -I$(LINUX_DIR)/include/uapi -I$(LINUX_DIR)/include "
+
+
+GSTREAMER_IMX_CONF_OPTS += \
+        --prefix=/usr  
+	--kernel-headers=$(GSTREAMER_IMX_CONF_ENV)
+
+# $(GSTREAMER_IMX_CONF_ENV) 
+                
+define GSTREAMER_IMX_CONFIGURE_CMDS
+        (cd $(@D); \
+                $(TARGET_CONFIGURE_OPTS) \
+                $(HOST_DIR)/usr/bin/python2 ./waf configure $(GSTREAMER_IMX_CONF_OPTS) --kernel-headers=$(LINUX_DIR)/include \
+        )
+endef
+
+define GSTREAMER_IMX_BUILD_CMDS
+        cd $(@D) && $(TARGET_MAKE_ENV) $(HOST_DIR)/usr/bin/python2 ./waf
+endef
+
+define GSTREAMER_IMX_INSTALL_TARGET_CMDS
+        cd $(@D) && $(TARGET_MAKE_ENV) $(HOST_DIR)/usr/bin/python2 ./waf install --destdir=$(TARGET_DIR)
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-codec/Config.in Base/package/novasom_gstreamer/imx-codec/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-codec/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-codec/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,13 @@
+config BR2_PACKAGE_IMX_CODEC
+	bool "imx-codec"
+	depends on BR2_arm # Only relevant for i.MX
+	depends on BR2_TOOLCHAIN_USES_GLIBC # prebuilt binaries
+	help
+	  Binary codec libraries for the Freescale i.MX SoCs.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
+
+comment "libfslcodec needs an (e)glibc toolchain"
+	depends on BR2_arm
+	depends on !BR2_TOOLCHAIN_USES_GLIBC
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-codec/imx-codec.mk Base/package/novasom_gstreamer/imx-codec/imx-codec.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-codec/imx-codec.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-codec/imx-codec.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,21 @@
+################################################################################
+#
+# imx-codec
+#
+################################################################################
+
+IMX_CODEC_VERSION = 4.0.9
+IMX_CODEC_SOURCE = imx-codec-$(IMX_CODEC_VERSION).tar.gz
+IMX_CODEC_SITE = http://gstreamer.freedesktop.org/src/gstreamer
+IMX_CODEC_INSTALL_STAGING = YES
+IMX_CODEC_LICENSE_FILES = COPYING
+IMX_CODEC_LICENSE = LGPLv2+ LGPLv2.1+
+
+IMX_CODEC_DEPENDENCIES = gstreamer1
+
+#IMX_CODEC_CONF_OPTS += --libexecdir=/usr/lib/imx-codec --enable-fhw --disable-vpu
+IMX_CODEC_CONF_OPTS += --libexecdir=/usr/lib/imx-codec --enable-fhw --enable-vpu
+
+
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-gst1alsaplugins/Config.in Base/package/novasom_gstreamer/imx-gst1alsaplugins/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-gst1alsaplugins/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-gst1alsaplugins/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,15 @@
+comment "imx_gst1alsaplugins needs an imx-specific Linux kernel to be built"
+        depends on BR2_arm && !BR2_LINUX_KERNEL
+
+config BR2_PACKAGE_IMX_GST1ALSAPLUGINS
+	bool "imx_gst1alsaplugins"
+	depends on BR2_USE_WCHAR # glib2
+	depends on BR2_TOOLCHAIN_HAS_THREADS # glib2
+	depends on BR2_USE_MMU # glib2
+	depends on BR2_LINUX_KERNEL
+	select BR2_ALSA_LIB
+	help
+	  imx_gst1alsaplugins is a NXP set of plugins for gstreamere1.0
+	  http://gstreamer.freedesktop.org/
+
+
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-gst1alsaplugins/imx-gst1alsaplugins.mk Base/package/novasom_gstreamer/imx-gst1alsaplugins/imx-gst1alsaplugins.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-gst1alsaplugins/imx-gst1alsaplugins.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-gst1alsaplugins/imx-gst1alsaplugins.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,18 @@
+################################################################################
+#
+# imx_gst1alsaplugins
+#
+################################################################################
+
+IMX_GST1ALSAPLUGINS_VERSION = 1.0.26
+IMX_GST1ALSAPLUGINS_SOURCE = imx-alsa-plugins-$(IMX_GST1ALSAPLUGINS_VERSION).tar.bz2
+IMX_GST1ALSAPLUGINS_SITE = http://gstreamer.freedesktop.org/src/gstreamer
+IMX_GST1ALSAPLUGINS_INSTALL_STAGING = YES
+IMX_GST1ALSAPLUGINS_LICENSE_FILES = COPYING
+IMX_GST1ALSAPLUGINS_LICENSE = LGPLv2+ LGPLv2.1+
+
+IMX_GST1ALSAPLUGINS_CONF_ENV += CPPFLAGS="$(TARGET_CPPFLAGS) -I$(LINUX_DIR)/include/uapi -I$(LINUX_DIR)/include"
+
+IMX_GST1ALSAPLUGINS_DEPENDENCIES = linux alsa-lib gstreamer1 gst1-plugins-base imx-codec imx-parser
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-kobs/Config.in Base/package/novasom_gstreamer/imx-kobs/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-kobs/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-kobs/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,10 @@
+config BR2_PACKAGE_IMX_KOBS
+	bool "imx-kobs"
+	depends on BR2_arm # Only relevant for i.MX
+	help
+	  The imx-kobs tool is used for writing images to NAND on i.MX
+	  platforms.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
+
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-kobs/imx-kobs.mk Base/package/novasom_gstreamer/imx-kobs/imx-kobs.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-kobs/imx-kobs.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-kobs/imx-kobs.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,12 @@
+################################################################################
+#
+# imx-kobs
+#
+################################################################################
+
+IMX_KOBS_VERSION = 5.4
+IMX_KOBS_SITE = $(FREESCALE_IMX_SITE)
+IMX_KOBS_LICENSE = GPLv2+
+IMX_KOBS_LICENSE_FILES = COPYING
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-lib/Config.in Base/package/novasom_gstreamer/imx-lib/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-lib/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-lib/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,16 @@
+comment "imx-lib needs an imx-specific Linux kernel to be built"
+	depends on BR2_arm && !BR2_LINUX_KERNEL
+
+config BR2_PACKAGE_IMX_LIB
+	bool "imx-lib"
+	depends on BR2_LINUX_KERNEL
+	depends on BR2_arm # Only relevant for i.MX
+	help
+	  Library of userspace helpers specific for the Freescale i.MX
+	  platform. It wraps the kernel interfaces for some i.MX platform
+	  specific drivers. It requires a kernel that includes the i.MX
+	  specific headers to be built.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
+
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-lib/imx-lib.mk Base/package/novasom_gstreamer/imx-lib/imx-lib.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-lib/imx-lib.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-lib/imx-lib.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,40 @@
+################################################################################
+#
+# imx-lib
+#
+################################################################################
+
+IMX_LIB_VERSION = 5.4
+IMX_LIB_SITE = $(FREESCALE_IMX_SITE)
+IMX_LIB_LICENSE = LGPLv2.1+
+IMX_LIB_LICENSE_FILES = EULA
+
+IMX_LIB_INSTALL_STAGING = YES
+
+# imx-lib needs access to imx-specific kernel headers
+IMX_LIB_DEPENDENCIES += linux
+IMX_LIB_INCLUDE = \
+	-I$(LINUX_DIR)/drivers/mxc/security/rng/include \
+	-I$(LINUX_DIR)/drivers/mxc/security/sahara2/include \
+	-idirafter $(LINUX_DIR)/include/uapi
+
+IMX_LIB_MAKE_ENV = \
+	$(TARGET_MAKE_ENV) \
+	$(TARGET_CONFIGURE_OPTS) \
+	CROSS_COMPILE="$(TARGET_CROSS)" \
+	PLATFORM=$(BR2_PACKAGE_FREESCALE_IMX_PLATFORM) \
+	INCLUDE="$(IMX_LIB_INCLUDE)"
+
+define IMX_LIB_BUILD_CMDS
+	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D)
+endef
+
+define IMX_LIB_INSTALL_STAGING_CMDS
+	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(STAGING_DIR) install
+endef
+
+define IMX_LIB_INSTALL_TARGET_CMDS
+	$(IMX_LIB_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(TARGET_DIR) install
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-parser/Config.in Base/package/novasom_gstreamer/imx-parser/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-parser/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-parser/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,8 @@
+config BR2_PACKAGE_IMX_PARSER
+	bool "imx-parser"
+	depends on BR2_arm # Only relevant for i.MX
+	help
+	  Binary parser libraries for the Freescale i.MX SoCs.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-parser/imx-parser.mk Base/package/novasom_gstreamer/imx-parser/imx-parser.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-parser/imx-parser.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-parser/imx-parser.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,20 @@
+################################################################################
+#
+# imx-parser
+#
+################################################################################
+
+IMX_PARSER_VERSION = 4.0.9
+IMX_PARSER_SOURCE = imx-parser-$(IMX_PARSER_VERSION).tar.gz
+IMX_PARSER_SITE = http://gstreamer.freedesktop.org/src/gstreamer
+IMX_PARSER_INSTALL_STAGING = YES
+IMX_PARSER_LICENSE_FILES = COPYING
+IMX_PARSER_LICENSE = LGPLv2+ LGPLv2.1+
+
+IMX_PARSER_DEPENDENCIES = gstreamer1
+
+IMX_PARSER_CONF_OPTS += --enable-fhw
+
+
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-vpu/Config.in Base/package/novasom_gstreamer/imx-vpu/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/imx-vpu/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-vpu/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,12 @@
+config BR2_PACKAGE_IMX_VPU
+	bool "imx-vpu"
+	depends on BR2_arm # Only relevant for i.MX
+	select BR2_PACKAGE_FIRMWARE_IMX
+	help
+	  Library of userspace helpers specific for the Freescale i.MX
+	  platform. It wraps the kernel interfaces for the i.MX platform
+	  Video Processing Unit (VPU) driver. It requires a kernel that
+	  includes the i.MX specific headers to be built.
+
+	  This library is provided by Freescale as-is and doesn't have
+	  an upstream.
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/imx-vpu/imx-vpu.mk Base/package/novasom_gstreamer/imx-vpu/imx-vpu.mk
--- buildroot-2016.05/package/novasom_gstreamer/imx-vpu/imx-vpu.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/imx-vpu/imx-vpu.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,39 @@
+################################################################################
+#
+# imx-vpu
+#
+################################################################################
+
+IMX_VPU_VERSION = 5.4.33
+IMX_VPU_SITE = $(FREESCALE_IMX_SITE)
+IMX_VPU_SOURCE = imx-vpu-$(IMX_VPU_VERSION).bin
+
+IMX_VPU_INSTALL_STAGING = YES
+
+IMX_VPU_MAKE_ENV = \
+	$(TARGET_MAKE_ENV) \
+	$(TARGET_CONFIGURE_OPTS) \
+	CROSS_COMPILE="$(TARGET_CROSS)" \
+	PLATFORM=$(BR2_PACKAGE_FREESCALE_IMX_PLATFORM)
+
+IMX_VPU_LICENSE = Freescale Semiconductor Software License Agreement
+IMX_VPU_LICENSE_FILES = EULA COPYING
+IMX_VPU_REDISTRIBUTE = NO
+
+define IMX_VPU_EXTRACT_CMDS
+	$(call FREESCALE_IMX_EXTRACT_HELPER,$(DL_DIR)/$(IMX_VPU_SOURCE))
+endef
+
+define IMX_VPU_BUILD_CMDS
+	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D)
+endef
+
+define IMX_VPU_INSTALL_STAGING_CMDS
+	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(STAGING_DIR) install
+endef
+
+define IMX_VPU_INSTALL_TARGET_CMDS
+	$(IMX_VPU_MAKE_ENV) $(MAKE1) -C $(@D) DEST_DIR=$(TARGET_DIR) install
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/libimxvpuapi/Config.in Base/package/novasom_gstreamer/libimxvpuapi/Config.in
--- buildroot-2016.05/package/novasom_gstreamer/libimxvpuapi/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/libimxvpuapi/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,7 @@
+config BR2_PACKAGE_LIBIMXVPUAPI
+	bool "libimxvpuapi"
+	depends on BR2_arm # Only relevant for i.MX
+	help
+	  libimxvpuapi for the Freescale i.MX SoCs.
+
+
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/libimxvpuapi/libimxvpuapi.mk Base/package/novasom_gstreamer/libimxvpuapi/libimxvpuapi.mk
--- buildroot-2016.05/package/novasom_gstreamer/libimxvpuapi/libimxvpuapi.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/libimxvpuapi/libimxvpuapi.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,34 @@
+################################################################################
+#
+# libimxvpuapi
+#
+################################################################################
+
+LIBIMXVPUAPI_VERSION = 0.10.2
+LIBIMXVPUAPI_SITE = $(FREESCALE_IMX_SITE)
+LIBIMXVPUAPI_SOURCE = libimxvpuapi-$(LIBIMXVPUAPI_VERSION).tar.bz2
+
+LIBIMXVPUAPI_DEPENDENCIES = host-pkgconf host-python imx-gpu-viv imx-vpu
+
+LIBIMXVPUAPI_CONF_OPTS += \
+        --prefix=/usr  
+	#--use-fslwrapper-backend
+
+define LIBIMXVPUAPI_CONFIGURE_CMDS
+        (cd $(@D); \
+                $(TARGET_CONFIGURE_OPTS) \
+                $(LIBIMXVPUAPI_CONF_ENV) \
+                $(HOST_DIR)/usr/bin/python2 ./waf configure $(LIBIMXVPUAPI_CONF_OPTS) \
+        )
+endef
+
+define LIBIMXVPUAPI_BUILD_CMDS
+        cd $(@D) && $(TARGET_MAKE_ENV) $(HOST_DIR)/usr/bin/python2 ./waf
+endef
+
+define LIBIMXVPUAPI_INSTALL_TARGET_CMDS
+        cd $(@D) && $(TARGET_MAKE_ENV) $(HOST_DIR)/usr/bin/python2 ./waf install --destdir=$(TARGET_DIR)
+        cd $(@D) && $(TARGET_MAKE_ENV) $(HOST_DIR)/usr/bin/python2 ./waf install --destdir=$(STAGING_DIR)
+endef
+
+$(eval $(generic-package))
diff -Naur -x gcc buildroot-2016.05/package/novasom_gstreamer/novasom_gstreamer.mk Base/package/novasom_gstreamer/novasom_gstreamer.mk
--- buildroot-2016.05/package/novasom_gstreamer/novasom_gstreamer.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/novasom_gstreamer/novasom_gstreamer.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1 @@
+include package/novasom_gstreamer/*/*.mk
diff -Naur -x gcc buildroot-2016.05/package/sdl2_gfx/Config.in Base/package/sdl2_gfx/Config.in
--- buildroot-2016.05/package/sdl2_gfx/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_gfx/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,10 @@
+config BR2_PACKAGE_SDL2_GFX
+	bool "sdl2_gfx"
+	depends on BR2_PACKAGE_SDL2
+	help
+	  The SDL2_gfx library is an extension to the SDL2 library
+	  which provides basic antialiased drawing routines such as
+	  lines, circles or polygons, an interpolating rotozoomer for
+	  SDL surfaces, framerate control and MMX image filters.
+
+	  http://www.ferzkopp.net/wordpress/2016/01/02/sdl_gfx-sdl2_gfx
diff -Naur -x gcc buildroot-2016.05/package/sdl2_gfx/sdl2_gfx.hash Base/package/sdl2_gfx/sdl2_gfx.hash
--- buildroot-2016.05/package/sdl2_gfx/sdl2_gfx.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_gfx/sdl2_gfx.hash	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 d69bcbceb811b4e5712fbad3ede737166327f44b727f1388c32581dbbe8c599a  SDL2_gfx-1.0.1.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/sdl2_gfx/sdl2_gfx.mk Base/package/sdl2_gfx/sdl2_gfx.mk
--- buildroot-2016.05/package/sdl2_gfx/sdl2_gfx.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_gfx/sdl2_gfx.mk	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,27 @@
+################################################################################
+#
+# sdl2_gfx
+#
+################################################################################
+
+SDL2_GFX_VERSION = 1.0.1
+SDL2_GFX_SOURCE = SDL2_gfx-$(SDL2_GFX_VERSION).tar.gz
+SDL2_GFX_SITE = http://www.ferzkopp.net/Software/SDL2_gfx
+SDL2_GFX_LICENSE = zlib
+SDL2_GFX_LICENSE_FILES = COPYING SDL2_framerate.h
+SDL2_GFX_INSTALL_STAGING = YES
+SDL2_GFX_DEPENDENCIES = sdl2 host-pkgconf
+SDL2_GFX_CONF_OPTS = --disable-sdltest
+# configure/Makefile.in not up-to-date, causing aclocal to be used at
+# build time if we don't autoreconf.
+SDL2_GFX_AUTORECONF = YES
+
+# Even though x86_64 processors support MMX, the MMX-specific assembly
+# code in sdl2_gfx is IA32 specific, and does not build for x86_64.
+ifeq ($(BR2_i386)$(BR2_X86_CPU_HAS_MMX),yy)
+SDL2_GFX_CONF_OPTS += --enable-mmx
+else
+SDL2_GFX_CONF_OPTS += --disable-mmx
+endif
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/sdl2_image/Config.in Base/package/sdl2_image/Config.in
--- buildroot-2016.05/package/sdl2_image/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_image/Config.in	2017-10-09 17:21:47.235098361 +0200
@@ -0,0 +1,9 @@
+config BR2_PACKAGE_SDL2_IMAGE
+	bool "sdl2_image"
+	depends on BR2_PACKAGE_SDL2
+	help
+	  SDL2_image is an image file loading library. It loads images
+	  as SDL surfaces, and supports the following formats: BMP,
+	  GIF, JPEG, LBM, PCX, PNG, PNM, TGA, TIFF, XCF, XPM, XV.
+
+	  http://www.libsdl.org/projects/SDL_image/
diff -Naur -x gcc buildroot-2016.05/package/sdl2_image/sdl2_image.hash Base/package/sdl2_image/sdl2_image.hash
--- buildroot-2016.05/package/sdl2_image/sdl2_image.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_image/sdl2_image.hash	2017-10-09 17:21:47.239098361 +0200
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 3a3eafbceea5125c04be585373bfd8b3a18f259bd7eae3efc4e6d8e60e0d7f64  SDL2_image-2.0.1.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/sdl2_image/sdl2_image.mk Base/package/sdl2_image/sdl2_image.mk
--- buildroot-2016.05/package/sdl2_image/sdl2_image.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_image/sdl2_image.mk	2017-10-09 17:21:47.239098361 +0200
@@ -0,0 +1,58 @@
+################################################################################
+#
+# sdl2_image
+#
+################################################################################
+
+SDL2_IMAGE_VERSION = 2.0.1
+SDL2_IMAGE_SOURCE = SDL2_image-$(SDL2_IMAGE_VERSION).tar.gz
+SDL2_IMAGE_SITE = http://www.libsdl.org/projects/SDL_image/release
+SDL2_IMAGE_INSTALL_STAGING = YES
+SDL2_IMAGE_LICENSE = zlib
+SDL2_IMAGE_LICENSE_FILES = COPYING.txt
+
+# Unconditionally enable support for image formats that don't require
+# any dependency.
+SDL2_IMAGE_CONF_OPTS = \
+	--disable-sdltest \
+	--enable-bmp \
+	--enable-gif \
+	--enable-lbm \
+	--enable-pcx \
+	--enable-pnm \
+	--enable-tga \
+	--enable-xcf \
+	--enable-xpm \
+	--enable-xv
+
+SDL2_IMAGE_DEPENDENCIES = sdl2 host-pkgconf
+
+ifeq ($(BR2_PACKAGE_JPEG),y)
+SDL2_IMAGE_CONF_OPTS += --enable-jpg
+SDL2_IMAGE_DEPENDENCIES += jpeg
+else
+SDL2_IMAGE_CONF_OPTS += --disable-jpg
+endif
+
+ifeq ($(BR2_PACKAGE_LIBPNG),y)
+SDL2_IMAGE_CONF_OPTS += --enable-png
+SDL2_IMAGE_DEPENDENCIES += libpng
+else
+SDL2_IMAGE_CONF_OPTS += --disable-png
+endif
+
+ifeq ($(BR2_PACKAGE_TIFF),y)
+SDL2_IMAGE_CONF_OPTS += --enable-tif
+SDL2_IMAGE_DEPENDENCIES += tiff
+else
+SDL2_IMAGE_CONF_OPTS += --disable-tif
+endif
+
+ifeq ($(BR2_PACKAGE_WEBP),y)
+SDL2_IMAGE_CONF_OPTS += --enable-webp
+SDL2_IMAGE_DEPENDENCIES += webp
+else
+SDL2_IMAGE_CONF_OPTS += --disable-webp
+endif
+
+$(eval $(autotools-package))
diff -Naur -x gcc buildroot-2016.05/package/sdl2_ttf/Config.in Base/package/sdl2_ttf/Config.in
--- buildroot-2016.05/package/sdl2_ttf/Config.in	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_ttf/Config.in	2017-10-09 17:21:47.239098361 +0200
@@ -0,0 +1,9 @@
+config BR2_PACKAGE_SDL2_TTF
+	bool "sdl2_ttf"
+	depends on BR2_PACKAGE_SDL2
+	select BR2_PACKAGE_FREETYPE
+	help
+	  SDL2_ttf is a sample TrueType font library. It allows you to
+	  use TrueType fonts in your SDL2 applications.
+
+	  http://www.libsdl.org/projects/SDL_ttf/
diff -Naur -x gcc buildroot-2016.05/package/sdl2_ttf/sdl2_ttf.hash Base/package/sdl2_ttf/sdl2_ttf.hash
--- buildroot-2016.05/package/sdl2_ttf/sdl2_ttf.hash	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_ttf/sdl2_ttf.hash	2017-10-09 17:21:47.239098361 +0200
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 34db5e20bcf64e7071fe9ae25acaa7d72bdc4f11ab3ce59acc768ab62fe39276  SDL2_ttf-2.0.14.tar.gz
diff -Naur -x gcc buildroot-2016.05/package/sdl2_ttf/sdl2_ttf.mk Base/package/sdl2_ttf/sdl2_ttf.mk
--- buildroot-2016.05/package/sdl2_ttf/sdl2_ttf.mk	1970-01-01 01:00:00.000000000 +0100
+++ Base/package/sdl2_ttf/sdl2_ttf.mk	2017-10-09 17:21:47.239098361 +0200
@@ -0,0 +1,30 @@
+################################################################################
+#
+# sdl2_ttf
+#
+################################################################################
+
+SDL2_TTF_VERSION = 2.0.14
+SDL2_TTF_SOURCE = SDL2_ttf-$(SDL2_TTF_VERSION).tar.gz
+SDL2_TTF_SITE = http://www.libsdl.org/projects/SDL_ttf/release
+SDL2_TTF_LICENSE = zlib
+SDL2_TTF_LICENSE_FILES = COPYING.txt
+SDL2_TTF_INSTALL_STAGING = YES
+SDL2_TTF_DEPENDENCIES = sdl2 freetype host-pkgconf
+SDL2_TTF_CONF_ENV = \
+	FREETYPE_CONFIG=$(STAGING_DIR)/usr/bin/freetype-config
+
+# x-includes and x-libraries must be set for cross-compiling
+# By default x_includes and x_libraries contains unsafe paths.
+# (/usr/include and /usr/lib)
+ifeq ($(BR2_PACKAGE_SDL2_X11),y)
+SDL2_TTF_CONF_OPTS += \
+	--with-x \
+	--x-includes=$(STAGING_DIR)/usr/include \
+	--x-libraries=$(STAGING_DIR)/usr/lib
+else
+SDL2_TTF_CONF_OPTS += \
+	--without-x
+endif
+
+$(eval $(autotools-package))
