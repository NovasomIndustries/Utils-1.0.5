#!/bin/sh
UPD_ELEMENTS="Bootloader/u-boot-novasomM8-2017.11 Bootloader/u-boot-novasomP-2015.04 Bootloader/u-boot-novasomU-2016.03 Kernel/linux-imx_4.1.15_1.2.0_ga Kernel/linux-imx_4.1.43 Kernel/linux-4.11.0-QualcommLinaro Kernel/linux-allw-4.14.0"
DIRS="${UPD_ELEMENTS} Doc Utils Qt/NOVAembed"

REPOCOUNT=`echo "$DIRS" | awk '{print NF}'`

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

COUNTMODS=0
COUNTRECV=0
INCREMENT=1

novaembed()
{
	cd /Devel/NOVAsom_SDK/Qt/NOVAembed/build-NOVAembed-Desktop-Debug
	make distclean
	/usr/lib/x86_64-linux-gnu/qt5/bin/qmake /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed.pro -r -spec linux-g++-64 CONFIG+=debug
	make
	cd /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed_P_Parser
	rm -rf obj bin
	mkdir -p obj bin/Debug
	gcc -Wall -g  -c src/dts_gen.c -o obj/dts_gen.o
	gcc -Wall -g  -c src/iomux.c -o obj/iomux.o
	gcc -Wall -g  -c src/main.c -o obj/main.o
	g++  -o bin/Debug/NOVAembed_P_Parser obj/dts_gen.o obj/iomux.o obj/main.o
	cd /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed_U_Parser
	rm -rf obj bin
	mkdir -p obj bin/Debug
	gcc -Wall -g  -c src/dts_gen.c -o obj/dts_gen.o
	gcc -Wall -g  -c src/iomux.c -o obj/iomux.o
	gcc -Wall -g  -c src/main.c -o obj/main.o
	g++  -o bin/Debug/NOVAembed_U_Parser obj/dts_gen.o obj/iomux.o obj/main.o  
}

gitloop()
{
gitbin="git -C $1"
#echo "Look for updates in ${1}"
echo "Look for updates in ${1}" >> /Devel/NOVAsom_SDK/Logs/update.log

# Fetches from all the remotes, although --all can be replaced with origin
$gitbin fetch origin
if [ $($gitbin rev-parse HEAD)>/dev/null 2>&1 != $($gitbin rev-parse @{u})>/dev/null 2>&1 ]; then
	cd $1
	COUNTMODS=`expr $COUNTMODS + $INCREMENT`;
	#$gitbin rebase @{u} --preserve-merges
	echo "Updates found in ${1}" >> /Devel/NOVAsom_SDK/Logs/update.log
	printf "  ${RED}Updates in ${1}${NC}"
	echo -n "  Do you want to update ? [Y/n] "
	read VAR
	if [ "${VAR}" = "Y" ]; then
		echo "Applying updates in ${1}" >> /Devel/NOVAsom_SDK/Logs/update.log
		if [ "${1}" = "/Devel/NOVAsom_SDK/Qt/NOVAembed" ]; then
			rm -f /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed/NOVAembed.pro.userOLD
			mv /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed.pro.user /Devel/NOVAsom_SDK/Qt/NOVAembed/NOVAembed.pro.userOLD
		fi
		if [ "${1}" = "/Devel/NOVAsom_SDK/Bootloader/u-boot-novasom-2016.03" ]; then
			rm -rf /Devel/NOVAsom_SDK/Bootloader/u-boot-novasom-2016.03/NOVAsomU
		fi
		git pull origin master >> /Devel/NOVAsom_SDK/Logs/update.log
		COUNTRECV=`expr $COUNTRECV + $INCREMENT`;
		# echo $1
		if [ "${1}" = "/Devel/NOVAsom_SDK/Qt/NOVAembed" ]; then
			HERE=`pwd`
			novaembed
			cd ${HERE} 
		fi
		printf "${GREEN}SYNC OK${NC} : ${1}"
	else
		printf "${RED}Update skipped${NC}"
	fi
else
	printf "${GREEN}SYNC OK${NC} : ${1}"
	echo " "
fi
}

echo ""
echo "***************************************"
echo "**  Check for remote modified files  **"
echo "***************************************"
echo ""

echo "Check on `date`" > /Devel/NOVAsom_SDK/Logs/update.log

for i in ${UPD_ELEMENTS}; do
	HERE=`pwd`
	if ! [ -d /Devel/NOVAsom_SDK/${i} ]; then
		cd `dirname $i`
		echo "`dirname $i`/`basename $i` not found, cloning"
		git clone https://github.com/NovasomIndustries/`basename $i`
	fi
	cd ${HERE}
done

if [ ! -d /Devel/NOVAsom_SDK/Qt/NOVAembed ]; then
	HERE=`pwd`
	cd /Devel/NOVAsom_SDK/Qt
	git clone https://github.com/NovasomIndustries/NOVAembed.git
	novaembed
	cd ${HERE} 
fi

for i in ${DIRS}; do
	gitloop /Devel/NOVAsom_SDK/$i
done
echo ""
[ "${COUNTMODS}" -ge "1" ] && printf "Finished. Found ${RED}${COUNTMODS}${NC} modification(s) , ${RED}${COUNTRECV}${NC} file(s) received from remote to ${GREEN}${REPOCOUNT}${NC} local repos"
[ "${COUNTMODS}" -le "0" ] && printf "Finished. Found ${GREEN}${COUNTMODS}${NC} modification(s) , ${GREEN}${COUNTRECV}${NC} file(s) received from remote to ${GREEN}${REPOCOUNT}${NC} local repos"
echo ""

exit ${COUNTRECV}

