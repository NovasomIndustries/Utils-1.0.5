#!/bin/sh
# ${1} is number of user partition
# ${2} is size of first user partition, if enabled
# ${3} is size of second user partition, if enabled
# ${4} is the device
# ${5} is the dtb for solo/dl
# ${6} is the dtb for quad

. ./functions

DISK=${4}
PREPEND_PATH="/Devel/NOVAsom_SDK"

DTB_FILESDL="${PREPEND_PATH}/DtbUserWorkArea/${5}"
DTB_FILEQ="${PREPEND_PATH}/DtbUserWorkArea/${6}"
KERNEL="${PREPEND_PATH}/Deploy/zImage"
FILESYSTEM="${PREPEND_PATH}/Deploy/uInitrd"
SPL_FILE="${PREPEND_PATH}/Deploy/SPL"
UBOOT_IMG="${PREPEND_PATH}/Deploy/u-boot.img"


#echo $1 $2 $3 $DISK $DTB_FILESDL $DTB_FILEQ
#echo $FILES
#exit

[ ! -b ${DISK} ] && echo "${DISK} not found"
[ ! -b ${DISK} ] && return 1
sudo umount ${DISK}* >/dev/null 2>&1
echo "Writing ${5} uSD"
sleep 1
sudo echo -n "Writing u-boot ... "
sudo dd if=/dev/zero of=${DISK} bs=4M count=1; sync
sudo dd if=${SPL_FILE} of=${DISK} bs=1k seek=1; sync
sync
echo "Done"

format_usd ${1} ${2} ${3} ${DISK}
if [ "$?" = "1" ]; then
	echo "Error formatting uSD!"
	echo "1" > /tmp/result
	return 1
fi

rm -rf tmpmount
mkdir tmpmount
sleep 1
sudo mount ${DISK}1 tmpmount
[ "$?" != "0" ] && return 1
sudo rm -rf tmpmount/*
[ "$?" != "0" ] && return 1

FILES="${UBOOT_IMG} ${KERNEL} ${FILESYSTEM}"
echo -n "Copying "
for i in ${FILES}; do
	FILENAME=`basename $i`
	echo -n "${FILENAME} "
	sudo cp $i tmpmount/.
	if [ "$?" != "0" ] ; then
		echo "Error writing files!"
		echo "1" > /tmp/result
		return 1
	fi
done
sudo cp ${DTB_FILEQ} tmpmount/imx6q-novasomP.dtb
sudo cp ${DTB_FILESDL} tmpmount/imx6sdl-novasomP.dtb
echo "Done"

sudo umount tmpmount
sync

echo "0" > /tmp/result
return 0
